<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>屌丝网管养成记-第七章-友情危机（未完成）</title>
      <link href="/2020/02/23/diao-si-wang-guan-yang-cheng-ji-di-qi-zhang-you-qing-wei-ji/"/>
      <url>/2020/02/23/diao-si-wang-guan-yang-cheng-ji-di-qi-zhang-you-qing-wei-ji/</url>
      
        <content type="html"><![CDATA[<p>我下楼吃了网吧供应的晚饭后又上楼了。号也没下，闲着没事我又开始跑60了。也不知道跑了几趟最后躺沙发上睡着了…醒来的时候已经是早上了，小胡他们几个都已经到网吧了。随便打了声招呼我就下楼吃早饭去了。吃完早餐上楼崽子安排说继续跑环，我们需要把昨天没有给客户交齐的部分补上。就这样大家又跑了一上午的60，快到中午吃饭的时候崽子又把几个人号上的钱都转给了他。完了也没说什么，不过几个号上还有没跑完的60环任务。任务不跑完是没法做其他事儿的，只能强制取消。但是后面的奖励都非常多，真要取消的话哥几个又不舍得。然后就没任务的在一边发愣，有任务的继续跑。就这么一直跑到了开饭时间，大家还按老规矩下楼把饭端到自己电脑前。准备组队抓鬼去。这队还没组好呢崽子又过来了，又接了几个订单下午继续跑环。这时候老秦忍不住了！问崽子，咱们不是一开始说好90级开始跑环的吗？崽子也说了一些什么到90跑200周期太长什么的早点挣钱创造利益才是正事。不过显然哥几个也不太乐意，但又无可奈何。其实大家来当代练，每个人都有自己的小算盘的。我当时就想着到最后能落下个号就行，因为上学那几年里我的号从来就没有超过100级过…小胡的心思和我差不多。老秦和大胖是想着什么时候不干了把号给卖了……赵坤倒是一直没表示过有什么想法。于是再怎么不满意你不还得听人家管事的。我们就这样继续跑60，那时候还没有什么小心思都是有多少金币全部上交只给自己就5万左右购买飞行棋就行。就这样直到下班我们这一整天总共每个号都上交了450万上下，老秦最多（这也是有原因的，毕竟老秦家里有电脑。在家的时候就经常跑环游戏水平也高）大胖其次坤儿和我排大胖后面，然后最少得就是小胡了。（倒不是说小胡玩的不好，只是小胡的性格就不是内种很有干劲的那种。我一直都觉得小胡同志总是慢慢悠悠的做事情，但是！从不出错……）就这样子单纯的跑环跑环，我们持续了20天。我们的订单也陆续的多了起来。但是金价也越来越低。因为当时区里面的一线梯队，已经进入90阶段了。这时候可以跑200环了。那200环的产出和60环是天差地别的……我们一开始既定的目标本来也是先升级到90然后跑200再开始出金的，这不是崽子自作主张要求先出金嘛。金商竞争可不得降价吗！崽子这个人也很奇怪，从我们租过房子后。他从来没有回租房的地方住过。老是在网吧里沙发上睡觉。再我们跑60环出金的那个阶段，我就发现了这家伙的自大。可能也是年轻的缘故，按照当时我们的收益（每天几百块钱进账是很正常的）。我虽然天天在网吧住，但是一开始我俩很少交流。这货基本上每天晚上都开小灶，羊肉串了。烤鱼什么的！这些个东西放那时候，我们同学几个是根本不舍得吃的。动不动就几十块，花起来很肉疼的……起初时候崽子自己在旁边吃他的，我就玩我的电脑。后来叫我一起吃，一开始当然我也没跟着吃。不过后来让了几次我也受不了嘴馋开始跟着一起吃了……前文有提过，我出门的时候是身无分文的。连抽个烟都是蹭……不过也是从蹭吃开始慢慢跟崽子有了点交流，我发现这人不单单是目光短浅还有好吃嘴这些了。这家伙想事儿大，一看现阶段挺赚钱。准备搞两班倒，当时讲的是天花乱坠的。但是赚钱又不关我的事儿对不，我只是来赚工资的。你是负责的你爱咋弄咋弄好了，我做好我的本职工作就行。中国有句古话叫吃人嘴短，拿人手软。我觉得我当时就应了这话。我天天跟人蹭吃蹭喝的，慢慢的崽子说什么话的时候我偶尔也会支持，给同学们做思想工作。同学们几个讨论崽子的时候，我也只是笑笑不吭声。慢慢发展成了，小胡大胖老秦赵坤他们四个单独说事，一看到我就不说了。同学几个和我的交流明显少了。老秦大胖他俩看我的眼神都有点怪怪的，小胡赵坤我倒是没发现什么，因为毕竟在学校玩的更近一些。经历过青春期的应该都或多或少会有这种情况，假如我和一圈人常接触。那么不知不觉就会，疏远了另外一圈人。假如这两圈人关系又不是太好。那么你就是也会被这一圈人除名。我觉得我当时应该就是这样子的情况了。当年我是想不通的，可现在十几年过去。我也能看明白了，因为在学校读书的时候。我身边经常就这样，我跟谁玩的好了。他跟谁不对脾气，我就也会跟着他一起不搭理某某人。其实我也不是说加入了崽子这个圈子，和他是朋友什么的。只不过是在那个阶段，我们待在一块的时间比较多了一点而已。结果就这样放任，慢慢的同学几个基本上和我就不怎么有什么交流了，只有小胡我和他说话时候他会笑呵呵的回我。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 屌丝网管 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>屌丝网管养成记-第六章-游戏代练</title>
      <link href="/2020/02/23/diao-si-wang-guan-yang-cheng-ji-di-liu-zhang-you-xi-dai-lian/"/>
      <url>/2020/02/23/diao-si-wang-guan-yang-cheng-ji-di-liu-zhang-you-xi-dai-lian/</url>
      
        <content type="html"><![CDATA[<p>好！我应了一声就继续玩耍了。大概玩到了凌晨两点钟我就直接在沙发上躺着睡了。（之前在网吧的时候都是这样过的，所以我也没有感觉有什么不适应。）醒来已经是早上8点多了，我是被我们一起来的哥几个喊起来的。毕竟是几个同学第一次一起出来工作！心情还是比较高兴的，顺便崽子安排大家一起吃了饭（待遇里面是包含食宿的，只不过我的几位同学都是郑州本地人。不在这里住宿。而且大胖是回民，所以有大胖在的时候做饭的这边基本上每餐都是蛋炒饭。这样大家都能吃。）吃饭过程中，崽子又交代了一下10点开新区的事儿叫大家提前把帐号注册好。大家边吃饭边答应着。吃完饭以后，开好电脑一起注册帐号。因为当时网吧名字叫伊妹儿嘛，索性我们住的ID也是伊妹儿开头这样也方便记录。密码一致，实名认证由崽子操作。转眼10点钟就到了，哥几个挨个抢着登录游戏。当时大话西游是有这么一个机制的，就是每个大区每个角色都有一个数字ID。越早进入游戏创建帐号的，ID当然就越靠前。最短的就是4位数的。大家抢着进游戏还是商量了一下角色名字，既然帐号都是伊妹儿开头了，那游戏名字也这样开头吧。中间加个符号后面俩字自己往上加好了。种族不要求，玩自己最顺手的吧。于是乎，我创建了个伊妹儿の乖乖角色媚灵狐是个女魔ID我还是记得比较清楚的，因为我们几个就我的ID是4位数的1235 。小胡创建了个神天兵，取名伊妹儿の小强男仙。大胖的是男魔虎头怪，伊妹儿の壮壮（这个我记不准了，有空在找本人求证后在更改）。老秦是女魔，伊妹儿の娇娇。赵坤弄的女仙，伊妹儿の洋洋。（坤儿这个我也不确定，日后联系他确认。）好家伙，5个角色一队人齐了。崽子单独建了了一个男仙智圣仙，叫伊妹儿の老总（大话西游这游戏是5人一队各个职业需要平衡，我们这个队伍俨然是一个没有男人的角色。这也导致我们后期单独练了一个男人以方便我们组队升级）。至此所有角色介绍完毕，几人开始分开单独做前期任务升级。当年的大话西游2还很单纯，没有自动寻路。自动战斗什么的东西，全程手动。组队过程中，大家也很喜欢在队伍频道里聊两句！我们玩大话玩的最疯狂的时候，甚至把所有的表情符号都背了下来。然后几个人喷嘴炮的时候就直接用符号攻击！比如说#89 #91 #83（什么你不知道我们怎么用符号攻击的?那我告诉你，就是：假如假如啊大胖我jing ba jiu ni !#89是不是很无聊？没错！男人的乐趣就是这么简单！）就这样到了中午，大家伙下楼把饭端到楼上电脑前边吃边升级。大家伙边吃边聊边游戏，忙的不亦乐乎。吃过饭下午就比较轻松了点，因为前期任务做的差不多了，下午大家就开始组队升级了。只要一个队长带着跑就行了，其他人只要手动操作一下攻击和法术就好。节奏还是这样有条不絮的进行着。下午也发生了点有趣的事，网吧一楼CS战队在打比赛。（这个是后来小胡提醒我才知道的，网吧里有一队北京的CS战队在网吧常驻训练。网吧提供电脑给战队免费使用，战队打比赛获得奖金的话跟网吧有五五分成。）我们几个也趁着找厕所的功夫偷懒去膜拜了一下。有一个哥们，水平真的很高！狙击不开镜盲狙一打一个准你信不？直到我们同学几个都去高手后排看过后才在一块说着，原来还可以这么玩！（其实盲狙的原理就是b46大枪和b12小枪来回切枪时候没有换枪动作。利用短暂的小枪准星然后切换狙击开枪这样子。玩过cs1.5的应该都清楚这个设定。）直到下午6点下班，我这同学几个该都要回家了。又剩下我自己了，崽子我俩在网吧吃了点饭就又上楼玩耍去了。<br>　　吃过饭以后，我们俩一起返回网吧继续游戏。要知道那个年代的互联网，根本就没有什么电影网站的。我唯一知道的就一个商都信息港上面有一个影视频道，而且还只有那几部电影。我会告诉你我看的最多的是哪个？哈哈！熟悉的电影熟悉的操作，浑浑噩噩的又过了几个小时我直接在沙发上睡着了。醒来又是早上了，几个同学也已经来了。招呼着各自登录账号游戏了。在这里我简单的说一下大话西游2这个游戏吧，毕竟不是所有人都玩过这个游戏。这款游戏在当年来说，是一款高度自由的2D回合制游戏。计费方式为点卡计费。每小时4点，150点15块钱。游戏里的所有物品除了个别任务物品其他都是可以交易的，不存在绑定一说。游戏有内建的点卡交易系统。意思就是你可以充点卡卖游戏币，当然你也可以靠游戏里的金币买点卡。除此之外，游戏内没有任何收费道具。这也是现在网络游戏的诟病，打着免费游戏的旗号。首冲VIP什么的套路。开区第二天。我们几个的帐号已经都在40阶段了，经验最快的地方在斧头帮。大家伙领好双倍经验就开始去斧头帮了。哥几个一路上有说有笑的刷着怪升级。（其实我门几个都在一排电脑上坐着，都是座位挨着座位的。但是还是用游戏的队伍频道交流，也许这也是一种享受游戏的方式吧。）气氛相当自在。练级这几天实际上也没有什么实质内容要写的，就是日常的刷怪混经验。一个人带队4个人打酱油。中间唯一发生的事情大概就是开区第三天下午下班以后，我和崽子我们出去租了个房子置买了凉席毯子这些了。房子离我们工作的网吧也很近。当天晚上下班后，我和崽子就在租的房子里住下了。我们租的顶层房子，就是出门全是楼顶的地方。坏境嘛，就是内种除了床什么都没有的房子了。便宜嘛，毕竟是老板租的我也没什么好挑剔的。当晚我就直接在宿舍住了一宿，半夜醒了好几回…真特么热，空调没有就算了。连个电扇都没有。后来一段时间我也是偶尔性的回宿舍洗澡然后住一晚这样子…宁愿网吧睡沙发，至少有空调不是。早上一早的就赶去网吧了，等早饭！我没钱嘛，网吧里管的饭不要钱。好不好吃我也不挑，只要能吃饱就好。我当时就是这么想的。就这样持续到开区一星期的时候，我们几个同学的账号已经相继到了60级。按照既定计划，我们该为筹备70装备而跑60环了。（60环产出的龙鳞石是制作70装备的必须材料）吃过午饭后哥几个不用商量的一起去跑60环了。第一次跑60环是很费时间的，所有的飞行棋都要安插一遍。而且对于没有转生的觉得背包也少的可怜，第一趟60环除了老秦40多分钟结束其余我们几个几乎都用了快一个小时！产出大概是20万左右，算上龙鳞大概就是25多点。当时150点点卡价格60万上下。我们正在接着跑第二趟的时候崽子上来了，一看我们在跑环还迷惑了一下。你们怎么没去升级？提前给给做70装备做矿石储备。几个人回道。我们几个继续跑，果然第二趟就轻松了许多。大家都能维持到30分钟一下结束了。就在这会崽子过来了，我们来了第一个订单。先不升级了，先把货交了有人找我们订了500元的大话币。我们几个也没想什么，毕竟是给人干活。就这样哥几个都连续跑了一下午的60，临下班时候崽子说先把金币交易给他先给客户交点货。就这样大家都把金币交易给了老总号上，凑了1200多万的样子吧。而后几个本地的同学都下班回家了，网吧里又剩下我们俩人了……<br>　　（未完待续）</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 屌丝网管 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>屌丝网管养成记-第五章-阴差阳错</title>
      <link href="/2020/02/23/diao-si-wang-guan-yang-cheng-ji-di-wu-zhang-yin-chai-yang-cuo/"/>
      <url>/2020/02/23/diao-si-wang-guan-yang-cheng-ji-di-wu-zhang-yin-chai-yang-cuo/</url>
      
        <content type="html"><![CDATA[<p>于是我就这样在家里待了几天，可这样下去不是事儿。咱不是那种吃喝靠父母的主儿，况且我家里的条件也并不宽裕。期间我一有机会就会去隔壁村开的小黑网吧里。这网吧老板也是和我年纪差不多，起初我就是过去看别人玩游戏的。到后来发现老板玩的游戏和我玩的一样，慢慢的发展成我帮他玩游戏带看门。他让我免费玩电脑这样子。当时我们玩的游戏叫大话西游2，玩过这个游戏的人应该都知道。这个游戏是可以多开的。那么我当时就是这样子操作的，开着他的号还有我的号一起耍游戏！起初几天我到晚上还会回家睡觉。后来我就直接扎根这网吧了，整天帮着老板练号收钱。然后老板管我吃饭上网，在那个阶段也是觉得蛮开心的。我们会早早的出门喝羊肉汤。也会在帮战以后点份大盘鸡吃点荤的，总之那段时间我在网吧待的很惬意。玩电脑也玩的没日没夜。在网吧里我也认识了一个朋友，叫老王。真名我也一直没问，因为认识他的都这样叫他。这朋友在宇通客车厂当喷漆工，工资能开到三千多听他同事说的。相比我当网管时候工资七百？这简直就是天文数字！然而我的内心毫无波澜，因为我是学电脑的那跟我的专业毫不相干……我当时是这么安慰自己的……这期间老王有请过我出去吃过几顿饭。基本上就是大盘鸡这些了，因为城中村里一般都是这之类的饭店比较多。（关于老王往后有机会我们单独开一章写他，这家伙是我认识的朋友中传奇般的存在！据说现在是某房地产公司的老总……）直到某天我回家换衣服洗完澡准备又出门时候被我妈逮到了！我妈说：“你去哪了？这么多天找不到你？”我说：“在同学家住，白天我们一起找工作呢！”（我说这个是善意的谎言估计也没人信，本来我想把自己写好点的。但是我当时就是这么说的不想瞎编。）我妈说“你这样天天瞎跑联系不到你也不是个事儿，一会跟我一起去给你买个电话。有事儿回不来就打电话说一声。”这给我高兴的，赶紧答应。于是乎，我就拥有了我人生中的第一部电话。小灵通！（不晓得你们用过没，反正当年这个电话就是接电话不要钱打电话一毛短信也一毛来着。彩屏64和铉。什么？64和铉你不知道什么意思？赶紧百度下吧）之后跟老妈说了声出去找工作了我就走了。这次我没有在去那哥们的网吧了。打算联系联系同学们看有没有什么工作，这不联系到罢了。一联系还真有！老实说，我们当年没毕业的时候就一直做梦想着能边玩游戏边赚钱的。但是后来毕业后也有看到代练工作室的，但是可能是我的性格吧。我看不上的游戏我连碰都不想碰一下，不管它能赚多少钱。(๑•̀ㅁ•́ฅ)然而这个工作室就是大话西游工作室！我的乖！我这中专几年就玩这游戏玩最多了，当时大家伙心里都是很期待的。天天玩游戏，月底还有人发工资。这事儿放在刚毕业的小年轻眼里，那个不爱干的？哥几个有一句没一句的脑补着，有说一天多少任务量。完成以后就玩自己的。也有说自己想咋玩就咋玩的。当然排除第二种可能性！人家招你来就是想咋玩就咋玩的？那怎么可能！好吧。哥几个一商量说走就走，一路上还有一句没一句的聊着工作可能会怎样。那天一起去的有我、小胡（真名胡俊峰，在学校我们都叫部长。后来毕业了就改叫小胡了，小胡同志是很大气的一个人。家里条件也比较富裕，至少比我家富裕。我在学校时候每天生活费才5块钱，早饭不吃，然后买包软包红旗渠2块剩下的3块中午去网吧上网。完了在同学们聊玩什么游戏的时候才得知小胡是玩石器时代的，这游戏特逗。也是回合制游戏，我上初三的时候。天天晚上打夜市，下载游戏3 4个小时。然后玩几个小时就会学校。当时就是玩的石器时代。玩半年才玩50多级，结果和小胡说的时候他说要带我去玩，中午我们去上网一个半小时我就100多级了。我当时就蒙蔽了，因为这个游戏可以多开，所以后来阶段就是我俩兑钱一起去网吧开俩小时，俩人坐一台电脑玩了好久这个游戏。后来转战大话西游我硬是拉着小胡一起。当年我没吃饭钱的时候经常找小胡接济。小胡真的很善良……）、坤儿（真名赵坤，这家伙离我家最近了，我们上学都是一条道过来的。经常一起骑车上学，当然不乏路上直接说上网去吧，然后就一起掉头去转战网吧。。。经常性的把生活费全部上网花光，然后没烟抽的时候一起去街上找蚂蚱头抽。蚂蚱头就是没抽完的烟头。我呢不好意思去拣，结果这货拣了后在到角落里分我几个……这事儿我俩经常干。不过后来三年级的时候我家搬到南三环了，然后几乎就很少一起逃课一起拣蚂蚱头了……但是也是很要好的哥们。）、大胖(真名禹振中，外号嘛，也确实和体重有关。反正上学时候我那小身板一圈抱不住大胖的腰。大胖家是开小卖铺的，虽然是回民。但是为人非常亲和，虽然不抽烟。但是偶尔也会带盒好烟给我们几个抽烟的发发。后来一起玩大话，话题多了自然就亲近更多了。)、老秦（真名秦毅，和这位同学。其实交际也不多。只是因为大胖和他是一个小区的，然后后来又一起玩了大话。话题比较多大家就一起了。）俺们几个就这么前往应聘的地方了。（俺们这哥几个是在学校的时候是我们班里仅有的玩大话的，其他人都是玩传奇……之前大胖和老秦也是玩传奇，后来被我们几个坑蒙拐骗的都啦来玩大话了。上学时候就经常一起去网吧玩大话，大胖和老秦家里都有电脑。他们倒是省去了去网吧这个费用。）这个地方的位置我记不太清楚了，所以暂时不写位置了。只记得这是一个小伙子在网吧包机器搞的代练，这家网吧名字特别有意思。也是我记得最深的网吧名字！“伊妹儿电子竞技俱乐部”不大一会我们几个就到了这个地方，找到代练的负责人以及网吧老板我们开始坐下谈这个事情了。老板开诚布公的讲了一下他的想法，其实就是网吧生意不是很好。利用一下闲置的机器赚取一点外快。另外一个人则是带领着大家用网吧电脑赚钱然后一个月给网吧交多少费用。（等于这货是空手套白狼，哥几个当时都是这么想的）但是这个费用有多少我们肯定是不知道的。当时协商的每天工作十个小时早上8点到下午6点，待遇是450一个月包食宿。但是那个负责人算了一笔小账，如果大家正常工作的话。每人一个月赚个1000块是不成问题的。按照当时如果收入能有1000那就很不错了。而且还能玩游戏不是，哥几个也都是这么认为的。其实一路上已经被脑补的画面给完全征服了，只是觉得只要能干这个就好了。然后几个人复印了身份证留下复印件，老板就说可以了。明天一早来上班，哥几个都美呵呵的走了。只有我留了下来，因为我家住的偏远我如果回家。我早上是赶不来的。于是我就顺口问了下有没有安排住宿的地方。<br>　　负责代练的说：“暂时还没有，这两天就给你们安排。”<br>　　“嗯好，我今晚上可以在这里住宿不？”<br>　　“行，你就坐我旁边这台电脑吧！”于是乎，我又开始玩电脑了！<br>　　玩了一会负责人说：“对了，还没给你介绍呢！我是南阳的，名字不好记，你就叫我崽子就行。（这个不是我胡编的，这货的外号真叫崽子。至于为什么我也不知道。他的真名我根本就不知道。）<br>　　“我叫栋梁。叫我小刘就行”<br>　　“明天上午10点开新区，我们就去那个新区。今晚不要玩太晚，明天早上早点起来就开始了。”<br>　　(未完待续)</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 屌丝网管 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>屌丝网管养成记-第四章-家人为重</title>
      <link href="/2020/02/23/diao-si-wang-guan-yang-cheng-ji-di-si-zhang-jia-ren-wei-chong/"/>
      <url>/2020/02/23/diao-si-wang-guan-yang-cheng-ji-di-si-zhang-jia-ren-wei-chong/</url>
      
        <content type="html"><![CDATA[<p>怎么了？我眯着眼问。你从昨天上午回来一直睡到现在你干什么呢！我爸瞪着眼对着我吼着。这时候我才发现我们不大的小屋里其实站了很多人的，我表姑、表叔还有邻居都在一边傻傻的看着我。我赶紧起床穿衣服，这时候在看时间已经下午 6 点了。我的天，我竟然睡了 30 多个小时。仔细一掂量，这个揍我挨的不亏……连忙道歉，对不起，网吧搬家加班了没睡好。（我发现瞪着俩眼说瞎话的技能我很早的时候就点满了￣﹃￣）老爸又说：“你在网吧上班？”我低着头回答是的。老爸说“上学的时候就不好好上学，天天钻网吧。毕业了还去网吧上班？”“你让我学电脑，想干电脑相关的工作我能干啥去？”（其实学电脑是我自选的，我初中不好好上学初三没上完就被学校开除了。后来在无奈之下，选择了学电脑。因为中专没什么要求，交学费谁都可以上。）“那也不能去网吧上班！”老爸很强硬的说着。我也没在回话，穿上衣服下楼吃饭。从老妈的脸上我也看了出来对我去网吧上班这个事儿有多反感。至此我这第一次当网管就这样结束了，我甚至都没有回网吧给老板打招呼说一下这情况。（多年以后的今天我依然觉得很对不起当年栽培我的刘哥和所在网吧的老板，希望他们不要记仇。）接下来的两天我一直待在家里，老爸老妈见人就说我去网吧当网管的事儿。一圈人见我就说我不争气什么的，慢慢的我耳朵已经挺麻木了。第三天早上起来，老板说你表哥给你找了个工作。去给一个卖汽车配件的当仓库管理，也是管电脑的。正好用上你学的。就这样我当天去看了一下第二天一早就开始去上班了。去了后发现，仓库里早就配有一台电脑。但是会用的人很少，也就一直没用。都是用纸笔做记录的。我打开电脑，发现仓管软件早就装好了。只是一直没有录入数据，我又看了一下他们做的笔记。发现完全看不懂，根本就不知道写的是什么。老板一看就知道什么意思了，这样吧！你这两天先去仓库跟着他们了解一下配件都是什么，大概都叫什么名字。得那就去仓库吧，仓库里的两个同事看起来都很壮实。（反正比我壮实的多，当时我的体重也就是 100 斤）一看就是能干下力气活儿的。我说明来意后，两个同事就说。那咱们就把东西归归类，挪一下吧。你正好认识一下这些配件。那边有小推车你也推一辆。我一看，这哪是小推车？简直就是架子车（没见过的话请自行百度）好不好！无非就是轮子小了一些……好吧，硬着头皮推了一辆跟着俩同事。两个同事前面望车上装着东西一边说明这是什么，一会挪到那边去。我才发现我上班的地方是什么仓库了……这完全就是半挂车、前面四个轮子后面八个轮子那种车的配件仓库。怪不得小推车这么大，人家俩同事一个推车上面装 4 个轮毂。我整了半天，装俩我推着都吃力。他俩笑笑也没说什么。中午仓库管顿饭，具体吃的什么我也给忘了。反正不是很好吃，但我依然吃了一大碗。（干过体力活的应该会有这种感触，我那俩同事人家一人吃了两大碗……）下午继续，把东西从这边拉到那边。没什么特殊情况发生。下午 6 点准点下班，因为离我家很近。所以也不需要什么交通工具。就步行回家了，一路上肚子都在咕咕乱叫。到家先问做饭没有，老妈说正坐着呢。我就开始去厨房找东西吃，然后看见一兜蒸馍。（老规矩不懂请自行百度）我拆开袋子拿着就开始吃，没有菜没有汤。我硬是把 6 个蒸馍都给吃完了。（这是我们全家人的份量++！）旁边我妈很匪夷所思的看着我说：“你饿死鬼托成的？”（河南人的一句很日常的话！就像东北的“你愁啥”φ(￣∇￣o)）我也没回话直接去洗澡了。洗完澡躺床上就睡着了。老妈喊我吃饭我也没听见。就这样坚持了两天，我妈终于忍不住了。问我天天干的啥，我一五一十的说了。我妈红着眼说：“别干了，这活儿你干不成。从小家里种地的时候，下力气活儿也从来没叫你干过。你干不了这个！”就这样，我第二份工作又被劝退了。（未完待续）</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 屌丝网管 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>屌丝网管养成记-第三章-网管晋级</title>
      <link href="/2020/02/23/diao-si-wang-guan-yang-cheng-ji-di-san-zhang-wang-guan-jin-ji/"/>
      <url>/2020/02/23/diao-si-wang-guan-yang-cheng-ji-di-san-zhang-wang-guan-jin-ji/</url>
      
        <content type="html"><![CDATA[<p>话说到这里我也没什么好讲的了，只得答应下来。我们把剩下的一点酒喝完以后就回网吧了。现在想想，当年在网吧上班我们是没有宿舍的。我每天上班和下班都是在网吧（这里有两点原因。一是因为家太远，二是因为太爱玩就是看别人玩也觉得开心|´・ω・)ノ）写到这里我想起了我当年上班的网吧名字了“珠峰互联时空新郑路店”。接下来的一周基本上我觉得就属于强化训练了吧，基本上每每电脑出现问题主管都会叫我去维修，然后他在判断我做的地方对不对。这期间刘哥也有和老板提了让我来接任这事，老板也同意了。很快一周过完了，刘哥早早的收拾好自己的东西准备要走了。我帮忙拎着东西小送了一下。在我的印象里，刘哥临上车前给我写了电话号码的。但是后来不知道什么原因找不到了。（当年我没有手机，电话号码这种东西要不然就是背要不然就是写到 QQ 备注里。）送完刘哥我回到网吧，开始体验当主管的第一天生活。刘哥之前又告诉过我管理员密码的，我们网吧当时用的是 PUB­WIN +过滤王。当时我们网吧用管理解锁的机器是没办法打开网页什么的，只能登录上 QQ 这样子。然后我叫上我们当班的几个同事都过来登录了下 QQ。（当年 QQ 是有等级的 16 级一个太阳，一个太阳是可以使用自定义头像的。）我继续等待问题出现。一天就这么过去了，很遗憾问题并没有出现。但是也有个惊喜！那就是临下班的时候发工资了！！！我忘了当时老板说压多久工资了，总之我有了几百块钱工资，另外还发了一张工作人员用的会员卡。我当时的卡里也是按照普通网管储值的 200 元！（工作人员会员卡当班期间不能登录，我们网吧 130 台的形式，有 4 个区域分别为普通区、卡座区、电竞区和包房，要知道这是 05 年的事儿。当时那个网吧就有这么明确的区域分布，收费标准：普通区 2 元每小时，卡座区 5 元每小时，电竞区我不知道，因为平时几乎没有人坐。只有老板他哥几个有时候一起坐着玩玩星际争霸 CS 什么的。这个后来我才知道，老板当时打星际争霸拿过很多奖的！着实让我又刮目相看了一番。另外就是包房区我们网吧只有一个包房，这个包房再我印象里就是给主管睡觉和老板玩游戏时候的地方。）大家都高兴坏了，为什么当网管？不就是为了上网呗！(๑・̀ㅁ・́ฅ)大家伙拿着会员卡就去找电脑有几个网管兴致勃勃的去了电竞区，（在这里还闹了次乌龙，后来老板说了。电竞卡座包房这三个区域是不允许工作人员坐的，如果登录就是 10 分钟 200 元。）没玩一会就提示余额不足了，一开始以为是闹着玩的。可是过了几分钟真的就锁定了，再登录卡就是没有余额了。老板也已经回去了，大家也很无奈的下班了。在这里我一直没有提过我的同事叫什么名字，其实好多人的名字我都忘记了。依稀还记得一个叫王振海的当时在网吧当的带班组长，我当时也是带班组长只不过没写。现在回忆，当年的几个女同事还是很漂亮的。至于为什么没有记住名字我也想不通。当天晚上我就享受了一把再包房里睡觉的感觉。（其实和我在休息区睡也没什么区别，只不过没有那么吵了！）早上起来，洗把脸然后去普通区角落开了台电脑登录了我的会员卡。随意的打开个网页，可以上网。奇怪的是我的内心却并不怎么兴奋。后来想想大概是因为不知道玩什么吧。起身转了一圈看看别人玩什么吧，发现有几个人玩的赛车游戏。问了下才知道这个游戏叫飚车网络游戏需要注册帐号的。然后呢，我就会自己位置上开始注册帐号去了。三下五除二也注册好了。登录游戏，创建角色角色名字“愿做小老公”（我当年有很长一段时间 QQ 昵称就是这个至于原因就不说了）随意选了个新手车上路。按照我现在的回忆，当时的游戏体验是很糟糕的。我不讲游戏内容了，我整整的玩了 2 天 3 夜才把新手车换掉(´இ皿இ｀)起身的时候已经是第三天的早上，下楼吃了点早餐寻思着这么久没回家了回家看看。然后愉快的坐上网吧门口公交站牌的 89 路公交车走了。这一路上我都是晃着脑袋半睡不睡的走的，到站后我迷迷糊糊的下车回家。和家人打过招呼后一看时间才上午 10 点多，我就跟家人说了一下我上楼睡一会中午吃饭在叫我吧。等我醒的时候是被打醒的，老爸站在旁边手里拿着散架的凳子。我被子上面也全是凳子的碎片，揉揉眼睛做起来听到老爸的第一句话就是：“我还以为你死了！”（未完待续）</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 屌丝网管 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>屌丝网管养成记-第二章-体验网管</title>
      <link href="/2020/02/23/diao-si-wang-guan-yang-cheng-ji-di-er-zhang-ti-yan-wang-guan/"/>
      <url>/2020/02/23/diao-si-wang-guan-yang-cheng-ji-di-er-zhang-ti-yan-wang-guan/</url>
      
        <content type="html"><![CDATA[<p>接上文，中年人上来后开口就是。我是网吧的技术主管，今天晚上我们网吧升级硬盘，我把系统盘做好教你们怎么刻盘然后你们负责把硬盘刻完！当时我也不知道网吧有多少台机器，总之就是搬家搬了好久这样子。我不知道同事们怎么想的，但是我打心里是兴奋的。（这是我第一次可以学习到电脑维修相关知识的机会）然后我就屁颠屁颠的跟着主管去了，我们在网吧正中位置拼接了两行桌子，4 张双人座位拼接成了一行。但是我们当时只有 5 6 个人（含主管），所以只摆放了 8 台。主管接好一台我在旁边看着，然后挂上母盘和新硬盘。手动进入一个黑底白字的界面，一行行的教我们运行代码。（在我印象里当时主管用的应该是 WIN98 生成的 DOS 启动盘然后加载 GHOST 软件）进入 GHOST 软件后全英文，我想主管也考虑了我们的英文水平。直接就说，不要看英文单词，只用记住那一个选项就好。就这样刻盘选择 1……1……1 然后一路回车（中间过程就不再说了太占用篇幅）。好了进度条开始走了！我心里其实是蛮期待的，这样走完系统就算装完了么？好想自己试试！大约过了十几分钟，第一块硬盘刻好。然后接第二台机器上这样子就可以两台机器同时刻了。这时候主管问：谁先来？我的一圈同事都没吭声，只有我举着手……主管笑着说：咱们这里不是上学，说出来就行。然后我就跟着主管一步一步的操作。可能主管说的太简单了，1……1……1 然后一路回车。结果在选择硬盘的时候我选择错了硬盘，而且我还手快的直接开始刻盘了。然后主管告诉我，刻错了你把新硬盘刻到系统盘里了！这时候我很尴尬的，本来信誓旦旦的要来试试水。结果没做成不说，还把硬盘系统搞坏了。心想这下事儿大了，我也不敢说话。没想到主管笑笑然后说，没关系所以我另外一台机器没有操作。来你看着我操作。然后就是主管手把手教学了。“这里要选择硬盘，通常我们的启动硬盘在 1 号接口，所以这里我们选 1！还有这一步一定要确定他有没有显示 2 号硬盘，容量对不对。我们新买的硬盘是 160G 的，从这里可以看到硬盘的容量等等……”这一次讲的好详细，我听的很仔细。又过了 20 分钟的样子，第二次刻的第二块硬盘总算好了。好了我看着你去操作一下这两台吧主管说。这次我不再迷惑了，我可以理解操作每步的大概含义了。我仔细的回忆主管所说的话，小心的一步一步操作并且检查。直到最后敲下 OK 的时候，我回头看了一下主管。只看他只是笑笑并没有说话。我才确定我操作是没有问题的。接着第二台就轻松多了，我还是一点一点的操作直到 OK。然后主管说，你教一下他们怎么刻盘大家一起做吧。今晚务必把所有硬盘都刻完，我先回去休息了明天接着调试机器。我应了声然后开始招呼同事们过来。就这样主管走了，我继续一台一台的教同事们怎么操作。（其实我心里的很高兴的，第一次当老师ヾ(≧∇≦)ゝ）当时已经半夜，然而我却一点也不困。同事们相继都坐沙发上睡着了，我依然在盯着电脑的进度条。这样子一直持续到上午 10 点左右。主管来了，看到一群人都在睡觉随口问了句还有多少块没刻呢？我扭头看到主管，笑着回了一句。只剩这一块正在刻的了。主管显然有点惊讶，你晚上睡了吗？我笑着摇了摇头。吃饭了吗？我没吭声。等我一下，主管直接下楼了。五分钟后主管提着两兜早餐就上来了。你先把这个吃了去休息，剩下的我来弄！我执意边吃边做事也行，无奈主管态度比我更坚决。吃好饭休息好才能做好工作。于是我就在主管说这么一句话后找个地方坐下吃饭了。吃到一半我就睡着了，毕竟在之前学校乃至前几份工作都很少熬夜。等我醒来，已经是下午了。看到工作人员都在忙着摆放座椅安装电脑，浑身机灵了下赶紧去洗手间洗了把脸。然后也去给同事们帮忙去了。因为在学校时候并没有安装过电脑，所以我连键盘鼠标都不会接……٩(ˊᗜˋ)و正在我帮忙摆放桌椅的时候主管过来了，咦！你睡醒了？我回：嗯，看大家都在忙我也来帮帮忙。主管说：“昨晚有点晚，还没来得及问你叫什么呢。”我回：“嗯我叫刘某某，你可以叫我小刘。”“小刘，刚从学校毕业么？”“是的，学的计算机所以我想找个和电脑沾边的工作。”“嗯，很好。以后有那里不懂的尽管问我，你姓刘我也姓刘咱俩本家以后你教我刘哥就行。”我笑着说：“好的，谢谢主管！”就这样，我遇到了我人生中的第一位贵人。再以后的工作中，虽然我是一个普通网管。（就是端茶送水，帮顾客续上机费用的这种。|´・ω・)ノ）但是每每网吧有个别电脑需要维修的时候，主管总是单独叫上我去机房里指导我了解这样的问题是那里的原因。那样的问题该怎么处理。在那 1 个多月里，是我毕业后过得最充实的日子。学到了很多在学校根本接触不到的知识。因为每天都在网吧休息区的沙发上睡觉，开始大家还以为我上班来得早。后来都知道怎么回事以后也就没有人在问过。这期间我还在沙发上得过一次意外之财，某天晚上我照例开会员卡玩到半夜后去沙发上睡觉。不料睡觉不老实一骨碌掉沙发下了，疼醒的时候脸正对着沙发底下。一睁眼！诶！那一卷子是什么东西？伸手就过去掏，到手一看我立马先装兜里。在这里你可以想象一下捡钱怕被别人看到时候那种状态……赶紧去找厕所顺带把门关上，把兜里东西掏出来，一张两张三张…我擦总共竟然有200多！这家伙给我激动的，意外之财一定要尽快花掉。不然还是会没有的。我突然想起了某人好像这样对我说过…可是买点什么呢？想来想去我还是想到了衣服，郑州金博大哪里是有一个光彩市场的，之前在学校时候家里条件好点的都是穿的那里面买的衣服。总之就是一些很潮流的衣服滑板裤什么的。我当时在学校就一直想要一条这样的裤子，无奈怎么给我妈说好话他就不买给我。好吧，那我今天就买条这样的裤子吧。坐上公交车我就出发了，坐几路车我还是很熟的。因为我们学校就在这一块，上学的时候经常从这附近过。到了光彩市场我迫不及待的进去，进去就看到了一家韩国潮流什么的店名！没错了就这家了！进去看了一圈发现都好喜欢，这不就是我一直想要的衣服吗！但是一问价格我傻眼了，这个几百、哪个几百……总之都是几百的。没办法了讲实话吧，我把兜里的钱都拿出来告诉了老板我只有这么多钱可以买什么。老板看过之后给我拿了一套去年的款式很宽裤腿的那种直筒裤，搭配一个粉红色加黑色上面带字母的半袖体恤然后告诉我这一套可以便宜一些卖我！可把我高兴坏了！这是我第一次自助给自己买衣服。就这样我把旧衣服扔了直接穿着这套衣服就回网吧了……过了几天主管突然找我说晚上下班找地方喝点去，我说行呀。下班后，我们直接去了楼下的饭店。点了菜以后，我们又点了瓶白酒。（我依稀还记得白酒的牌子叫巷子酒，超市 3.5 一瓶饭店 5 块。）就这样我俩吃着喝着有一句没一句的说着话。突然主管给我说了一句：“我家里有急事，过了这几天我就要回家了。这家网吧还不错，你想不想把主管这一块接了。”“我吗？”“是啊，如果你接了我比较放心一点。”“可我现在什么也不会啊！”“这一个多月里你已经把网吧日常问题处理都掌握了，以后有不会的地方你可以联系我再教你。”话到这里我也没什么说的了，只好应下。（未完待续）</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 屌丝网管 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>屌丝网管养成记-第一章-初入社会</title>
      <link href="/2020/02/23/diao-si-wang-guan-yang-cheng-ji-di-yi-zhang-chu-ru-she-hui/"/>
      <url>/2020/02/23/diao-si-wang-guan-yang-cheng-ji-di-yi-zhang-chu-ru-she-hui/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言:"></a>前言:</h2><p>为什么写这么一篇文章，事实上我一开始是要写一篇技术文章的讲一下网吧路由器方面的事情，可是写着写着突然发现跑偏了。那就算了改一下标题当作一个回忆录吧！ |´・ω・)ノ</p><ul><li>正文：<br>02年时候我因沉迷网吧在初中三年级辍学，在家玩了半年。后来家人想让我学习一门手艺，最后我选择了学计算机。之后03年至05年的我就一直再郑州某职业中专就读，当时我们学校里的专业普遍都是办公自动化、网页设计、FLASH、PHOTOSHOP以及visualfoxpro这些。所以我也和大多数上中专的一样，从办公自动化开始学习。后期也选修了不少其他课程，像网页制作软件dreamweaver。photoshop也有学习了几个月，而且还考了证书。上学期间第一年暑假就有做过暑假工，本意在提前感受一下社会。但是完全并没有给自己以后步入社会创造什么经验……反倒是中途因为跑了一单被罚了半个月工资直接辞职了。不过最后依然发了100多元的工资。我拿着这点钱直接就去了网吧，根本就没跟我家人说我辞职了……就这样一早起来就去网吧打早市，早市12点结束就转计费。当时的我似乎也不会玩什么游戏，就见赵坤在学校时候玩奇迹MU。我也就索性尝试玩这个了。当时是这个游戏高科技最猖獗的时候，网上随处都可以下载脱机的那种。就是不用任何操作，只有一个简单的界面脚本。设置好刷怪的地方，掉什么东西捡取什么东西卖掉这样子。然后点开始就行了。整个过程是非常无聊的，但不知道为什么。当年的我非常好这一口……就这样我每天白天去网吧上网，晚上正常回家休息。直到把我这点工资花完。本想着我也不会玩这个游戏到最后把这些天刷出来的宝石什么的给赵坤来着，结果到开学时候怎么都想不起来账号密码了……你说这事尴尬不…… 2年的在校学习，后面就是出去实习了。其实实习也算是毕业。但是毕业以后也比较盲从，在校时候完全没有想过自己学的专业出去以后可以做什么事情。虽然这过程中家人还有朋友都有给我介绍过工作，往后会穿插到各个章节中。比如去某某仓库给人当仓库管理、去某某洗浴中心给人当客房服务员（这个比较重要，让我遇到了我的现任老婆。）去某某工地给人修路什么的，总之也是什么都干……印象最深刻的是去郑州科技市场，为什么呢？主要因为我毕业这头几个月里做的工作竟然没有一个行业是我学的专业相关的，（在人民路解放路给大山外语发传单，见人就说hello dashan english……类似这样逗比的事儿刚毕业几个月我干了不少。）而我自己又不想浪费了我在学校几年学习过的东西。因为是家人花钱供我学知识的，我不想让他们以为我上学和不上学没有任何区别白瞎学了这几天电脑。而电脑相关的工作，自然而然的就想到了卖电脑了。（好像也没有什么不对的）只不过这个选择让我第一次感受到了技能的重要性，当年的郑州科技市场已经略见规模。各种商家商户比比皆是，创新大厦是那几年里比较火爆的一个商场。所以我就在这栋楼随便找了一家去应聘去了。你好！请问你们这里招人吗？这是我进门第一句话，店里的人回答是的，你都会什么？然后我就非常自豪的把我在学校学过的专业统统说了一遍。店里人员回答：不好意思你在看看别家吧！当时对我的打击还是蛮大的，不过想想也是。我学的专业和人家卖电脑有毛线关系？继续去第二家，我涨了点记性我说我会组装电脑。换来的结果却是一把螺丝放我面前，让我区分一下那个是硬盘的，那个是主板的。我当时就懵逼了！没有再说下去直接去下一家了，这一次我长记性了。到第三家直接就是说，你好，我刚从学校毕业想来这里学修电脑。工资什么的我不要，什么时候你觉得合适了在给我发工资都行。果然而然，我顺利的当时直接上班了。我的第一份和所学专业相关的工作就这么愉快的开始了！接下来的两三个月里是我万万没想到的，我连续为这家公司送了三个月的货，其他的什么都不让我做……当然这期间也有段小插曲，我来科技市场是告诉过家人的。工资不重要重要的是你开心就行，这是我爸给我说的原话，我当时为了尽快入行也随行就市过一次，为了学点东西好去跟同学装逼我去找我爸要钱请公司里员工吃饭。（当时我在公司是没有工资的，自掏腰包请客主要就是是想找人学习一点电脑基础知识的……大概就是这个意思，结果请客当晚大家说的好好的，第二天上班后，一切恢复如初！这也是我后来为什么不喜欢去郑州的原因之一！我觉得郑州人生意人都是人前一套背后一套。）送货过程虽然无聊，但是也让我认识了一些很好的商家。当然这些上家也成了我以后开店时候的的渠道合作伙伴。当然，不排除好的坏的。中关大厦7楼的704张磊是我记忆里最深刻的。我们公司做光驱的，在哪个年代光驱是类似于现在电脑里硬盘的价值！那时候几乎每天都要往他们公司送货，他公司是组装电脑的。后续我开店以后我们也合作了几个年头。回归正题，看现在这样的情况的话，就比较尴尬了。本来就没有工资就想着能偷学点东西，哪怕会装个系统以后也可以给女同学修电脑不是……结果现实却是残酷的。于是当天我就辞了工，老板当然也没说什么。辞工以后一个人在街上乱转。漫无目的这样子吧。后来再回家路上转公交车时候忽然看到站牌西边一家网吧招聘网管的广告，玻璃门上清晰的写着：招聘网管，学历不限等等……当时我脑袋猛然想到，修电脑？哪里的电脑有网吧的电脑坏的毛病奇葩呢！科技市场顶多也就是组装新电脑比较多，但是要说维修。那种场合能有网吧里电脑毛病多的！于是乎，我毅然而然的走进了网吧，吧台里的妹子长得很标致……（不排除这也是我非要在这家网吧上班的原因之一）<br>　　“你好，请问你们这里招网管吗？”<br>　　“店长出门了，你等下他一会回来。”<br>　　得知店长出门了，我就直接在网吧的休息区等店长了，大概看了一下这网吧。并不是那种特别出众的类型，装修也比较老旧了。形式我大概看了一下觉得应该在一百台上下这样。随便转了一圈就又老实坐休息区等了，不出一会有一个穿一身正装的人进门了，随后在吧台站了一会和收银妹子说了几句话后开始往我这里走了过来。人还没有走到话就已经说出来了，你是来应聘网管的吗？我回，是的！很随便的问了我一点个人信息后就听他说身份证登记一下然后今晚来上班吧。 OωO 我当时表情就和这个表情一样，真的就是这样 OωO 这么低门槛？考虑到我之前科技市场应聘的经历。其实我准备了好多过天话要说的（比如说我会装系统，会修电脑什么的云云。总之就是先糊弄过去，剩下的过一天算一天！）这么简单的应聘搞的确搞得我有点防不胜防……碍于我家离网吧不是太近索性我也就没有走，店长告诉我晚上7点开始上班值夜班。我就直接在网吧里等到了晚上7点。时间过的很快，转眼已经7点。开始上班了，店长先集合工作人员（包括我）交代了一下。因为我当时脑子还在短路中没有恢复过来，所以店长说了什么我是真一点都没有听到。完了就听到最后一句，那大家开始干活吧！干活？干什么活？接着我就一脸懵圈只能先看看其他工作人员在做什么，发现都在和顾客说话。那我该做什么？正在这时店长喊了一句，人员清理完之后就开始搬沙发吧。这时候我才明白，为什么我白天的应聘那么随意了……然后我也跟着其他人开始搬沙发，当然，我不知道搬到哪里只能跟着别人去哪我去哪。也不算太远出门往右走了100米左右开始上楼，好在是2楼并不是特别高。就这样我和一帮同事一直搬到凌晨12点多才算是基本上搬完，剩下的小件东西店长说明天白班的人拿。当时听到这句话身体一下子轻松了，想着终于是可以休息一下子了。一伙人瘫坐在刚搬上来还没摆放位置的沙发上。就在刚坐下几分钟这会，从楼梯那边传来了一阵脚步声，随后进门来了一个年纪大约20多岁的人，上来后说了一句足以让我的一圈同事们崩溃的一句话！（未完待续）</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 屌丝网管 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WINDOWS系统下恢复群晖分区下的文件</title>
      <link href="/2020/02/23/windows-xi-tong-xia-hui-fu-qun-hui-fen-qu-xia-de-wen-jian/"/>
      <url>/2020/02/23/windows-xi-tong-xia-hui-fu-qun-hui-fen-qu-xia-de-wen-jian/</url>
      
        <content type="html"><![CDATA[<p>玩群晖也有几年了，从万由的J1900时代就搞了台NAS。当时天天泡论坛看大家都是讲群晖，所以回来也毫不犹豫的刷的群晖。发这个帖子不是为了讲故事。起因也很简单。就是因为我把机器刷回了万由系统，所幸的是我保留了放照片的盘。想挂上去读取的时候发现是读取不了的。放到我另外一台918+的黑群上也是显示未初始化，我就寻思着把群晖的硬盘挂到windows系统下把文件恢复出来。度娘找了一番资料后掉了不少坑，也有读取到盘符的软件。但是无法打开盘符，但功夫不负有心人。最后的最后让我找到了一片类似的文章，发现了UFS_Explorer这个软件。本人已测试正常使用，所以贴出这篇文章，一是给自己备忘防止以后再有需要，二是给大家提供一下方法（少走点弯路）。因为是在另外一台机器操作的，所以本文没有任何图片说明！<br>这个软件百度就有下载，但是好多都用不了。官方上面我也下载了，但是不注册的话只能恢复一小部分。我把文件打包并且加了说明文件（文档内有详细的安装和使用步骤）放到本文附件里供大家下载。</p><p>软件使用说明：<br>注意：因为软件是英文版的  也没有汉化语言包所以你只要按照我说的步骤操作就一定能恢复你的文件<br>1、把压缩包正常解压<br>2、正常安装解压后文件夹里的ufsxpci文件到系统内 不懂英文的不要紧  正常点next  有打勾的地方就打上勾 最后一步点完后会自动打开软件 关闭即可<br>3、开始菜单程序右键打开刚安装的UFS Explorer文件夹内的UFS Explorer Professional Recovery属性 查找目标<br>4、复制压缩包内另外一个注册机UFS-Ex-Crk到刚才打开的UFS EXPLORER文件安装目录并打开 然后点击PachExe完成注册<br>5、打开安装目录内ufsxpci.exe  你会发现软件内已经正常识别群晖的分区  找到群晖硬盘最大的那个分区  双击打开  右侧会显示群晖内的文件系统  选择你要恢复的文件夹  右键 选择save this object to…… 此时会打开一个需要保存的路径  选择你要把文件保存到那里后点select 然后会出来另外一个提示  把最下面 apply to all conflicts （这个选项应该是跳过所有覆盖提示）打勾<br>然后选择最上面 replace existing file with new one （百度翻译：用新的文件替换现有文件）就可以开始恢复你的文件了  下面两项我没有测试  反正我只要求能恢复出来就行了</p><p>附件下载[WINDOWS下读取群晖文件.rar]（）</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 群晖 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ROS6.X 阿里云DDNS及端口映射的正确姿势</title>
      <link href="/2020/02/23/ros6-x-a-li-yun-ddns-ji-duan-kou-ying-she-de-zheng-que-zi-shi/"/>
      <url>/2020/02/23/ros6-x-a-li-yun-ddns-ji-duan-kou-ying-she-de-zheng-que-zi-shi/</url>
      
        <content type="html"><![CDATA[<p>脚本用途<br>将ROS的DDNS更新到托管在Aliyun云解析DNS的域名，方便远程维护ROS。<br>使用自主注册个性化顶级域名服务。<br>更新格式<br><a href="https://www.ros5.com/aliyun/?AccessKeyId=******&amp;AccessKeySecret=******&amp;id=www.ros5.com" target="_blank" rel="noopener">https://www.ros5.com/aliyun/?AccessKeyId=******&amp;AccessKeySecret=******&amp;id=www.ros5.com</a></p><p>脚本示例<br>#以下是6.x的脚本</p><pre><code>    /system scheduleradd interval=3m name=DDNS on-event=":global AccessKeyId     \"AccessKeyId\"\r\    \n\r\    \n:global AccessKeySecret \"AccessKeySecret\"\r\    \n\r\    \n:global domains \"test.ros5.com\"\r\    \n\r\    \n/tool fetch url=(\"https://www.ros5.com/aliyun/\?AccessKeyId=\$AccessKeyId\    &amp;AccessKeySecret=\$AccessKeySecret&amp;id=\$domains\") mode=https dst-path=ddn\    s.txt" policy=ftp,reboot,read,write,policy,test,password,sniff,sensitive \    start-date=jan/01/1970 start-time=00:00:00</code></pre><p>#以下是5.x的脚本</p><pre><code>    /system scheduleradd interval=3m name=DDNS on-event=":global AccessKeyId     \"AccessKeyId\"\r\    \n\r\    \n:global AccessKeySecret \"AccessKeySecret\"\r\    \n\r\    \n:global domains \"test.ros5.com\"\r\    \n\r\    \n/tool fetch url=(\"http://www.ros5.com/aliyun/\?AccessKeyId=\$AccessKeyId\    &amp;AccessKeySecret=\$AccessKeySecret&amp;id=\$domains\") mode=http dst-path=ddn\    s.txt" policy=ftp,reboot,read,write,policy,test,password,sniff,sensitive \    start-date=jan/01/1970 start-time=00:00:00</code></pre><p>注意事项<br>1、需要修改脚本内的AccessKey ID和AccessKey Secret及域名再运行！脚本设置的是3分钟更新一次足以满足日常使用。<br>2、如何获取AccessKey ID和AccessKey Secret？ 点右边的链接：<a href="https://help.aliyun.com/knowledge_detail/38738.html" target="_blank" rel="noopener">https://help.aliyun.com/knowledge_detail/38738.html</a><br>3、test.ros5.com：域名，可顶级域名（如ros5.com）或二级域名（如test.ros5.com），如果二级域名不存在系统则会自动创建，顶级域名则会修改@名称的A记录值！<br>4、脚本执行后会在ros文件里生成一个ddns.txt，更好的调试脚本，发现错误！如果没更新之类的可以先下载查看该文件内容。<br>5、多线情况下，接口会自动选择DDNS线路！<br>6、如有疑问或想自主搭建及定制DDNS更新服务请加QQ:962000293！<br>7、本网站服务器托管在腾讯云上，如遇打开缓慢或无法打开请联系阿里的马哥。<br>8、捐赠一下服务器费用呗？十块一块都是爱！</p><p>以上原文转自：<a href="https://www.ros5.com/851.html" target="_blank" rel="noopener">https://www.ros5.com/851.html</a><br>食用方法  复制对应自己版本的脚本  直接在ROS WINBOX控制台里 new terminal 里粘贴并回车运行后  在进入/system scheduler 双击DDNS  修改对应的 AccessKey ID   AccessKey Secret 以及domains  本人已测试正常使用</p><p>关于端口映射，百度资料里有很多误区。6.X版本和我以前接触的2.X 3.X 5.X端口映射方法稍有不同之处就是在EXTRA下dst address type 一定要选择local  如果不选择  会导致内网所有电脑网页无法打开  心累中<br>案例代码</p><pre><code>/ip f n add chain=dstnat protocol=tcp dst-port=80 dst-address-type=local \</code></pre><p>action=dst-nat to-addresses=内网的服务IP to-ports=80</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>openwrt+阿里云DDNS搭配自己的黑群晖</title>
      <link href="/2020/02/23/openwrt-a-li-yun-ddns-da-pei-zi-ji-de-hei-qun-hui/"/>
      <url>/2020/02/23/openwrt-a-li-yun-ddns-da-pei-zi-ji-de-hei-qun-hui/</url>
      
        <content type="html"><![CDATA[<p>本文出自：<a href="https://hegu.app/archives/221" target="_blank" rel="noopener">https://hegu.app/archives/221</a><br>所谓阿里云DDNS其实并非真正的DDNS服务，而是通过阿里云提供的API加上自己的软路由或者openwrt或其他智能路由实现自动修改DNS记录的功能。因此，使用该方法实现DDNS功能的前提是你需要拥有一个阿里云注册并使用阿里云的域名解析服务的域名，或者你的域名是其他域名提供商注册但域名解析服务使用阿里云的。现在的域名也是白菜价了，一个普通一点的后缀价格几块钱一年，这成本基本可以忽略了。</p><p>以下我以自己使用的openwrt固件为例</p><p><strong>实现过程</strong></p><ul><li>1.在openwrt中安装适用于阿里云DDNS的插件</li></ul><p>通过putty或其他SSH客户端登录到路由器安装DDNS插件需要运行如下命令</p><p>opkg update<br>opkg install luci-i18n-ddns-zh-cn<br>需要注意的是，如果你使用的是原生的openwrt固件因为软件源在国外，运行opkg update时可能会很慢甚至出错。你可以将软件源换成中科大的。</p><ul><li>2.安装适用于openwrt的阿里云DDNS支持脚本</li></ul><p>openwrt的DDNS插件是不支持阿里云DDNS的，使用国内大神开发的脚本后才能支持阿里云DDNS脚本下载地址及使用方法：<a href="https://www.right.com.cn/forum/thread-267501-1-1.html" target="_blank" rel="noopener">https://www.right.com.cn/forum/thread-267501-1-1.html</a></p><p>源码大神已上传GitHub，链接在此：<br><a href="https://github.com/sensec/ddns-scripts_aliyun" target="_blank" rel="noopener">https://github.com/sensec/ddns-scripts_aliyun</a></p><p>我的安装方法是首先使用scp软件将大神制作的脚本上传到路由器的/tmp目录下，然后执行下面的命令安装</p><pre><code>opkg install openssl-utilcd /tmpopkg install ./ddns-scripts_aliyun_1.0.0-1_all.ipk</code></pre><ul><li>3.到阿里云申请accesskeys<br>![1.png][1]<br>登录阿里云的控制台后鼠标单击右上角的头像就能看到accesskeys<br>![2.png][2]<br>如上图，进入后单击”创建AccessKey”根据提示验证后即可获得AceessKey ID和密码</li><li>4.在openwrt中配置阿里云DDNS</li></ul><p>登入openwrt路由器管理界面依次选择“服务”—“动态DNS”。<br>![3.png][3]<br>进入后首先将服务提供商修改为“aliyun.com”<br>![4.png][4]<br>总结</p><p>如果一切按照上面设置完成后重启一遍路由器，应该会在阿里云域名记录里面添加一掉A记录，至此，配置完成。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 阿里云 </tag>
            
            <tag> DDNS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>优惠购买境外服务器vultr一键快速搭建自己的ssr并开启bbr加速访问vpn教程</title>
      <link href="/2020/02/23/you-hui-gou-mai-jing-wai-fu-wu-qi-vultr-yi-jian-kuai-su-da-jian-zi-ji-de-ssr-bing-kai-qi-bbr-jia-su-fang-wen-vpn-jiao-cheng/"/>
      <url>/2020/02/23/you-hui-gou-mai-jing-wai-fu-wu-qi-vultr-yi-jian-kuai-su-da-jian-zi-ji-de-ssr-bing-kai-qi-bbr-jia-su-fang-wen-vpn-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<p>原文出处：<a href="https://wistbean.github.io/vultr-ssr-bbr-build-quick.html" target="_blank" rel="noopener">https://wistbean.github.io/vultr-ssr-bbr-build-quick.html</a><br>本教程面向小白搭建ssr快速教程,10分钟搞定,让自己拥有自己的服务器,一键搭建ssr之后进行科学上网,最后开启bbr进行加速访问。</p><p><strong>SSR 简介</strong><br>SSR（ShadowsocksR ） 是 SS（Shadowsocks） 的增强版，在 SS 的基础上添加了一些功能。根据 维基百科 介绍，SSR 增加了一些数据混淆方式，称修复了部分安全问题并可以提高QoS优先级。</p><p><strong>优惠购买vultr</strong><br>在使用了一些服务器之后，我觉得 <a href="https://www.vultr.com/?ref=8212077-4F" target="_blank" rel="noopener">vultr</a> 的性价比超高，最低 $5/月 ，就可以拥有一台 1TB 月流量的服务器了，根本用不完。</p><p>而且现在 <a href="https://www.vultr.com/?ref=8212077-4F" target="_blank" rel="noopener">vultr</a> 优惠力度很大，新用户充值 10 美元送 50 美元。点击<a href="https://www.vultr.com/?ref=8212077-4F" target="_blank" rel="noopener">vultr</a><a href="https://www.vultr.com/?ref=8212077-4F" target="_blank" rel="noopener">送50美元注册链接注册</a></p><p><strong>注册vultr</strong><br>点击 <a href="https://www.vultr.com/?ref=8212077-4F" target="_blank" rel="noopener">vultr送50美元注册链接</a> 进行注册：</p><p>在这里输入你的邮箱和密码，接着点击按钮「Create Account」创建账号，然后 vultr 会给你的注册邮箱发送一份验证邮件，激活就好了。</p><p>接着就可以登录 vultr 官网了：</p><p><strong>vultr 购买流程</strong></p><p>vultr 现在有 16 个境外节点，选择一个离你最近的就好了。</p><p>登录进去之后选择左边的 billing 的菜单进行充值，vultr提供的支付方式简直完美，支持信用卡，比特币，paypal，支付宝，微信支付，在这里可以进行充值支付。</p><p>充值完成之后，就可以左侧的 Sevrers 菜单，接着可以点击 deploy one 或者右侧的 + 号来选购你要的服务器：</p><p>选择服务器的机房位置，一般来说离你越近越好，速度会快那么一丢丢：</p><p>选择服务器的系统类型，选择 CentOS 版本：</p><p>选择服务器的价格和具体配置，自己用的话选最低的就够用了：</p><p>确认购买<br>其它步骤可以忽略，然后点击右下角的 Deploy Now：</p><p>拥有一台服务器<br>点击之后你就拥有一台属于你自己的服务器了：</p><p>点击你的服务器，进去之后你就可以看到你的服务器的ip地址和账号密码了：</p><p><strong>使用vultr搭建vultr服务器</strong><br>windows系统Linux连接工具<br>需要在你的电脑连接到你的服务器，那么就需要连接工具，连接工具有很多个，根据你的需要，以下随意下载一个连接工具即可：<br>这里我用的是FinalShell   下载地址：<a href="http://www.hostbuf.com" target="_blank" rel="noopener">http://www.hostbuf.com</a><br>接着打开连接工具，然后输入你刚刚购买的服务器 ip 地址和端口（端口号是：22），账户名，和密码就可以连接了。接下来就可以操作你的服务器了。</p><p>因原文发布的安装脚本已经失效，本人后整理了一份请大家参照这个安装。确保成功！<br><strong>安装 git</strong><br>项目地址：<a href="https://github.com/cn2t/doubi-SSR" target="_blank" rel="noopener">https://github.com/cn2t/doubi-SSR</a><br>输入命令：</p><pre><code>yum install git</code></pre><p>下载安装ss</p><pre><code>wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/ssr.sh &amp;&amp; chmod +x ssr.sh &amp;&amp; bash ssr.sh</code></pre><p>执行完安装脚本后会出现以下界面<br>![QQ图片20190730161405.png][20]<br>剩下的几乎都是全自动了，在这里提示一下 默认端口一定要改一下（为什么改？别问我我用默认的连上去打不开网页） 用户名密码也自定义 其他可以回车默认即可 1安装完以后4也安装一下据说是加速用的  这个界面默认的打开命令是 bash ssr.sh</p><p><strong>使用Shadowsocks</strong><br>windows使用Shadowsocks<br>原文推荐的是用：<a href="https://pan.baidu.com/s/19m0AfTkPDSRj0bfYrGpbIg" target="_blank" rel="noopener">Shadowsocks windows客户端</a><br>博主已经测试使用原文推荐的客户端需要重启电脑，因为需要.NET4.6.2以上的版本。安装这个之后必须要重启电脑才能生效。<br>在这里我选用的是SSTap-beta-setup-1.0.8.5（具体下载地址大家自行百度吧）</p><p>Android使用Shadowsocks<br>Android点击下载：<a href="https://pan.baidu.com/s/1coAkZn-GuYHu5eIKaHECxA" target="_blank" rel="noopener">Shadowsocks Android客户端</a></p><p>打开apk安装，接着打开APP，输入ip地址，密码，端口，和加密方式。即可科学上网。</p><p>iPhone使用Shadowsocks<br>iPhone要下载的app需要在appstore下载，但是需要用美区账号才能下载，而且这个APP需要钱。在这里提供一种解决方案，就是可以再搭建一个IPsec/L2TP VPN,专门给你的iPhone使用。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> VPS </tag>
            
            <tag> VPN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图片壁纸api</title>
      <link href="/2020/02/23/tu-pian-bi-zhi-api/"/>
      <url>/2020/02/23/tu-pian-bi-zhi-api/</url>
      
        <content type="html"><![CDATA[<p>刷新一次页面换一次图片，可以调用到你的网站背景里面去，多炫酷啊，刷新一下本页看下效果哦。</p><p>说明：随机图片壁纸api，调用的是新浪api，速度不用担心，图片资源也很多</p><p>![01.jpg][1]</p><p>电脑动漫图片：</p><p><a href="http://api.btstu.cn/sjbz/?lx=dongman" target="_blank" rel="noopener">http://api.btstu.cn/sjbz/?lx=dongman</a></p><p>电脑美女图片：</p><p><a href="http://api.btstu.cn/sjbz/?lx=meizi" target="_blank" rel="noopener">http://api.btstu.cn/sjbz/?lx=meizi</a></p><p>电脑随机动漫妹子：</p><p><a href="http://api.btstu.cn/sjbz/?lx=suiji" target="_blank" rel="noopener">http://api.btstu.cn/sjbz/?lx=suiji</a></p><p>手机动漫图片：</p><p><a href="http://api.btstu.cn/sjbz/?lx=m_dongman" target="_blank" rel="noopener">http://api.btstu.cn/sjbz/?lx=m_dongman</a></p><p>手机美女图片：</p><p><a href="http://api.btstu.cn/sjbz/?lx=m_meizi" target="_blank" rel="noopener">http://api.btstu.cn/sjbz/?lx=m_meizi</a></p><p>手机随机动漫妹子：</p><p><a href="http://api.btstu.cn/sjbz/?m_lx=suiji" target="_blank" rel="noopener">http://api.btstu.cn/sjbz/?m_lx=suiji</a></p><p>手机电脑自动判断，电脑显示适合电脑的壁纸，手机显示适合手机的壁纸</p><p><a href="http://api.btstu.cn/sjbz/zsy.php" target="_blank" rel="noopener">http://api.btstu.cn/sjbz/zsy.php</a></p><p>api现在已经有几千张图了，每天都在增加，大家可以玩玩</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> api </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>腾讯云服务器安装爱快软路由教程</title>
      <link href="/2020/02/23/teng-xun-yun-fu-wu-qi-an-zhuang-ai-kuai-ruan-lu-you-jiao-cheng/"/>
      <url>/2020/02/23/teng-xun-yun-fu-wu-qi-an-zhuang-ai-kuai-ruan-lu-you-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<p>原文出自：<a href="http://www.shpcw.com/jszc/shownews146.html" target="_blank" rel="noopener">http://www.shpcw.com/jszc/shownews146.html</a><br>PDF图文版下载[1554892180535778.pdf][1]<br>腾讯云服务器安装爱快软路由教程（傻瓜版）</p><p>我在网上也看到些其它的更简单的安装方法，我提供的这个方法也只是仅供参考，等我教程做好以后，才发现其实有些步骤是可以精简的，最后又想了一下，如果能看些教程觉得这个有些赘述的，那说明他完全只需要参考方法就可以了，不需要按照步骤。反之我觉得教程的步骤还是有必要的。</p><p>我记得还有一些小伙伴们问过，把爱快软路由安装到云服务器上有什么用，我现在发现好像除了做VPN服务器，好像也没有太大的用处，爱快软路由目前VPN可以支持    PPTP 服务端、L2TP 服务端、OpenVPN 服务端 。虽然不如一些专业的VPN系统，但至少是免费的啊，对一些要求不高的小伙伴还是很实用的。</p><p>第一部分：先申请一个腾讯云主机</p><p>1、可以在实例列表里，点击一下   新建</p><p>2、计费模式   包年包月  按量计费  可以根据实际需要进行选择，还有云主机所在区域和可用区也可以按区选择就行了。还有网络类型有  基础网络  和  私有网络，具体有什么区别我也没有研究，不过我习惯选择  基础网络</p><p>3、爱快需要运行的操作系统是Ubuntu,但是我们既然是傻瓜版的教程，我们就全部用图形化的来操作，所以我们在申请的时候，先选择操系统为 Windows ，镜像版本为 Windows Server 2008 R2 企业版 SP1 64位  然后选择   下一步：选择存储和带宽</p><p>4、安装爱快路由器系统，不需要选择 数据盘，网络计费模式  可以选择 按带宽计费 （比较适合访问量比较高的用户），也可以选择  按使用流量（当然适合访问量较小的用户了），因为我这里是为了做教程，当然选择用  按使用量  来为例了</p><p>5、安全组 可以选择  新建安全组 再下拉列表里 选择  放通全部端口，当然这个安全组也可以在后续修改的，如果为了安全考虑，还是建议关闭一些高风险端口。再就是需要设置一下 密码 ，需要按提示达到输入密码的强度才可以，这个密码也是临时用一次就可以了。然后再点击  下一步：确认配置信息</p><p>6、最后就是确认   开通  了</p><p>7、创建好以后，就可以在实例列表里找到刚才创建的主机了</p><p>8、然后选择  主机 右侧的  登录</p><p>9、再接着选择   立即登录  然后在弹出的界面里可以看到如下图，我们可以选一下 发送远程命令的地方，选择一下</p><p>10、输入我们刚才设置的 复杂密码 然后就可以登录到系统了。这样就可以看到我们需要用到的相关的IP地址信息了。可以把这些　截图保存下来，因为一会需要用的着。</p><p>11、然后点击一下 右下角  打开网络和共享中心  然后点一下  本地连接  然后再点击一下  详细信息</p><p>12、以上方法只是通过Windows系统来查看相关的IP地址和MAC等相关信息，以上信息也是可以通过 Ubuntu系统里的命令来查看的，这样就可以省略掉安装Windows 2008系统的麻烦步骤了，直接安装Ubuntu就可以了。已经查好相关信息了，我们把系统再重装回 Ubuntu 吧。然后在实例列表里，更多 选项里 选择  重装系统</p><p>13、然后选择  公共镜像  里的  Ubuntu ，系统版本随便选择一下就可以了，接着就是再设置一下密码吧</p><p>14、最后点击  开始重装  至此云主机已经申请完成，并查询到了相关的IP地址和MAC地址信息</p><p>第二部分：通过 VMware Workstation Pro（VMware的安装过程我就不写了，如果需要的话，百度一下吧） 安装一下爱快软路由器，这个安装过程我还是赘述一下吧<br>1、选择 文件 菜单   新建虚拟机</p><p>本帖隐藏的内容</p><p>2、以下几个步骤不解说了，直接看截图，光盘镜像里，选择一下  爱快的 ISO 镜像文件，在爱快的网站上有下载的</p><p>3、以下虚拟机的安装位置需要选择一下</p><p>4、磁盘大小一般设个2G以上就可以了，但也不要太大。下列选择  将虚拟磁盘存储为单个文件</p><p>5、点击完成以后，可以显示出已经创建好的 虚拟机</p><p>6、选择一下  编辑虚拟机设置</p><p>7、点击一下   网络适配器，把  网络连接 项选择  桥接模式  再选择  高级   </p><p>8、然后在 MAC地址框里 输入我们第一部分看到的MAC地址，然后点击一下  确定</p><p>9、到  虚拟机设置 里再点击一下  添加  网络适配器</p><p>10、然后在  网络连接 里  选择  桥接模式</p><p>11、值得注意的就是，如果安装的爱快系统是64位版本的，那就需要把虚拟机的内存改成4G或更大一点，不然就会有以下的提示，不能安装</p><p>12、我们可以关闭虚拟盘，调整一虚拟机的内存大小，如果安装的是32位版本就不会有这样的提示了，可以跳过一步了，把内存调整好以后   确定  就可以了</p><p>13、然后在虚拟机里按一下8  1 ，再输入一下 y 键，就可以把爱快安装到虚拟机里了，安装完成以后，虚拟机会自动重启的</p><p>14、虚拟机启动好以后，然后在虚拟机里按一下 回车键</p><p>15、然后在爱快的控制台里   1、设置网卡绑定  设置一下网卡。把前面修改过MAC地址的网卡接口 eth0 绑定成 WAN1接口  ，再把 eth1 绑定成 LAN1 接口 （不要再问我怎么绑定哦，按一下1键以后，是可以看到提示的）</p><p>16、现在我们可以通过电脑火狐浏览器输入 192.168.1.1  打开路由器设置页面了</p><p>17、把路由器 WAN口设置成 第一部分的获到了的IP地址和网关（输入IP地址和网关的时候，要特别注意先择子网掩码，），然后再点一下 保存</p><p>18、接着在爱快的 网络设置 – DNS设置  里配置好前面获得到 DNS 的信息后，再点一下 保存</p><p>19、再接着在爱快路由器的设置页里   系统设置 里的 远程访问  然后把  WEB访问控制： 允许通过外网访问路由WEB管理界面  选项里  打勾并保存 (如果这项不打勾的话，没有办法通过外网访问路由器，反过来说，如果以后在配置路由器的时候，这项也不能去掉，不然路由器也就没有办法访问了)  然后把路由器系统关机。</p><p>20、然后再到  虚拟机设置 里提取 虚拟机硬盘 的镜像的文件（Ubuntu.vmdk），因为下部分操作步骤中需要把这个文件上传到腾讯云服务器上去。</p><p>第三部分：上传镜像并安装到云服务器</p><p>1、登录到腾讯云服务器控制台后，点一下 总览  然后 选择  对象存储服务</p><p>2、选择  存储桶列表  再点击一下  创建存储桶 ，输入一个  名称 ，然后选择一下 所属地域（建议和前面所选云服务器在同一个区域），然后点击  确定</p><p>3、接着  点击  上传文件  ，再接着浏览到前面导出的虚拟机的文件（Ubuntu.vmdk），然后点击  上传 按纽，等待上传完成</p><p>4、接着可以在上传完成后的文件列表里，点击一下  详细 ，再到 签名链接位置的 复制链接 上点击一下，复制一下镜像链接</p><p>5、然后再到  总览  里点击一下  云服务器  ，接着再到  镜像  里选择  导入镜像</p><p>6、点击一下 导入镜像  以后，把 我已做好以上准备上打勾，再点  下一步</p><p>7、可以按我下图中，填写相关的信息，但最下列一行   导入方式  一定要选择  强制  再接着点击  开始导入</p><p>8、导入完成以后，可以看到前面成功导入的镜像文件了</p><p>9、再点击  实例 ，到前面创建的 云服务器，再选择  重装系统  ，然后再选择 自定义镜像 ，接着在  镜像 选项卡里 选择前面导入  镜像文件  ，再点一下   开始重装  ，至此已经全部安装完成了</p><p>10、然后就可以通过外网的IP地址访问到爱快路由器系统了 <a href="http://115.159.82.18" target="_blank" rel="noopener">http://115.159.82.18</a> (当然你们安装完成后的IP地址肯定不是这个)</p><p>11、现在已经可以正常使用了</p><p>总结：前些天也看到网上有另一个 阿里云的教程，他那个安装起来更方便，但是在目前爱快路由系统里配置外网的IP地址的时候，不能设置子网掩码，所以外网的IP地址和网关只能是相同的网段才可以，还有一点就是爱快路由系统默认是没有打开   外网的IP地址访问  的选项，所以就算路由器系统安装好，也不能通过外网来管理。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 腾讯云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>群晖6.2最新获取root权限设置root密码方法</title>
      <link href="/2020/02/23/qun-hui-6-2-zui-xin-huo-qu-root-quan-xian-she-zhi-root-mi-ma-fang-fa/"/>
      <url>/2020/02/23/qun-hui-6-2-zui-xin-huo-qu-root-quan-xian-she-zhi-root-mi-ma-fang-fa/</url>
      
        <content type="html"><![CDATA[<p>原文出自：<a href="http://blog.sina.com.cn/s/blog_607dbd7b0102yr59.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_607dbd7b0102yr59.html</a><br>一、控制面板—-终端机和SNMP里，开启SSH功能。</p><p>二、登陆群晖的SSH，用系统默认用户登陆，我这里是admin，所以我输入以下命令，admin和IP地址修改为你的</p><pre><code>    ssh admin@10.10.10.172</code></pre><p>三、登陆后输入以下命令切换至root账号，这时还需在输入一次你的群晖登陆密码</p><pre><code>    sudo -i</code></pre><p>四、输入以下命令进入到ssh的目录</p><pre><code>    cd /etc/ssh</code></pre><p>五、给sshd_config赋予755的权限</p><pre><code>    chmod 755 sshd_config</code></pre><p>六、修改config配置文件内容<br>输入</p><pre><code>    vi /etc/ssh/sshd_config</code></pre><p>点击“i”键进入编辑模式，找到</p><pre><code>    #PermitRootLogin prohibit password</code></pre><p>更改为,注意前面的“#”号不要</p><pre><code>    PermitRootLogin yes</code></pre><p>按“esc”键退出编辑模式，输入“:wq”保存</p><p>七、重启群晖</p><pre><code>    reboot</code></pre><p>八、重启完成再次以系统默认账户登录群晖SSH,我这里是admin，所以我输入以下命令，admin和IP地址修改为你的</p><pre><code>    ssh admin@10.10.10.172</code></pre><p>九、再次输入以下命令切换至root账号，这时还需在输入一次你的群晖登陆密码</p><pre><code>    sudo -i</code></pre><p>十、输入下面命令修改root默认密码，xxx改为你要设置的密码，回车没有任何提示即可</p><pre><code>    synouser --setpw root xxx</code></pre><p>十一、这时再从新以root权限就可以登陆到ssh了，ip记得改为你群晖的ip哦。</p><pre><code>    ssh root@10.10.10.172</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 群晖 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>免费接码平台</title>
      <link href="/2020/02/23/mian-fei-jie-ma-ping-tai/"/>
      <url>/2020/02/23/mian-fei-jie-ma-ping-tai/</url>
      
        <content type="html"><![CDATA[<p>国内免费接码平台</p><p><a href="https://sms.cm" target="_blank" rel="noopener">https://sms.cm</a><br><a href="https://www.pdflibr.com" target="_blank" rel="noopener">https://www.pdflibr.com</a><br><a href="https://www.becmd.com" target="_blank" rel="noopener">https://www.becmd.com</a><br><a href="http://www.smszk.com" target="_blank" rel="noopener">http://www.smszk.com</a><br>国外免费接码平台</p><p><a href="https://zh.mytrashmobile.com（中文）" target="_blank" rel="noopener">https://zh.mytrashmobile.com（中文）</a><br><a href="https://ch.freephonenum.com（中文）" target="_blank" rel="noopener">https://ch.freephonenum.com（中文）</a><br>SMSReceiveFree：<a href="https://smsreceivefree.com" target="_blank" rel="noopener">https://smsreceivefree.com</a><br>Receive SMS Online for FREE：<a href="https://www.receive-sms-online.info" target="_blank" rel="noopener">https://www.receive-sms-online.info</a><br>Receive a SMS Online：<a href="https://receive-a-sms.com" target="_blank" rel="noopener">https://receive-a-sms.com</a><br>Free SMS Numbers Online：<a href="https://smsnumbersonline.com" target="_blank" rel="noopener">https://smsnumbersonline.com</a><br>Receive SMS online for Free：<a href="https://sms-online.co/receive-free-sms" target="_blank" rel="noopener">https://sms-online.co/receive-free-sms</a><br>Receive-SMS：<a href="https://receive-sms.com" target="_blank" rel="noopener">https://receive-sms.com</a><br>Receive FREE SMS online：<a href="http://receivefreesms.com" target="_blank" rel="noopener">http://receivefreesms.com</a><br>RECEIVE SMS ONLINE：<a href="https://www.receivesmsonline.net" target="_blank" rel="noopener">https://www.receivesmsonline.net</a><br>Free Online Phone：<a href="https://www.freeonlinephone.org" target="_blank" rel="noopener">https://www.freeonlinephone.org</a><br>Receive SMS Online：<a href="http://receive-sms-online.com" target="_blank" rel="noopener">http://receive-sms-online.com</a><br>TextNow：<a href="https://www.textnow.com" target="_blank" rel="noopener">https://www.textnow.com</a><br>Textfree：<a href="https://www.pinger.com/text-free/" target="_blank" rel="noopener">https://www.pinger.com/text-free/</a><br>SELLAITE：<a href="http://sms.sellaite.com/" target="_blank" rel="noopener">http://sms.sellaite.com/</a><br>Twilio：<a href="https://www.twilio.com/" target="_blank" rel="noopener">https://www.twilio.com/</a><br><a href="https://receive-sms.com/" target="_blank" rel="noopener">https://receive-sms.com/</a><br><a href="http://receive-sms-online.com/" target="_blank" rel="noopener">http://receive-sms-online.com/</a><br><a href="http://sms.sellaite.com/" target="_blank" rel="noopener">http://sms.sellaite.com/</a><br><a href="http://hs3x.com/" target="_blank" rel="noopener">http://hs3x.com/</a><br><a href="http://receivefreesms.net" target="_blank" rel="noopener">http://receivefreesms.net</a><br><a href="http://receivesmsonline.in" target="_blank" rel="noopener">http://receivesmsonline.in</a><br><a href="http://www.receive-sms-now.com" target="_blank" rel="noopener">http://www.receive-sms-now.com</a><br><a href="https://sms-receive.net" target="_blank" rel="noopener">https://sms-receive.net</a><br><a href="https://www.receivesms.net" target="_blank" rel="noopener">https://www.receivesms.net</a><br><a href="http://www.freesmsverifications.com" target="_blank" rel="noopener">http://www.freesmsverifications.com</a><br><a href="http://receiveonlinesms.biz" target="_blank" rel="noopener">http://receiveonlinesms.biz</a><br><a href="http://receivesmsverification.com" target="_blank" rel="noopener">http://receivesmsverification.com</a><br><a href="https://www.receivesms.co" target="_blank" rel="noopener">https://www.receivesms.co</a><br><a href="http://receiveonlinesms.com" target="_blank" rel="noopener">http://receiveonlinesms.com</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>绿化大师环境盖伦下载机如何修改绝地求生默认游戏特效</title>
      <link href="/2020/02/23/lu-hua-da-shi-huan-jing-gai-lun-xia-zai-ji-ru-he-xiu-gai-jue-di-qiu-sheng-mo-ren-you-xi-te-xiao/"/>
      <url>/2020/02/23/lu-hua-da-shi-huan-jing-gai-lun-xia-zai-ji-ru-he-xiu-gai-jue-di-qiu-sheng-mo-ren-you-xi-te-xiao/</url>
      
        <content type="html"><![CDATA[<p>声明：本文非博主原创，方法和理论均来自网络。<br><strong>特别提示：因左斜杠在本文不能正常显示只好以“#”代替，请大家复制代码后自行替换为左斜杠！</strong><br>1 首先我们先在一台客户机提取我们已经设置好的游戏特效文件（方法就是正常进入游戏，然后设置你需要的特效等级就行），文件路径C:#Users#Administrator#AppData#Local#TslGame#Saved#Config#WindowsNoEditor 这个路径下的GameUserSettings这个名字的文件是绝地的配置文件<br>2 然后把这个配置文件拷贝到服务器上开机任务目录里<br>拷贝三分，改下名字<br>如图：<br>![QQ图片20190728193555.png][1]<br>然后在目录里新建一个批处理文件并右键点编辑输入以下内容</p><p>del D:#网络游戏#绝地求生大逃杀#zhconfig#1_GameUserSettings.ini<br>del D:#网络游戏#绝地求生大逃杀#zhconfig#2_GameUserSettings.ini<br>del D:#网络游戏#绝地求生大逃杀#zhconfig#3_GameUserSettings.ini<br>del D:#网络游戏#绝地求生大逃杀#GameConfigSet.exe<br>rd D:#网络游戏#绝地求生大逃杀#zmjsq# /s/q<br>copy steam.bat D:#网络游戏#绝地求生大逃杀# /y</p><p>XCOPY D:#维护软件#开机通道#绝地求生#1_GameUserSettings.ini D:#网络游戏#绝地求生大逃杀#zhconfig /s  /e<br>XCOPY D:#维护软件#开机通道#绝地求生#2_GameUserSettings.ini D:#网络游戏#绝地求生大逃杀#zhconfig /s  /e<br>XCOPY D:#维护软件#开机通道#绝地求生#3_GameUserSettings.ini D:#网络游戏#绝地求生大逃杀#zhconfig /s  /e</p><p>请自行替换自己的客户机游戏路径（D:#网络游戏#绝地求生大逃杀）及服务器开机通道路径（D:#维护软件#开机通道#绝地求生）保存添加开机任务即可<br><strong>注释：本批处理是博主在联系盖伦官方后索要的批处理基础上修改的</strong><br>“del D:#网络游戏#绝地求生大逃杀#GameConfigSet.exe” 删除绝地求生游戏运行时自动根据显卡型号配置特效的执行文件（实测：1060显卡本来是可以高特效流畅游戏的但是自动配置的特效却是最低）<br>“rd D:#网络游戏#绝地求生大逃杀#zmjsq# /s/q” 删除绝地求生游戏自带的追梦加速器文件夹（毕竟不是所有的网吧都用追梦加速器，如果是追梦加速器环境可删除本行。）<br>“copy steam.bat D:#网络游戏#绝地求生大逃杀# /y”  复制steam.bat文件替换游戏目录文件（最新更新的版本里吃鸡游戏还是会自动启动追梦加速器的，我们从游戏目录里复制出来一份steam.bat文件并编辑删除“START zmjsq\ZsSteamjsq.exe”这一行把steam.bat文件保存到开机通道目录里）<br>至此，可以愉快的按照自己的设置好的特效愉快的吃鸡了。祝各位同僚工作顺利、财源广进！</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> 去广告 </tag>
            
            <tag> 网吧系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华为旗下“鸿蒙OS操作系统”开发环境搭建</title>
      <link href="/2020/02/23/hua-wei-qi-xia-hong-meng-os-cao-zuo-xi-tong-kai-fa-huan-jing-da-jian/"/>
      <url>/2020/02/23/hua-wei-qi-xia-hong-meng-os-cao-zuo-xi-tong-kai-fa-huan-jing-da-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><h2 id="硬件推荐配置"><a href="#硬件推荐配置" class="headerlink" title="硬件推荐配置"></a>硬件推荐配置</h2><ul><li><p>2 GHz 双核处理器或者更高等级CPU</p></li><li><p>2 GB 系统内存及以上</p></li><li><p>200GB 可用磁盘空间</p></li></ul><h2 id="开发环境推荐"><a href="#开发环境推荐" class="headerlink" title="开发环境推荐"></a>开发环境推荐</h2><p>您需要安装一个64位版本的Ubuntu（推荐Ubuntu 16.04）</p><pre><code>sudo apt-get -y install openjdk-8-jdk git-core gnupg flex bison gperf build-essential zip curl zlib1g-dev libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z-dev ccache libgl1-mesa-dev libxml2-utils xsltproc unzip lib32z1-dev qemu g++-multilib gcc-multilib python3-paramiko python-paramiko python-jenkins python-requests python-xlwt libglib2.0-dev libpixman-1-dev linux-libc-dev:i386sudo apt-get -y install gcc-5-aarch64-linux-gnu g++-5-aarch64-linux-gnu</code></pre><h2 id="安装Clang编译器并完成配置（用于编译方舟编译器代码）"><a href="#安装Clang编译器并完成配置（用于编译方舟编译器代码）" class="headerlink" title="安装Clang编译器并完成配置（用于编译方舟编译器代码）"></a>安装Clang编译器并完成配置（用于编译方舟编译器代码）</h2><p>下载<strong>clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-16.04</strong><br>LLVM下载地址：<a href="http://releases.llvm.org/download.html#8.0.0" target="_blank" rel="noopener">http://releases.llvm.org/download.html#8.0.0</a></p><p>放置到<code>openarkcompiler/tools</code>目录，打开<code>openarkcompiler/build/config/BUILDCONFIG.gn</code>文件，将<code>GN_C_COMPILER</code>、<code>GN_CXX_COMPILER</code>和<code>GN_AR</code>三个变量配置为Clang编译器所在路径，例如：</p><pre><code>GN_C_COMPILER = "${MAPLE_ROOT}/tools/clang_llvm-8.0.0-x86_64-linux-gnu-ubuntu-16.04/bin/clang"GN_CXX_COMPILER = "${MAPLE_ROOT}/tools/clang_llvm-8.0.0-x86_64-linux-gnu-ubuntu-16.04/bin/clang++"GN_AR = "${MAPLE_ROOT}/tools/clang_llvm-8.0.0-x86_64-linux-gnu-ubuntu-16.04/bin/llvm-ar"</code></pre><p>其中${MAPLE_ROOT}为openarkcompiler源码根目录。</p><h2 id="安装Ninja、GN-并完成配置"><a href="#安装Ninja、GN-并完成配置" class="headerlink" title="安装Ninja、GN 并完成配置"></a>安装Ninja、GN 并完成配置</h2><p>下载<strong>Ninja(v1.9.0)</strong>及<strong>GN(Linux Version)</strong><br>Ninja下载地址：<a href="https://github.com/ninja-build/ninja/releases" target="_blank" rel="noopener">https://github.com/ninja-build/ninja/releases</a><br>GN下载地址：<a href="https://archive.softwareheritage.org/browse/content/sha1_git:2dc0d5b26caef44f467de8120b26f8aad8b878be/raw/?filename=gn" target="_blank" rel="noopener">https://archive.softwareheritage.org/browse/content/sha1_git:2dc0d5b26caef44f467de8120b26f8aad8b878be/raw/?filename=gn</a></p><p>将GN和Ninja可执行程序放置到openarkcompiler/tools目录，打开openarkcompiler/Makefile文件，将GN和NINJA两个变量配置为GN和Ninja可执行程序所在路径。例如：</p><pre><code>GN := ${MAPLE_ROOT}/tools/gn/gnNINJA := ${MAPLE_ROOT}/tools/ninja_1.9.0/ninja</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> 鸿蒙OS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>非Docker方法安装qBittorrent</title>
      <link href="/2020/02/23/fei-docker-fang-fa-an-zhuang-qbittorrent/"/>
      <url>/2020/02/23/fei-docker-fang-fa-an-zhuang-qbittorrent/</url>
      
        <content type="html"><![CDATA[<p>一、前言<br>1、基本上群晖想要安装qBittorrent，网上教程都是从Docker部署。对于一些人来说总感觉不爽，这个帖子就满足一下套件党的心愿吧。<br>2、群晖是PT利器，从最初的群晖自带的 Download Station，到 Transmission，然后到现在的 qBittorrent，最后留下了后两者。<br>A、Download Station：当做种项目多了添加新种时经常会出现列表消失的情况，要关闭重新打开才能显示。最不能忍受的是占用双倍空间，必须抛弃！<br>B、Transmission：占用资源小，特色标签，是时下各大PT站热门的选择。但是没有跳过校验的功能，辅种时跳校验需要手动操作，步骤繁琐。<br>C、qBittorrent：功能方面跟TR很相似，个人感觉更好用。最重要的是可以跳过校验，是辅种利器。</p><p>3、下面是两款软件的界面对比：</p><p>![QB.png][1]<br>![TR.png][2]</p><p>二、安装：</p><p>1、首先启动家目录服务：如果不打开安装套件后无法启动。qBittorrent 的配置文件，种子文件，校验文件等都是存放在家目录里。</p><p>![快照1.png][3]</p><p>2、套件中心手动安装 qBittorrent 套件。</p><p>![快照2.png][4]</p><p>3、完成后启动套件（初始登录帐号是：admin 密码是：adminadmin）</p><p>![快照3.png][5]</p><p>三：技巧<br>配置文件：home.config\qBittorrent\qBittorrent.conf<br>种子目录：home.local\share\data\qBittorrent\BT_backup</p><p>1、qBittorrent 无法像 Transmission 那样在 WEB 界面修改缓存大小，可以通过修改配置文件来实现。<br>用写字板打开配置文件，在 [Preferences] 字段新增一行 Downloads\DiskWriteCacheSize=XXXX 其中XXXX是缓存大小，单位是MB。</p><p>![快照4.png][6]</p><p>2、如果使用 Chrome 浏览器，还可以添加扩展程序 Remote Torrent Adder，通过上下文菜单把种子添加到 qBittorrent 或 Transmission 里。</p><p>![快照5.png][7]<br>![快照8.png][8]</p><p>3、当然移动管理是不能少的，安卓手机可以通过安装 APP 来管理你的下载（我是安卓党，苹果党的抱歉了）。</p><p>![快照9.png][9]</p><p>![快照10.png][10]</p><p>1、以上所有的附件都包含在下面的大礼包里，其中的 Transmission 跳检版我就不折腾了，感兴趣的自己折腾去。</p><p>2、资源是我NAS自动同步到网盘的，有新会自动同步到大礼包里，追新的朋友可以关注自取。</p><p>3、蹭一下26号的热度，顺便求个药。望大佬成全！</p><p>下载链接: <a href="https://pan.baidu.com/s/14t0rCwxtFiWfI-HdxXSJCQ" target="_blank" rel="noopener">https://pan.baidu.com/s/14t0rCwxtFiWfI-HdxXSJCQ</a> 提取码: de4b</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 群晖 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云aliyun主机ECS快速安装搭建配置ROS</title>
      <link href="/2020/02/23/a-li-yun-an-zhuang-ros/"/>
      <url>/2020/02/23/a-li-yun-an-zhuang-ros/</url>
      
        <content type="html"><![CDATA[<ul><li>以下内容转自<a href="https://www.cnblogs.com/itfat/p/8183644.html" target="_blank" rel="noopener">https://www.cnblogs.com/itfat/p/8183644.html</a></li></ul><p>注意阿里云的安全组建议开放任意协议和端口，任意IP允许访问<br>今天测试阿里云2C4G的死活失败，但是1C1G就OK。大家注意下。</p><p>阿里云环境centos6.9 x64：<br>内网网卡为eth0<br>外网网卡为eth1<br>阿里云的linux下硬盘名称为/dev/vda</p><p>安装ROS：chr-6.39.2.img版本<br>内网网卡为ether1<br>外网网卡为ether2<br>上面描述的很重要，你要根据你的VPS实际网卡情况，来设定脚本。</p><ul><li><p>脚本内容：</p><pre><code>  wget http://download2.mikrotik.com/routeros/6.39.2/chr-6.39.2.img.zip -O chr.img.zip &amp;&amp; \  gunzip -c chr.img.zip &gt; chr.img &amp;&amp; \  mount -o loop,offset=33554944 chr.img /mnt &amp;&amp; \  ADDRESS0=`ip addr show eth0 | grep global | cut -d' ' -f 6 | head -n 1` &amp;&amp; \  ADDRESS1=`ip addr show eth1 | grep global | cut -d' ' -f 6 | head -n 1` &amp;&amp; \  GATEWAY0=`ip route list | grep '10.0.0.0/8' | cut -d' ' -f 3` &amp;&amp; \  GATEWAY1=`ip route list | grep default | cut -d' ' -f 3` &amp;&amp; \  echo "/ip address add address=$ADDRESS0 interface=[/interface ethernet find where name=ether1]  /ip address add address=$ADDRESS1 interface=[/interface ethernet find where name=ether2]  /ip route add dst-address=10.0.0.0/8 gateway=$GATEWAY0  /ip route add dst-address=100.64.0.0/10 gateway=$GATEWAY0  /ip route add dst-address=172.16.0.0/12 gateway=$GATEWAY0  /ip route add gateway=$GATEWAY1  " &gt; /mnt/rw/autorun.scr &amp;&amp; \  umount /mnt &amp;&amp; \  echo u &gt; /proc/sysrq-trigger &amp;&amp; \  dd if=chr.img bs=1024 of=/dev/vda &amp;&amp; \  reboot</code></pre></li><li><p>命令说明:</p></li></ul><p>1、wget从ros官方下载CHR镜像到本地目录，并命名为chr.img.zip；建议wget下载。自己搭建http下载的地址，比如可以放到阿里云的oss下载路径。<br><a href="http://lbros.oss-cn-hangzhou.aliyuncs.com" target="_blank" rel="noopener">http://lbros.oss-cn-hangzhou.aliyuncs.com</a><br>2、gunzip把chr.img.zip解压为chr.img<br>3、把chr.img镜像释放到/mnt目录下<br>4、抓取eth0的IP地址，并赋值参数为ADDRESS0<br>5、抓取eth1的IP地址，并赋值参数为ADDRESS1<br>6、抓取ip route里的10.0.0.0/8网关，并赋值参数为GATEWAY0<br>7、抓取ip route里的默认网关，并赋值参数为GATEWAY1<br>8、echo后面的为ros里的命令，ROS的内网网卡赋值内网IP，外网网卡赋值外网IP，并设置默认网关以及到阿里云的局域网段的网关，阿里云的局域网有三个段分别是10.0.0.0/8,100.64.0.0/10,172.16.0.0/12并赋值给/mnt/rw/autorun.scr，这里可以干好多事情，大家自由发挥<br>9、umount /mnt,卸载已经加载的文件系统/mnt<br>10、echo u &gt; /proc/sysrq-trigger 立即重新挂载所有的文件系统为只读<br>11、dd：用指定大小的块拷贝一个文件，并在拷贝的同时进行指定的转换。<br>if=文件名：输入文件名，缺省为标准输入。即指定源文件。<br>of=文件名：输出文件名，缺省为标准输出。即指定目的文件。<br>12、reboot重启机器</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 阿里云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos快速搭建一个属于自己的ipsec/L2TP</title>
      <link href="/2020/02/23/centos-kuai-su-da-jian-yi-ge-shu-yu-zi-ji-de-ipsec-l2tp/"/>
      <url>/2020/02/23/centos-kuai-su-da-jian-yi-ge-shu-yu-zi-ji-de-ipsec-l2tp/</url>
      
        <content type="html"><![CDATA[<p><strong>使用 SSH 工具连接到服务器</strong><br>这里我用的是FinalShell  下载地址:<a href="http://www.hostbuf.com" target="_blank" rel="noopener">http://www.hostbuf.com</a></p><p><strong>使用 IPsec/L2TP 脚本搭建</strong><br>在这里感谢<a href="https://github.com/hwdsl2" target="_blank" rel="noopener">hwdsl2</a>提供的脚本，我们在连接到服务器后使用如下命令：</p><p>安装 wget ：</p><pre><code>yum install wget</code></pre><p>使用脚本：</p><pre><code>wget https://git.io/vpnsetup-centos -O vpnsetup.sh &amp;&amp; sudo sh vpnsetup.sh</code></pre><p>稍等一会安装成功会提供一个 VPN 需要的信息：</p><pre><code>Server IP: xxx.xx.xx.xxIPsec PSK: xxxxUsername: xxxxPassword: xxxx</code></pre><p>这时候就搭建成功了，快吧？</p><p>windowns 7 使用IPsec/L2TP VPN<br>设置VPN连接<br>单击开始菜单，选择控制面板。</p><p>进入 网络和Internet 部分。</p><p>单击 网络与共享中心。</p><p>单击 设置新的连接或网络。</p><p>选择 连接到工作区，然后单击 下一步。</p><p>单击 使用我的Internet连接 (VPN)。</p><p>在 Internet地址 字段中输入你的 VPN 服务器 IP。</p><p>在 目标名称 字段中输入任意内容。</p><p>选中 现在不连接；仅进行设置以便稍后连接 复选框。</p><p>单击 下一步。</p><p>在 用户名 字段中输入你的 VPN 用户名。</p><p>在 密码 字段中输入你的 VPN 密码。</p><p>选中 记住此密码 复选框。</p><p>单击 创建，然后单击 关闭 按钮。</p><p>返回 网络与共享中心。单击左侧的 更改适配器设置。</p><p>右键单击新创建的 VPN 连接，并选择 属性。</p><p>单击 选项 选项卡，取消选中 包括Windows登录域 复选框。</p><p>单击 安全 选项卡，从 VPN 类型 下拉菜单中选择 “使用 IPsec 的第 2 层隧道协议 (L2TP/IPSec)”。</p><p>单击 允许使用这些协议。确保选中 “质询握手身份验证协议 (CHAP)” 复选框。</p><p>单击 高级设置 按钮。</p><p>单击 使用预共享密钥作身份验证 并在 密钥 字段中输入你的 VPN IPsec PSK。</p><p>单击 确定 关闭 高级设置。</p><p>单击 确定 保存 VPN 连接的详细信息。<br>添加注册表<br>新建一个TXT文件，输入以下内容：</p><p>Windows Registry Editor Version 5.00<br>[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\RasMan\Parameters]<br>“ProhibitIpSec”=dword:00000000<br>[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\PolicyAgent]<br>“AssumeUDPEncapsulationContextOnSendRule”=dword:00000002<br>另存为.reg格式的文件，然后双击。</p><p>启动服务<br>将以下服务全部设置为自动启用，要不然会连接不成功：</p><p>IPsec Policy Agent<br>Routing and Remote Access<br>Remote Access Auto Connection Manager<br>Remote Access Connection Manager<br>Secure Socket Tunneling Protocol Service<br>重启电脑后连接<br>重启电脑后，点击右下角的网络连接，双击VPN连接，即可成功连接：</p><p>iPhone/iPad 使用IPsec/L2TP VPN<br>进入设置 -&gt; 通用 -&gt; VPN。<br>单击 添加VPN配置…。<br>单击 类型 。选择 L2TP 并返回。<br>在 描述 字段中输入任意内容。<br>在 服务器 字段中输入你的 VPN 服务器 IP。<br>在 帐户 字段中输入你的 VPN 用户名。<br>在 密码 字段中输入你的 VPN 密码。<br>在 密钥 字段中输入你的 VPN IPsec PSK。<br>启用 发送所有流量 选项。<br>单击右上角的 存储。<br>启用 VPN 连接。</p><p>其它客户端连接方式请参考：<a href="https://github.com/hwdsl2/setup-ipsec-vpn/blob/master/docs/clients-zh.md" target="_blank" rel="noopener">配置 IPsec/L2TP VPN 客户端</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Centos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用此博客的缘由</title>
      <link href="/2020/02/22/ban-wa-gong/"/>
      <url>/2020/02/22/ban-wa-gong/</url>
      
        <content type="html"><![CDATA[<p>由于武汉新肝炎疫情自行隔离期间，闲来无事入了搬瓦工vps。又莫名其妙不知情情况下，买了最便宜的cn2机房。在电信环境下，实在是堪忧。<a href="https://blog.inte8.cn" target="_blank" rel="noopener">测试地址</a>。本来一级域名是挂在搬瓦工上面的，奈何它的打开速度太头铁。本人又不舍得再为它买cdn。没办法，只能另寻出路。不想github+hexo，竟然响应速度超过了搬瓦工。故正式将一级域名前移到了github名下。(就是本站咯)至于搬瓦工那边使用不使用到时候再考虑了！暂时先把家安置在这里好了！</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客终于算是差不多了</title>
      <link href="/2020/02/22/bo-ke-zhong-yu-suan-shi-chai-bu-duo-liao/"/>
      <url>/2020/02/22/bo-ke-zhong-yu-suan-shi-chai-bu-duo-liao/</url>
      
        <content type="html"><![CDATA[<p>2020年2月22日04:57:36<br>博客终于算是差不多了，折腾了一整天。由于太喜欢<a href="https://blinkfox.github.io/" target="_blank" rel="noopener">闪烁之狐</a>这个主题了，实在是不忍心魔改。(当然，能力也是一方面问题)看了N多遍的<a href="https://inte8.cn/2020/02/21/hexo-theme-matery/">模板说明文件</a>并对比<a href="https://github.com/blinkfox/hexo-theme-matery" target="_blank" rel="noopener">github</a>md说明文件并一一对比后才有如此的结果。不能说完美，仅仅是<a href="https://blinkfox.github.io/" target="_blank" rel="noopener">闪烁之狐</a>创造了这个条件给我们。基本上本博客已把除icp备案字段部分，其他模块全部都应用了。甚至也动用了我十多年没有用过的ps功底。。回首一想，毕业已经十多年了。然而，自己都做过什么呢？这个问题，恐怕我自己问我自己都回答不了。就且先不说把。日后，如果再有改动也是参照主题制作者的<a href="https://inte8.cn/2020/02/21/hexo-theme-matery/">说明文件</a>进行小篇幅修改。今天就到这里吧！</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> 主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PVE下安装AdGuard Home搭建一个带广告过滤的私有DNS服务器及优化部署</title>
      <link href="/2020/02/21/pve-aguard/"/>
      <url>/2020/02/21/pve-aguard/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>很多人可能会问：AdGuard<br>Home是干嘛用的？假如我们把整个互联网比喻成一个城市的供水，每个地区自来水厂提供的水质和你所在管网末端位置的不同，有些家庭会明智的选择使用前置净水器，可以解决管道中的二次污染、软化水质、阻止水垢、防止锈蚀、保护净水器，当然还有太阳能和燃气热水器等等，但最终享受干净水的是人。精致的家庭还会使用厨下式厨余垃圾处理器，而很多的家庭也许都不知道什么是前置净水器、什么是厨余处理器。互联网和供水一样，有大带宽和小带宽，有管网污染的问题，有被政府监控和被黑客偷窥的问题，还有烦人的广告问题，无论是视频前和视频中的广告，所以在入户光猫之后的主路由器上安装并使用私有DNS服务器（AdGuard Home），就可以有助于“清洗流量”。根据AdGuard Home 官网介绍，AdGuard Home 是一款全网广告拦截与反跟踪软件。在您将其安装完毕后，它将保护您所有家用设备，同时您不再需要安装任何客户端软件。随着物联网与连接设备的兴起，掌控您自己的整个网络环境变得越来越重要。简单的点讲就比如Google的8.8.8.8，阿里云的223.5.5.5，114的114.114.114.114，还有Cloudflare的1.1.1.1，这些都是提供DNS服务的公共DNS服务器。而AdGuard Home在给我们提供DNS服务的同时还提供去广告的功能，这就有点意思了吧~~</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/0.png" alt=""></p><pre><code>   博主是用PVE作为宿主机的环境，所以就在PVE系统里面安装了这个AdGuard Home，来看看怎么安装和使用吧。</code></pre><p>一、安装教程</p><p>1、下载AdGuardHome_PVE-LXC.tar.gz镜像文件：打开<a href="https://dl.gxnas.com" target="_blank" rel="noopener">下载地址</a>，进入Proxmox-VE（PVE虚拟平台）文件夹，找到AdGuardHome_PVE-LXC.tar.gz，右键复制下载链接到迅雷下载；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/1-1.png" alt=""></p><p>2、通过SSH工具（本教程采用WinSCP），把下载的“AdGuardHome_PVE-<br>LXC.tar.gz”，上传到PVE系统下的“/var/lib/vz/template/cache”里面；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/2-1.png" alt=""></p><p>3、通过网页访问PVE后台，点击右上角“创建CT”；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/3-1.png" alt=""></p><p>4、创建：LXC容器，“一般”标签栏的输入以下信息：<br>主机名称：自己随便写<br>密码：自己设置<br>确认密码：同上<br>然后点下一步</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/4-1.png" alt=""></p><p>5、点“模板”标签栏的“模版”下拉菜单，选择“AdGuardHome_PVE-LXC.tar.gz”，下一步；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/5-1.png" alt=""></p><p>6、“根磁盘“标签设置磁盘大小2G，下一步；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/6-1.png" alt=""></p><p>7、”CPU“标签设置1核，下一步；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/7-1.png" alt=""></p><p>8、”内存“标签设置内存1024M ，交换分区用默认的512，下一步；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/8-1.png" alt=""></p><p>9、”网络“标签的IPv4可以根据自己的内网设置静态IP（本教程内网是192.168.1.X的号段，所以设置192.168.1.2/24），IPv6设置DHCP，下一步；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/9-1.png" alt=""></p><p>10、“DNS”标签这里不需要设置，直接下一步；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/10-1.png" alt=""></p><p>11、“确认”标签，最后确认一下信息，如果正确无误就勾选左下角的“创建后启动”再点“完成”。</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/11-1.png" alt=""></p><p>二、相关的设置<br>1、回到PVE系统的“数据中心”，找到刚刚建立的AdGuard容器，点它进入控制台，输入登录的用户名root，回车，再输入之前设置的密码，输入ip<br>addr回车，检查一下显示的IP地址是否与刚才安装时设置的IP地址一致；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/12.png" alt=""></p><p>2、输入ping baidu.com，回车，检查容器能否连通外网；有外网IP地址返回的表示外网连接正常，按一下Ctrl+C结束测试。</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/13.png" alt=""></p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/14.png" alt=""></p><p>3、在局域网电脑的浏览器地址栏输入刚才安装AdGuardHome设置的IP:3000（比如我的是192.168.1.2:3000）；</p><p>4、开始配置；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/15.png" alt=""></p><p>5、网页管理界面，我们用默认的端口，不需要更改，下一步；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/16.png" alt=""></p><p>6、身份认证，需要自己设置用户名和密码，下一步；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/17.png" alt=""></p><p>7、下一步；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/18.png" alt=""></p><p>8、打开仪表盘；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/19.png" alt=""></p><p>9、主界面是这样的；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/20.png" alt=""></p><p>10、点最上面的菜单栏“设置”-“常规设置”，这四个选项根据自己要求设置（博主勾了1、2、4），然后拉到下面，点保存；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/21.png" alt=""></p><p>11、点最上面的菜单栏“设置”-“DNS设置”，上游DNS这栏输入（由于每个人使用的宽带不同，所以上游DNS使用哪个，请根据自己的情况填写，后面会讲）：</p><p>tls://dns.google</p><p>tls://1.1.1.1</p><p>tls://1.0.0.1</p><p>然后拉到下面点应用，会看到系统提示“上游DNS已更新”；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/22.png" alt=""></p><p>12、点最上面的菜单栏“过滤器”，“添加过滤器”，名称随意设置，地址输入<a href="https://hosts.nfz.moe/127.0.0.1/full/hosts，点“添加过滤器”；" target="_blank" rel="noopener">https://hosts.nfz.moe/127.0.0.1/full/hosts，点“添加过滤器”；</a></p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/23.png" alt=""></p><p>13、看到系统提示“网址添加成功”后，点打叉关掉提示；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/24.png" alt=""></p><p>14、点“检查更新”；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/25.png" alt=""></p><p>15、系统更新完成会提示“所有过滤器已更新到最新”；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/26.png" alt=""></p><p>三、更改网关/路由的DNS<br>由于每个人使用的网关/路由都各有不同，因此这里不做具体描述。请自行把内网的DNS主服务器IP地址设置成我们刚刚安装的AdGuardHome的内网IP地址，DNS副服务器设置为了其他公共的DNS服务器IP（拒绝使用运营商的DNS）。博主的网关是自己编译的软路由openwrt<br>X64的版本，具体的设置如下，大家借鉴一下吧。</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/27.png" alt=""></p><p>四、最后来看看效果如何<br><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/28.png" alt=""></p><p>五、官方网站及项目地址<br>1、AdGuard官网：<a href="https://adguard.com/" target="_blank" rel="noopener">https://adguard.com/</a><br>2、AdGuardHome项目地址：<a href="https://github.com/AdguardTeam/AdGuardHome" target="_blank" rel="noopener">https://github.com/AdguardTeam/AdGuardHome</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 去广告 </tag>
            
            <tag> GitHub </tag>
            
            <tag> AdGuard Home </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ROS主路由+OpenWrt旁路由+Adguard去广告配置教程</title>
      <link href="/2020/02/21/ros-openwrt-adguard/"/>
      <url>/2020/02/21/ros-openwrt-adguard/</url>
      
        <content type="html"><![CDATA[<h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a><a href=""></a>前言：</h2><p>最近网上流行着各种软路由搭配使用，不再单单的一个OpenWrt或者LEDE了，自己也研究了一段时间的AdguardHome所以就打算出这么一期教程)。</p><h3 id="使用系统："><a href="#使用系统：" class="headerlink" title="使用系统："></a>使用系统：</h3><ul><li><p>ROS</p></li><li><p>OpenWrt</p></li><li><p>AdgurardHome</p></li></ul><h2 id="拓扑图："><a href="#拓扑图：" class="headerlink" title="拓扑图："></a>拓扑图：</h2><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121349_43951.jpeg" alt=""></p><h2 id="教程："><a href="#教程：" class="headerlink" title="教程："></a>教程：</h2><h3 id="AdguardHome"><a href="#AdguardHome" class="headerlink" title="AdguardHome"></a>AdguardHome</h3><p>可以查阅之前的安装教程</p><p><a href="https://inte8.cn/2020/02/21/pve-aguard/">PVE下安装AdGuard Home搭建一个带广告过滤的私有DNS服务器及优化部署</a></p><h3 id="ROS"><a href="#ROS" class="headerlink" title="ROS"></a>ROS</h3><h4 id="一：登陆ros后台"><a href="#一：登陆ros后台" class="headerlink" title="一：登陆ros后台"></a>一：登陆ros后台</h4><p>使用winbox登陆到ros的后台，出现的首页如下图。</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121351_12439.png" alt=""></p><h4 id="二：配置DHCP-Server"><a href="#二：配置DHCP-Server" class="headerlink" title="二：配置DHCP Server"></a>二：配置DHCP Server</h4><p>省略如何配置ros拨号上网等步骤，Google下有很多教程，都很详细，就不在列举了。打开IP&gt;&gt;&gt;DHCP Server</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121352_91692.png" alt=""></p><p>选择Networks</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121353_63511.png" alt=""></p><p>双击打开下方列表中的内容，修改Geteway(网关)指向自己的lede旁路由、DNS<br>Servers(DNS服务器设置为本机IP，也就是ROS的IP)，修改完毕后点击保存。</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121355_41600.png" alt=""></p><h4 id="三：配置DNS"><a href="#三：配置DNS" class="headerlink" title="三：配置DNS"></a>三：配置DNS</h4><p>选择IP&gt;&gt;&gt;DNS</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121356_37130.png" alt=""></p><p>Servers(服务器)填入自己的AdguradHome的IP地址，并且打开Allow Remote<br>Requests，开启ROS的dns缓存，虽然AdguardHome也有缓存，就我使用下来感觉还是ROS的缓存比较好用。</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121357_31167.png" alt=""></p><h4 id="四：设置定时清理DNS缓存"><a href="#四：设置定时清理DNS缓存" class="headerlink" title="四：设置定时清理DNS缓存"></a>四：设置定时清理DNS缓存</h4><p>打开System&gt;&gt;&gt;Scheduler</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121358_69194.png" alt=""></p><p>选择新增一条记录。</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121358_26337.png" alt=""></p><p>可以按照我这方案填写，我设置的是凌晨3点清理</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121359_48282.png" alt=""></p><h3 id="OpenWrt"><a href="#OpenWrt" class="headerlink" title="OpenWrt"></a>OpenWrt</h3><h4 id="一：修改lan口"><a href="#一：修改lan口" class="headerlink" title="一：修改lan口"></a>一：修改lan口</h4><p>打开网络&gt;&gt;&gt;接口</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121401_77837.png" alt=""></p><p>选择修改lan口</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121402_98443.png" alt=""></p><p>只需将网关设置成ROS的IP地址，DNS服务器选择ROS的IP地址即可。</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121403_62367.png" alt=""></p><h4 id="二：关闭DHCP"><a href="#二：关闭DHCP" class="headerlink" title="二：关闭DHCP"></a>二：关闭DHCP</h4><p>在刚刚修改lan口的页面往下滑，找到DHCP服务器，取消DHCP服务器的勾选</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121404_89780.png" alt=""></p><h4 id="三：Turbo-ACC设置"><a href="#三：Turbo-ACC设置" class="headerlink" title="三：Turbo ACC设置"></a>三：Turbo ACC设置</h4><p>打开网络&gt;&gt;&gt;Turbo ACC，将DNS加速关闭</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121405_91826.png" alt=""></p><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>至此，整个配置就已经完成了。科学上网配置中只需要将DNS解析方式设置成为本机的5335就可以达到不论是国内还是国外全部都经过AdguradHome</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121406_15417.png" alt=""></p><p>这是我的AdguradHome的截图，解析域名的时间还是蛮快的，配合上ROS的缓存，网页就是秒开</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121408_59282.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> LINUX应用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 去广告 </tag>
            
            <tag> AdGuard Home </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用AdGuard Home搭建一个无广告和跟踪的公共DNS</title>
      <link href="/2020/02/21/adguard/"/>
      <url>/2020/02/21/adguard/</url>
      
        <content type="html"><![CDATA[<p>简单点说AdGuard Home就是一个公共DNS服务，如Google的公共DNS<code>8.8.8.8</code>，和DNSmasq一样AdGuard<br>Home是开源的，可以自行搭建安装后在客户端配置使用。xiaoz之前分享过一个自己写的项目<a href="https://www.xiaoz.me/archives/10555" target="_blank" rel="noopener">PHPDNS</a><br>，PHPDNS在DNSmasq的基础上开发了WEB界面，功能比较简单，不过该项目不在维护，这里推荐功能更加强大的AdGuard Home</p><p>AdGuard Home使用Golang开发，编译好了各大平台的二进制文件，因此安装非常简单，这里以CentOS 7为例，其它系统可参考官方帮助文档。</p><h3 id="AdGuard-Home主要功能"><a href="#AdGuard-Home主要功能" class="headerlink" title="AdGuard Home主要功能"></a>AdGuard Home主要功能</h3><ul><li>拦截随处可见的广告</li><li>注重隐私保护</li><li>家庭保护模式</li><li>自定义过滤</li></ul><h3 id="CentOS-7-X64安装"><a href="#CentOS-7-X64安装" class="headerlink" title="CentOS 7 X64安装"></a>CentOS 7 X64安装</h3><p>AdGuard Home二进制文件位于<a href="https://github.com/AdguardTeam/AdGuardHome/releases" target="_blank" rel="noopener">https://github.com/AdguardTeam/AdGuardHome/releases</a><br>可根据自己的平台下载最新版本。CentOS 7安装方法如下：</p><pre><code>#下载AdGuard Homewget http://soft.xiaoz.org/linux/AdGuardHome_v0.93_linux_amd64.tar.gz#解压tar -zxvf AdGuardHome_v0.93_linux_amd64.tar.gz#进入AdGuardHome目录cd AdGuardHome#放行3000端口（AdGuardHome初始化需要使用）#firewalld放行3000端口firewall-cmd --zone=public --add-port=3000/tcp --permanentfirewall-cmd --reload#iptables放行3000端口iptables -A INPUT -p tcp --dport 3000 -j ACCEPTservice iptables save#启动AdGuard Home./AdGuardHome</code></pre><p>运行AdGuardHome后，会提示打开<code>http://IP：3000</code>端口进行初始化，如下截图。</p><p><img src="https://cdn.xiaoz.me/wp-content/uploads/2019/02/Snipaste_2019-02-28_10-47-21.png" alt=""></p><p>浏览器打开<code>http://IP：3000</code>,根据提示无脑的下一步即可。首次初始化会要求设置账号、密码（请牢记），下次登录需要使用。</p><p><img src="https://cdn.xiaoz.me/wp-content/uploads/2019/02/Snipaste_2019-02-28_10-48-57.png" alt=""></p><h3 id="AdGuardHome基本设置"><a href="#AdGuardHome基本设置" class="headerlink" title="AdGuardHome基本设置"></a>AdGuardHome基本设置</h3><h4 id="设置中文"><a href="#设置中文" class="headerlink" title="设置中文"></a>设置中文</h4><p>进入AdGuardHome后台 - 网页右下方 - 可设置为繁体中文，感觉是机器翻译的，不太准确，将就用。</p><p><img src="https://cdn.xiaoz.me/wp-content/uploads/2019/02/Snipaste_2019-02-28_10-52-06.png" alt=""></p><h4 id="设置上游DNS"><a href="#设置上游DNS" class="headerlink" title="设置上游DNS"></a>设置上游DNS</h4><p>AdGuard Home默认使用Cloudflare DNS作为上游服务器，如果您服务器在国内可能请求上游DNS延迟比较高，在后台 - 设定 -<br>可以设置为国内的DNS，如腾讯的<code>119.29.29.29</code>，但坏处是不支持DNS over TLS</p><p><img src="https://cdn.xiaoz.me/wp-content/uploads/2019/02/Snipaste_2019-02-28_10-54-13.png" alt=""></p><h4 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h4><p>在后台 - 过滤器，可以看到AdGuardHome内置了部分广告过滤规则，但在中国有点水土不服，如果要想更完美的实现广告屏蔽还需要自己添加规则。</p><p><img src="https://cdn.xiaoz.me/wp-content/uploads/2019/02/Snipaste_2019-02-28_11-08-51.png" alt=""></p><p>以下是过滤规则的一些说明，更多规则可以在AdGuardHome后台查看或参考官方帮助文档。</p><ol><li><code>||example.org^</code> - 封锁example.org域及其他子域</li><li><code>@@||example.org^</code> - 解除封锁example.org域及其他子域</li><li><code>127.0.0.1 example.org</code> - 将example.org host指向到127.0.0.1（不包含其他子域）</li><li><code>!</code> - 注释符号</li><li><code>#</code> - 也是一个注释符号</li><li><code>/REGEX/</code> - 正则表达式模式</li></ol><h3 id="额外设置"><a href="#额外设置" class="headerlink" title="额外设置"></a>额外设置</h3><p>为了方便管理，可以继续输入命令<code>./AdGuardHome -s install</code>安装为服务，然后就可以使用下面的命令来进行管理了。</p><pre><code>#启动systemctl start AdGuardHome#开机自启systemctl enable AdGuardHome#重启systemctl restart AdGuardHome#停止systemctl stop AdGuardHome</code></pre><p>DNS默认使用53(TCP/UDP)端口进行通信，因此别忘记放行53端口，否则DNS无法正常使用。</p><pre><code>#firewalld放行53端口firewall-cmd --zone=public --add-port=53/tcp --permanentfirewall-cmd --zone=public --add-port=53/udp --permanentfirewall-cmd --reload#iptables放行53端口iptables -A INPUT -p tcp --dport 53 -j ACCEPTiptables -A INPUT -p udp --dport 53 -j ACCEPTservice iptables save</code></pre><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>AdGuard Home支持MacOS、Windows、Linux、树莓派等系统，提供二进制和docker安装方式，安装简单。AdGuard<br>Home还提供了直观的统计系统，使用方便。如果您打算自建一个公共DNS，AdGuard Home值得一试。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> LINUX应用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 去广告 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>原来我不帅 Windows_Server_2016_x64_数据中心版 （20191212更新）</title>
      <link href="/2020/02/21/2016windows/"/>
      <url>/2020/02/21/2016windows/</url>
      
        <content type="html"><![CDATA[<ul><li><p>系统介绍：</p><ul><li><p>1、采用微软官方原版优化制作；未做任何精简！~</p></li><li><p>2、补丁更新到2019年12月底，FLASH，VC组件，全部是最新版；</p></li><li><p>3、集成服务器常用的一些附送工具和远程软件，包括硬盘检测软件；</p></li></ul></li></ul><p><img src="https://files.51524.com/wenzhang/3727/37271.png" alt=""></p><p><img src="https://files.51524.com/wenzhang/3727/37272.png" alt=""></p><p><img src="https://files.51524.com/wenzhang/3727/37273.png" alt=""></p><p><img src="https://files.51524.com/wenzhang/3727/37274.png" alt=""></p><p><img src="https://files.51524.com/wenzhang/3727/37275.png" alt=""></p><p><img src="https://files.51524.com/wenzhang/3727/37276.png" alt=""></p><ul><li><p>注意1：单盘安装Server2016是最快的！~（在BIOS将非系统盘全部关闭，安装完系统再进BIOS开启）</p></li><li><p>注意2：第一次进系统要求输密码；（可以不输，直接回车也可以的）</p></li></ul><p><strong>由于Server2008系统安全系数太低，本人不再制作；以后只更新2012 2016 2019服务器系统！！！</strong><br><strong>下载链接: <a href="https://pan.baidu.com/s/1TQAcQlPPuxVpYBLtiuA0UA" target="_blank" rel="noopener">https://pan.baidu.com/s/1TQAcQlPPuxVpYBLtiuA0UA</a> 提取码: pcn3</strong></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原来我不帅 </tag>
            
            <tag> 网吧系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>原来我不帅 马蹄更新v2.1.0_Win7x64_Win10x64_无盘公包（v2020版 V4） 2020.02.10 更新</title>
      <link href="/2020/02/21/matigengxin/"/>
      <url>/2020/02/21/matigengxin/</url>
      
        <content type="html"><![CDATA[<h2 id="马蹄更新是继绿化大师以后，又一款新的无广告无盘，承诺无广告。"><a href="#马蹄更新是继绿化大师以后，又一款新的无广告无盘，承诺无广告。" class="headerlink" title="马蹄更新是继绿化大师以后，又一款新的无广告无盘，承诺无广告。"></a>马蹄更新是继绿化大师以后，又一款新的无广告无盘，承诺无广告。</h2><ul><li><p>更新说明：<br>马蹄更新v2.1.0无盘公包</p><ul><li><p>马蹄更新v2.1.0_Win7x64_Pro_Bios_无盘公包<br>文件: 马蹄更新v2.1.0_Win7x64_Pro_Bios_无盘公包（v2020版）.exe<br>大小: 2711139081 字节<br>文件版本: 2.1.0.0<br>修改时间: 2019年12月1日, 2:02:56<br>MD5: 5F71051EAFF79A5227A99754D3088FCF<br>SHA1: F83EC398511FCFF80128E21F2BAE631A6F47D689<br>CRC32: 5587D987.jpg” alt=”” /&gt;</p></li><li><p>马蹄更新v2.1.0_Win10x64_Pro_Bios_无盘公包（v2020版）<br>文件: 马蹄更新v2.1.0_Win10x64_Pro_Bios_无盘公包（v2020版）.exe<br>大小: 2751911456 字节<br>文件版本: 2.1.0.0<br>修改时间: 2019年12月1日, 12:04:55<br>MD5: 49194D6334E08A5E464FB797B265274E<br>SHA1: 3F6C640DB0E82E187CBC8C60579D6F92D2DE212D<br>CRC32: 162F221A</p></li><li><p>马蹄更新v2.1.0_Win10x64_2019LTSC_无盘公包（v2020版）</p></li></ul></li></ul><p>文件: 马蹄更新v2.1.0_Win10x64_2019LTSC_无盘公包（v2020版）.exe<br>大小: 3113263927 字节<br>文件版本: 1, 0, 0, 0<br>修改时间: 2019年12月1日, 14:56:18<br>MD5: FF532A2A955E7FE7D4ECF174AE87F65D<br>SHA1: E16DC891A0578F6484701976F35256A3AC5FEE4D<br>CRC32: 1953BCF5</p><p><strong>下载地址链接: <a href="https://pan.baidu.com/s/1xDKEgj8UvVmAYUCfQtJ97w" target="_blank" rel="noopener">https://pan.baidu.com/s/1xDKEgj8UvVmAYUCfQtJ97w</a> 提取码: 9m73</strong></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原来我不帅 </tag>
            
            <tag> 网吧系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时隔三年网吧系统届的大佬死性不改终于发布了2020年的第一个版本20fi</title>
      <link href="/2020/02/21/netbar-windows/"/>
      <url>/2020/02/21/netbar-windows/</url>
      
        <content type="html"><![CDATA[<h2 id="最新版本：20Fi"><a href="#最新版本：20Fi" class="headerlink" title="最新版本：20Fi"></a>最新版本：20Fi</h2><p>　　发布日期：2020年02月09日<br>　　版本号含义解读：20代表年份，取发布当年的后2位，例如2020年就是20，Fi=First，代表该年度首个版本。由于Win7及2008系统微软官方已经停止更新支持，因此本次更新为最终版。</p><table><thead><tr><th>更新内容</th><th>Win7x64 Pro SP1</th><th>WS2008 R2 企业版</th></tr></thead><tbody><tr><td>系统默认登录密码</td><td>无</td><td>WS200820fi</td></tr><tr><td>Windows系统补丁（已集成永恒之蓝、RDP漏洞、双杀、sha2补丁）</td><td>2019年5月</td><td>2019年5月</td></tr><tr><td>其他主流网卡驱动</td><td>已集成</td><td>已集成</td></tr><tr><td>AHCI驱动</td><td>系统原生AHCI驱动</td><td>系统原生AHCI驱动</td></tr><tr><td>USB3.0/3.1驱动（可支持新主板）</td><td>C:\MySP\常用软件下，自行安装</td><td>C:\MySP\常用软件下，自行安装</td></tr><tr><td>NVME补丁与驱动 4.4.0.1003</td><td>已集成</td><td>已集成</td></tr><tr><td>WinRAR v5.71</td><td>已集成</td><td>已集成</td></tr><tr><td>QQ拼音输入法 6.4.5804.400</td><td>已集成</td><td>已集成</td></tr><tr><td>QQ五笔输入法 2.2.334.400</td><td>已集成</td><td>已集成</td></tr><tr><td>Flash Player Active For IE&amp;PPAPI 32.0.0.314（已删除广告服务）</td><td>已集成</td><td>已集成</td></tr><tr><td>Flash Player Active 硬件加速</td><td>已开启</td><td>已开启</td></tr><tr><td>Micorsoft .net framework 3.5.1</td><td>已集成</td><td>已集成</td></tr><tr><td>Micorsoft .net framework 4.5.2</td><td>已集成</td><td>已集成</td></tr><tr><td>Micorsoft .net framework 4.6.2（Steam新游戏需要By成都熊）</td><td>已集成</td><td>已集成</td></tr><tr><td>Micorsoft .net framework 4.7.2（Steam新游戏需要By成都熊）</td><td>已集成</td><td>已集成</td></tr><tr><td>DirectX10</td><td>已集成</td><td>-</td></tr><tr><td>Microsoft XML Core Services 3.0</td><td>已集成</td><td>-</td></tr><tr><td>Microsoft XML Core Services 4.0</td><td>已集成</td><td>-</td></tr><tr><td>Microsoft XML Core Services 6.0</td><td>已集成</td><td>-</td></tr><tr><td>Microsoft XNA Framework 3.1</td><td>已集成</td><td>-</td></tr><tr><td>Visual C++ Runtime 2005 x64</td><td>已集成</td><td>已集成</td></tr><tr><td>Visual C++ Runtime 2005 x86</td><td>已集成</td><td>已集成</td></tr><tr><td>Visual C++ Runtime 2008 x64</td><td>已集成</td><td>已集成</td></tr><tr><td>Visual C++ Runtime 2008 x86</td><td>已集成</td><td>已集成</td></tr><tr><td>Visual C++ Runtime 2010 x64</td><td>已集成</td><td>已集成</td></tr><tr><td>Visual C++ Runtime 2010 x86</td><td>已集成</td><td>已集成</td></tr><tr><td>Visual C++ Runtime 2012 x64</td><td>已集成</td><td>已集成</td></tr><tr><td>Visual C++ Runtime 2012 x86</td><td>已集成</td><td>已集成</td></tr><tr><td>Visual C++ Runtime 2013 x64</td><td>已集成</td><td>已集成</td></tr><tr><td>Visual C++ Runtime 2013 x86</td><td>已集成</td><td>已集成</td></tr><tr><td>Visual C++ Runtime 2015 x64</td><td>已集成</td><td>已集成</td></tr><tr><td>Visual C++ Runtime 2015 x86</td><td>已集成</td><td>已集成</td></tr><tr><td>Visual C++ Runtime 2019 x64（新增）</td><td>已集成</td><td>已集成</td></tr><tr><td>Visual C++ Runtime 2019 x86（新增）</td><td>已集成</td><td>已集成</td></tr><tr><td>软件限制策略模版</td><td>已启用</td><td>已启用</td></tr><tr><td>C:\MySP\office 2010安装包</td><td>有，需要自行安装</td><td>有，需要自行安装</td></tr><tr><td>C:\MySP\IE11安装包</td><td>默认为IE11</td><td>默认为IE11</td></tr><tr><td>C:\MySP\激活工具</td><td>有，需要自行激活</td><td>有，需要自行激活</td></tr><tr><td>U盘、手机存储自动播放</td><td>已禁用</td><td>已禁用</td></tr></tbody></table><hr><table><thead><tr><th align="center">系统名称/文件名</th><th align="center">大小</th><th align="center">MD5</th><th align="center">下载地址1</th><th align="center">下载地址2</th></tr></thead><tbody><tr><td align="center">Windows_7_Pro_64位  ISO9000_Win7x64_20Fi.GHO</td><td align="center">5.08 GB</td><td align="center">20DA32BD2BD929FF93E57AF50F8E4793</td><td align="center"><a href="https://pan.baidu.com/s/13xAcfUF80W9PnHevMYYa6g" target="_blank" rel="noopener">百度网盘</a>  提取码：2zvl</td><td align="center"><a href="https://share.weiyun.com/5ENYddr" target="_blank" rel="noopener">腾讯微云</a></td></tr><tr><td align="center">Windows_2008_r2_SP1_64位  ISO9000_WS2008r2_20Fi.GHO</td><td align="center">5.62 GB</td><td align="center">1771185081318413E67DE71285E1CB55</td><td align="center"><a href="https://pan.baidu.com/s/1wYPWxNyyxLb6gZ3W2i9gjQ" target="_blank" rel="noopener">百度网盘</a>  提取码：rrcr</td><td align="center"><a href="https://share.weiyun.com/58sdZ2z" target="_blank" rel="noopener">腾讯微云</a></td></tr><tr><td align="center">Windows 10 x64 ltsc  ISO9000_Win10ltsc_20Fi.GHO</td><td align="center">5.65 GB</td><td align="center">C210C0EFBBA4D1E26E9F31C9B668A079</td><td align="center"><a href="https://pan.baidu.com/s/1-vJyjPLe7Uxcf1guYI6BqQ" target="_blank" rel="noopener">百度网盘</a>  提取码：cdaj</td><td align="center"><a href="https://share.weiyun.com/5cAmcbc" target="_blank" rel="noopener">腾讯微云</a></td></tr><tr><td align="center">Windows Server 2019 DC  ISO9000_WS2019DC_20Fi.GHO</td><td align="center">6.20 GB</td><td align="center">D62497A913761B62A7F8FAC5CE32302C</td><td align="center"><a href="https://pan.baidu.com/s/1NIYmQj2_z9J0lXy8ZLGC9g" target="_blank" rel="noopener">百度网盘</a>  提取码：rj52</td><td align="center"><a href="https://share.weiyun.com/5ZFnwZA" target="_blank" rel="noopener">腾讯微云</a></td></tr></tbody></table><hr><h3 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h3><ul><li>2月9日的Win10及Win Server 2019DC已知问题：<ul><li>1、Windows自动更新服务会莫名其妙的处于运行状态，并自动下载更新，解决方案如下：<br>Windows10 1809版本Windows自动更新服务无法禁用问题解决方案<br><a href="http://www.clxp.net.cn/thread-18400-1-1.html" target="_blank" rel="noopener">http://www.clxp.net.cn/thread-18400-1-1.html</a><br>后续会重新上传修正版GHO。</li><li>无盘客户机使用Win10系统KMSpico激活不了并报错？<br><a href="http://www.clxp.net.cn/thread-4674-1-1.html" target="_blank" rel="noopener">http://www.clxp.net.cn/thread-4674-1-1.html</a></li></ul></li></ul><ul><li><p>1、使用20Fi版本的Win7，自己安装好上传到网维大师无盘，开机0x50蓝屏是怎么回事？<br>答：该问题是由于顺网无盘不兼容2018年4月后的补丁导致的，而以下补丁均为2018年5月及以后发布的，所以打了这些补丁上传后，开机就会出现0x50蓝屏，需通过添加删除程序手工卸载以下补丁之后再上传即可。<br>KB4499175：19年5月份累积安全更新<br>KB4474419：SHA2支持补丁<br>KB4103712：双杀补丁<br>至于带来的系统漏洞隐患问题，目前最佳解决方案是不使用IE浏览器来避免漏洞触发，但如果顾客强行使用IE浏览器中毒，就别无他法了！<br>网维大师Img包也不会集成以上补丁，其他无盘会集成以上补丁以尽量提高系统安全性。<br>双杀漏洞模拟验证方法：<a href="http://www.clxp.net.cn/thread-18356-1-1.html" target="_blank" rel="noopener">http://www.clxp.net.cn/thread-18356-1-1.html</a></p></li><li><p>2、为什么GHO文件这么大？<br>主要与补丁以及丰富了游戏组件库有关，目前可实现游戏组件全兼容。</p></li><li><p>3、USB3.0、3.1驱动怎么使用？<br>在无盘开超级之前，在无盘服务端挂盘，比如挂为Z盘；<br>将Z:\MySP\常用软件的USB驱动文件夹按照对应硬件型号驱动版本，拷贝到Z:\Windows\Inf目录下，然后保存挂盘修改，超级用户开机就能自动发现硬件并安装驱动了。<br>7系列主板拷贝：4.0.6.60版本即可<br>8、9系列主板拷贝：5.0.3.42版本即可<br>10系列主板拷贝：USB3.1_Win7X64</p></li><li><p>4、为什么装了USB驱动之后，开机蓝屏？<br>同系统内，多个USB型号不一样带来的驱动不兼容问题导致，与系统自身无关，是Intel自身兼容性问题。解决方法是：7系列；8/9系列；10系列各一个配置点，不要把驱动混在一个配置点或img内即可。</p></li></ul><h3 id="免责声明："><a href="#免责声明：" class="headerlink" title="免责声明："></a>免责声明：</h3><p>　　本站发布的ISO9000系列操作系统均用于技术研究，不得用于任何形式的商业销售，版权仍归微软所有。<br>　　本站承诺不会用于销售以及捆版软件获取利益，用户下载后需在24小时之内删除。如果您喜爱本操作系统，希望长期使用，请向微软购买正版版权，假如因用户未购买正版版权而导致版权纠纷，本站概不负责。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网吧系统 </tag>
            
            <tag> 死性不改 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于matery主题valine评论使用方法</title>
      <link href="/2020/02/21/valine/"/>
      <url>/2020/02/21/valine/</url>
      
        <content type="html"><![CDATA[<p>##关于hexo-theme-matery主题使用valine评论系统##</p><p>在主题目录_config.yml文件下大概305行的位置</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">valine</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">appId</span><span class="token punctuation">:</span>  <span class="token key atrule">appKey</span><span class="token punctuation">:</span>  <span class="token key atrule">notify</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">verify</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">visitor</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">avatar</span><span class="token punctuation">:</span> <span class="token string">'mm'</span> <span class="token comment" spellcheck="true"># Gravatar style : mm/identicon/monsterid/wavatar/retro/hide</span>  <span class="token key atrule">pageSize</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">placeholder</span><span class="token punctuation">:</span> <span class="token string">'本文是否帮到了您?'</span> <span class="token comment" spellcheck="true"># Comment Box placeholder</span>  <span class="token key atrule">background</span><span class="token punctuation">:</span> /medias/comment_bg.png<span class="token punctuation">---</span></code></pre><p><strong>或许appid和appkey的方法请参照<a href="https://valine.js.org/quickstart.html" target="_blank" rel="noopener">valine</a></strong></p><ul><li><p>获取以后请填入到对应的字段 保存发布即可</p></li><li><p>编辑yml和md文件推荐使用<a href="https://atom.io" target="_blank" rel="noopener">atom</a>软件（对比了几个软件博主觉得这个更加实用。）</p></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 网页前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Valine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>折腾vps时候翻找过的一些脚本资料</title>
      <link href="/2020/02/21/linux/"/>
      <url>/2020/02/21/linux/</url>
      
        <content type="html"><![CDATA[<p>锐速BBR一键安装脚本<br>    wget “<a href="https://github.com/chiakge/Linux-NetSpeed/raw/master/tcp.sh&quot;" target="_blank" rel="noopener">https://github.com/chiakge/Linux-NetSpeed/raw/master/tcp.sh"</a> &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh</p><p>debian系统更新命令</p><pre><code>apt-get update -y</code></pre><p>VPS 测试脚本</p><pre><code>wget -qO- --no-check-certificate https://raw.githubusercontent.com/oooldking/script/master/superbench.sh | bash</code></pre><p>查看bbr<br>    sysctl net.ipv4.tcp_available_congestion_control<br>    lsmod | grep bbr</p><p>宝塔面板安装</p><p>Centos安装命令：<br>    yum install -y wget &amp;&amp; wget -O install.sh <a href="http://download.bt.cn/install/install_6.0.sh" target="_blank" rel="noopener">http://download.bt.cn/install/install_6.0.sh</a> &amp;&amp; sh install.sh</p><p>试验性Centos/Ubuntu/Debian安装命令支持ipv6，注意使用root权限执行此命令 (支持Centos8)<br>    curl -sSO <a href="http://download.bt.cn/install/new_install.sh" target="_blank" rel="noopener">http://download.bt.cn/install/new_install.sh</a> &amp;&amp; bash new_install.sh</p><p>Ubuntu/Deepin安装命令：<br>    wget -O install.sh <a href="http://download.bt.cn/install/install-ubuntu_6.0.sh" target="_blank" rel="noopener">http://download.bt.cn/install/install-ubuntu_6.0.sh</a> &amp;&amp; sudo bash install.sh<br>Debian安装命令：<br>    wget -O install.sh <a href="http://download.bt.cn/install/install-ubuntu_6.0.sh" target="_blank" rel="noopener">http://download.bt.cn/install/install-ubuntu_6.0.sh</a> &amp;&amp; bash install.sh<br>Fedora安装命令:<br>    wget -O install.sh <a href="http://download.bt.cn/install/install_6.0.sh" target="_blank" rel="noopener">http://download.bt.cn/install/install_6.0.sh</a> &amp;&amp; bash install.sh</p><p>Linux面板7.1.0升级命令：<br>    curl <a href="http://download.bt.cn/install/update6.sh|bash" target="_blank" rel="noopener">http://download.bt.cn/install/update6.sh|bash</a></p><p>开启BBR</p><p>升级内核<br>开启 BBR 要求 4.10 以上版本 Linux 内核，可使用如下命令查看当前内核版本：</p><pre><code>uname -r</code></pre><p>如果内核4.10以上就执行下面</p><pre><code>echo 'net.core.default_qdisc=fq' | sudo tee -a /etc/sysctl.confecho 'net.ipv4.tcp_congestion_control=bbr' | sudo tee -a /etc/sysctl.confsudo sysctl -p</code></pre><p>完成后，分别执行如下命令来检查 BBR 是否开启成功：</p><pre><code>sudo sysctl net.ipv4.tcp_available_congestion_control</code></pre><h1 id="输出应为-net-ipv4-tcp-available-congestion-control-bbr-cubic-reno"><a href="#输出应为-net-ipv4-tcp-available-congestion-control-bbr-cubic-reno" class="headerlink" title="输出应为 net.ipv4.tcp_available_congestion_control = bbr cubic reno"></a>输出应为 net.ipv4.tcp_available_congestion_control = bbr cubic reno</h1><pre><code>sudo sysctl -n net.ipv4.tcp_congestion_control</code></pre><h1 id="输出应为-bbr"><a href="#输出应为-bbr" class="headerlink" title="输出应为 bbr"></a>输出应为 bbr</h1><pre><code>lsmod | grep bbr</code></pre><h1 id="输出应类似-tcp-bbr-16384-28"><a href="#输出应类似-tcp-bbr-16384-28" class="headerlink" title="输出应类似 tcp_bbr  16384  28"></a>输出应类似 tcp_bbr  16384  28</h1><p>Cloudflare Partner：<a href="https://cdn.moeelf.com/" target="_blank" rel="noopener">https://cdn.moeelf.com/</a><br>Cloudflare节点IP列表：<a href="https://ofvps.com/201907510" target="_blank" rel="noopener">https://ofvps.com/201907510</a><br>新手建议先看保姆级套CDN教程：<a href="https://youtu.be/TWJZ30L1NRk" target="_blank" rel="noopener">https://youtu.be/TWJZ30L1NRk</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 备忘录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo + Github Pages博客搭建教程（搬运）</title>
      <link href="/2020/02/21/hexo-github/"/>
      <url>/2020/02/21/hexo-github/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>一直以来自己都有书写文章的习惯，不管是收集资料还是表达自己的个人见解。最开始把资料都放在印象笔记里，但是印象笔记有个不好的点就是书写不方便，而且多设备登录不友好，需要升级账户。后来就搭建了一个WordPress站点，记录自己的点滴。慢慢的接触到了CSDN，也计划着在那里写博客。CSDN的编辑器有markdown版本，接触到了markdown就对其产生了好感。与此同时，我也将我的WordPress站点的编辑器换成了markdown编辑器，一处书写多处同步。<br>慢慢的，我感受到了WordPress站点的臃肿，由于我的站点原因，做的并不是单独的博客站点，所有的文章展示方面不友好。所以萌生了搭建一个单独的博客的想法。</p><p><strong>为什么选择hexo?</strong><br>Hexo是一个快速、简洁且高效的博客框架。Hexo使用Markdown（或其他渲染引擎）解析文章，在几秒之内，即可利用靓丽的主题生成静态网页。<br>很久之前就知道有这个博客框架，一直没有去体验过。而且，这个博客是不需要自己去购置服务器的，甚至域名都不用去买。</p><p><strong>搭建环境准备</strong><br>Node.js 的安装和准备<br>Node.js的官网是在国外的，下载的服务可能不太友好，可以去国内的Nodejs中文网去下载，选择适合自己的版本安装就可以了。安装界面也是下一步下一步就可以了。<br>网址：<a href="http://nodejs.cn/download/" target="_blank" rel="noopener">http://nodejs.cn/download/</a></p><p><strong>检验是否安装成功</strong></p><pre><code>node -vnpm -v</code></pre><p>显示版本号，没有报错就算装成功了。</p><p><strong>git的安装</strong><br>git是一个版本控制管理工具，这个主要是在Hexo发布的时候起作用。将本地的博客同步到GitHub上面。<br>选择合适的版本安装。<br>网址：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">https://git-scm.com/downloads</a></p><p><strong>检验是否安装成功</strong></p><pre><code>git --version</code></pre><p><strong>博客本地搭建</strong><br>安装Hexo<br>通过npm来安装Hexo</p><pre><code>npm install -g hexo-cli</code></pre><p><strong>创建网站</strong><br>在电脑里新建一个文件夹作为博客的目录，通过Hexo命令初始化并安装。</p><pre><code>hexo init &lt;folder&gt;cd &lt;folder&gt;npm install</code></pre><p>例如这里我将博客目录设置为hexoblog</p><pre><code>hexo init hexoblogcd hexoblognpm install # 这一步也可以不执行，init操作时已经安装了</code></pre><h3 id="网站目录介绍"><a href="#网站目录介绍" class="headerlink" title="网站目录介绍"></a>网站目录介绍</h3><p>config.yml<br>博客的配置文件，博客的名称、关键词、作者、语言、博客主题…设置都在里面。<br>package.json<br>应用程序信息，新添加的插件内容也会出现在这里面，我们可以不修改这里的内容。<br>scaffolds<br>scaffolds就是脚手架的意思，这里放了三个模板文件，分别是新添加博客文章（posts）、新添加博客页（page）和新添加草稿（draft）的目标样式。<br>这部分可以修改的内容是，我们可以在模板上添加比如categories等自定义内容<br>source<br>source是放置我们博客内容的地方，里面初始只有两个文件夹，一个是drafts（草稿），一个posts（文章），但之后我们通过命令新建tags（标签）还有categories（分类）页后，这里会相应地增加文件夹。<br>themes<br>放置主题文件包的地方。Hexo会根据这个文件来生成静态页面。<br>初始状态下只有landscape一个文件夹，后续我们可以添加自己喜欢的。</p><p>Hexo命令<br>Hexo有详尽的中文文档，网址：<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/</a><br>主要的命令如下：<br>init新建一个网站。</p><pre><code>hexo init &lt;folder&gt;</code></pre><p><strong>new新建文章或页面。</strong></p><pre><code>hexo new &lt;layout&gt; "title"</code></pre><p>这里的对应我们要添加的内容，如果是posts就是添加新的文章，如果是page就是添加新的页面。<br>默认是添加posts。<br>然后我们就可以在对应的posts或drafts文件夹里找到我们新建的文件，然后在文件里用Markdown的格式来写作了。<br>generate生成静态页面</p><pre><code>hexo generatehexo g  // 简写</code></pre><h3 id="deploy将内容部署到网站"><a href="#deploy将内容部署到网站" class="headerlink" title="deploy将内容部署到网站"></a>deploy将内容部署到网站</h3><pre><code>hexo deployhexo -d  // 简写</code></pre><p><strong>publish发布内容，实际上是将内容从drafts（草稿）文件夹移到posts（文章）文件夹。</strong></p><pre><code>hexo publish &lt;layout&gt; &lt;filename&gt;</code></pre><p>server启动服务器，默认情况下，访问网站为<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></p><pre><code>hexo serverhexo s  // 简写</code></pre><p>根据我的经验，除了第一次部署的时候，我们会重点用到hexo init这个命令外，在平时写博客和发布过程中最常用的就是：</p><pre><code>hexo n 新建文章hexo s 启动服务器，在本地查看内容hexo g 生成静态页面hexo deploy 部署到网站</code></pre><p>以上四个步骤。<br>我的步骤：</p><hr><pre><code>hexo new xxx    // 新建文章hexo g &amp;&amp; hexo deploy  // 生成并部署</code></pre><p>网站本地效果<br>终端执行hexo s<br>网站就在本地启动了，访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></p><hr><h3 id="博客Github部署"><a href="#博客Github部署" class="headerlink" title="博客Github部署"></a>博客Github部署</h3><p>创建储存桶<br>新建一个仓库，项目名一定要是用户名.github.io的形式(README.md可选可不选)<br>比如，我的用户名是GeekMubai，则我的仓库名必须是GeekMubai.github.io</p><hr><p><strong>配置SSH-Key*</strong><br>没有SSH-Key的话，git是不能将本地的代码部署到GitHub的。所以需要先创建SSH-Key。<br>本地生成秘钥：这里的用户名和邮箱仅做演示，根据自己的修改</p><pre><code>git config --global user.name "geekmubai"git config --global user.email geekmubai@example.comssh-keygen -t rsa -C "youremail@example.com"</code></pre><p>此时在用户文件夹下有一个隐藏文件夹，里面会有相关的秘钥文件。<br>以文本方式打开id_rsa.pub文件，将内容复制到GitHub。</p><p>标题随便起，将文本内容复制到Key，最后添加Key</p><p><strong>同步代码</strong><br>使用hexo deploy部署需要安装一个插件：</p><pre><code>npm install hexo-deployer-git --save</code></pre><p>找到blog目录下的配置文件_config.yml,用编辑器打开此文件找到此文件中的deploy字段，按照以下配置deploy:</p><pre><code>type: gitrepo: git@github.com:GeekMubai/GeekMubai.github.io.gitbranch: master</code></pre><p>repo在GitHub获取：</p><p>然后在命令行中执行</p><pre><code>hexo d</code></pre><p>此时已经同步代码到GitHub了。</p><hr><p><strong>开启Github-Pages</strong><br>当你按照项目名是用户名.github.io的形式创建仓库的时候，GitHub应该是默认开启了github-pages。<br>进入仓库的设置，往下拉：</p><p>此时打开网址就可以看到Hexo博客了。</p><p><strong>域名解析</strong><br>注册域名<br>进入万网进行域名绑定<br>进入public,新建CNAME<br>把域名写到CNAME里<br>传到github仓库里<br>注意域名解析的时候选择CNAME,主机记录可以按照下面的方式填写。<br>比如我想用二级域名，我就填写blog。<br>此时blog.geekmubai.com就可以解析到我的Hexo博客。</p><p>主机记录就是域名前缀，常见用法有：<br>www：解析后的域名为<a href="http://www.aliyun.com。" target="_blank" rel="noopener">www.aliyun.com。</a><br>@：直接解析主域名 aliyun.com。<br>：泛解析，匹配其他所有域名 .aliyun.com。<br>mail：将域名解析为mail.aliyun.com，通常用于解析邮箱服务器。<br>二级域名：如：abc.aliyun.com，填写abc。<br>手机网站：如：m.aliyun.com，填写m。<br>显性URL：不支持泛解析（泛解析：将所有子域名解析到同一地址）</p><hr><p><strong>在博客的页面添加CNAME文件，并在里面记录自己域名的地址，将这个文件放在public文件夹下。这里还有一个小坑，CNAME文件经常被覆盖，导致我们重新部署博客后，链接就不可用了，可以将CNAME文件放在source文件夹下，这样就不会覆盖了。</strong></p><p>配置主题<br>下载<br>在hexo目录下执行</p><pre><code>git clone https://github.com/GeekMubai/hexo-casper.git themes/hexo-casper</code></pre><p>激活<br>把hexo配置文件 _config.yml 里的 theme 字段内容改为 hexo-casper 。</p><p><strong>升级</strong><br>建议先备份一下在执行下面的操作。</p><pre><code>cd themes/caspergit pull</code></pre><p>添加统一的文章模板参数<br>把下面的内容加入到 scaffolds/post.md,</p><pre><code>cover_img:     # 在文章摘要上显示feature_img:   # 在文章详细页面上置顶description:   # 文章描述keywords:      # 关键字</code></pre><p>valine 评论系统<br>使用方法请到他的官网查看，并结合下面的配置文件详细添加appID和appKey<br><a href="https://valine.js.org/" target="_blank" rel="noopener">https://valine.js.org/</a></p><p>添加关于页面</p><pre><code>hexo new page about</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 网页前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于本博客主题的使用方法（纯搬运）</title>
      <link href="/2020/02/21/hexo-theme-matery/"/>
      <url>/2020/02/21/hexo-theme-matery/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这是一个采用 <code>Material Design</code> 和响应式设计的 Hexo 博客主题。</p></blockquote><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li>简单漂亮，文章内容美观易读</li><li><a href="https://material.io/" target="_blank" rel="noopener">Material Design</a> 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 <code>Banner</code> 图片</li><li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li>时间轴式的归档页</li><li><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 <code>MathJax</code></li><li><code>TOC</code> 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li><a href="https://gitalk.github.io/" target="_blank" rel="noopener">Gitalk</a>、<a href="https://imsun.github.io/gitment/" target="_blank" rel="noopener">Gitment</a>、<a href="https://valine.js.org/" target="_blank" rel="noopener">Valine</a> 和 <a href="https://disqus.com/" target="_blank" rel="noopener">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</li><li>集成了<a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li><li>支持<code>emoji</code>表情，用<code>markdown emoji</code>语法书写直接生成对应的能<strong>跳跃</strong>的表情。</li><li>支持 <a href="http://www.daovoice.io/" target="_blank" rel="noopener">DaoVoice</a>、<a href="https://www.tidio.com/" target="_blank" rel="noopener">Tidio</a> 在线聊天功能。</li></ul><h2 id="贡献者"><a href="#贡献者" class="headerlink" title="贡献者"></a>贡献者</h2><p>感谢下面列出的贡献者，没有他们，hexo-theme-matery 不会这么完美。</p><ul><li><a href="https://github.com/HarborZeng" target="_blank" rel="noopener">@HarborZeng</a></li><li><a href="https://github.com/shw2018" target="_blank" rel="noopener">@shw2018</a></li><li><a href="https://github.com/L1cardo" target="_blank" rel="noopener">@L1cardo</a></li><li><a href="https://github.com/Five-great" target="_blank" rel="noopener">@Five-great</a></li></ul><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>当你看到这里的时候，应该已经有一个自己的 <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a> 博客了。如果还没有的话，不妨使用 Hexo 和 <a href="https://www.appinn.com/markdown/" target="_blank" rel="noopener">Markdown</a> 来写博客和文章。</p><p>点击 <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master" target="_blank" rel="noopener">这里</a> 下载 <code>master</code> 分支的最新稳定版的代码，解压缩后，将 <code>hexo-theme-matery</code> 的文件夹复制到你 Hexo 的 <code>themes</code> 文件夹中即可。</p><p>当然你也可以在你的 <code>themes</code> 文件夹下使用 <code>Git clone</code> 命令来下载:</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/blinkfox/hexo-theme-matery.git</code></pre><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h3><p>修改 Hexo 根目录下的 <code>_config.yml</code> 的  <code>theme</code> 的值：<code>theme: hexo-theme-matery</code></p><h4 id="config-yml-文件的其它修改建议"><a href="#config-yml-文件的其它修改建议" class="headerlink" title="_config.yml 文件的其它修改建议:"></a><code>_config.yml</code> 文件的其它修改建议:</h4><ul><li>请修改 <code>_config.yml</code> 的 <code>url</code> 的值为你的网站主 <code>URL</code>（如：<code>http://xxx.github.io</code>）。</li><li>建议修改两个 <code>per_page</code> 的分页条数值为 <code>6</code> 的倍数，如：<code>12</code>、<code>18</code> 等，这样文章列表在各个屏幕下都能较好的显示。</li><li>如果你是中文用户，则建议修改 <code>language</code> 的值为 <code>zh-CN</code>。</li></ul><h3 id="新建分类-categories-页"><a href="#新建分类-categories-页" class="headerlink" title="新建分类 categories 页"></a>新建分类 categories 页</h3><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"categories"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> categories<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token punctuation">---</span></code></pre><h3 id="新建标签-tags-页"><a href="#新建标签-tags-页" class="headerlink" title="新建标签 tags 页"></a>新建标签 tags 页</h3><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"tags"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> tags<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 18:23:38</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token punctuation">---</span></code></pre><h3 id="新建关于我-about-页"><a href="#新建关于我-about-页" class="headerlink" title="新建关于我 about 页"></a>新建关于我 about 页</h3><p><code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"about"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> about<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token punctuation">---</span></code></pre><h3 id="新建留言板-contact-页（可选的）"><a href="#新建留言板-contact-页（可选的）" class="headerlink" title="新建留言板 contact 页（可选的）"></a>新建留言板 contact 页（可选的）</h3><p><code>contact</code> 页是用来展示<strong>留言板</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>contact/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"contact"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/contact/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> contact<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"contact"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"contact"</span><span class="token punctuation">---</span></code></pre><blockquote><p><strong>注</strong>：本留言板功能依赖于第三方评论系统，请<strong>激活</strong>你的评论系统才有效果。并且在主题的 <code>_config.yml</code> 文件中，第 <code>19</code> 至 <code>21</code> 行的“<strong>菜单</strong>”配置，取消关于留言板的注释即可。</p></blockquote><h3 id="新建友情连接-friends-页（可选的）"><a href="#新建友情连接-friends-页（可选的）" class="headerlink" title="新建友情连接 friends 页（可选的）"></a>新建友情连接 friends 页（可选的）</h3><p><code>friends</code> 页是用来展示<strong>友情连接</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"friends"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> friends<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-12-12 21:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token punctuation">---</span></code></pre><p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">[</span><span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/1_qq_27922023.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"码酱"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"我不是大佬，只是在追寻大佬的脚步"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://luokangyuan.com/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/4027734.jpeg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"闪烁之狐"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://blinkfox.github.io/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/avatar.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"ja_rome"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"平凡的脚步也可以走出伟大的行程"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://me.csdn.net/jlh912008548"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">]</span></code></pre><h3 id="菜单导航配置"><a href="#菜单导航配置" class="headerlink" title="菜单导航配置"></a>菜单导航配置</h3><h4 id="配置基本菜单导航的名称、路径url和图标icon"><a href="#配置基本菜单导航的名称、路径url和图标icon" class="headerlink" title="配置基本菜单导航的名称、路径url和图标icon."></a>配置基本菜单导航的名称、路径url和图标icon.</h4><p>1.菜单导航名称可以是中文也可以是英文(如：<code>Index</code>或<code>主页</code>)<br>2.图标icon 可以在<a href="https://fontawesome.com/icons" target="_blank" rel="noopener">Font Awesome</a> 中查找   </p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">Index</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>home  <span class="token key atrule">Tags</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /tags    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>tags  <span class="token key atrule">Categories</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /categories    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>bookmark  <span class="token key atrule">Archives</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /archives    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>archive  <span class="token key atrule">About</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /about    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>user<span class="token punctuation">-</span>circle  <span class="token key atrule">Friends</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /friends    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>address<span class="token punctuation">-</span>book</code></pre><h4 id="二级菜单配置方法"><a href="#二级菜单配置方法" class="headerlink" title="二级菜单配置方法"></a>二级菜单配置方法</h4><p>如果你需要二级菜单则可以在原基本菜单导航的基础上如下操作<br>1.在需要添加二级菜单的一级菜单下添加<code>children</code>关键字(如:<code>About</code>菜单下添加<code>children</code>)<br>2.在<code>children</code>下创建二级菜单的 名称name,路径url和图标icon.<br>3.注意每个二级菜单模块前要加 <code>-</code>.<br>4.注意缩进格式  </p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">Index</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>home  <span class="token key atrule">Tags</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /tags    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>tags  <span class="token key atrule">Categories</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /categories    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>bookmark  <span class="token key atrule">Archives</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /archives    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>archive  <span class="token key atrule">About</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /about    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>user<span class="token punctuation">-</span>circle<span class="token punctuation">-</span>o  <span class="token key atrule">Friends</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /friends    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>address<span class="token punctuation">-</span>book  <span class="token key atrule">Medias</span><span class="token punctuation">:</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>list    <span class="token key atrule">children</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Musics        <span class="token key atrule">url</span><span class="token punctuation">:</span> /musics        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>music      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Movies        <span class="token key atrule">url</span><span class="token punctuation">:</span> /movies        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>film      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Books        <span class="token key atrule">url</span><span class="token punctuation">:</span> /books        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>book      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Galleries        <span class="token key atrule">url</span><span class="token punctuation">:</span> /galleries        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>image</code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后就可以在文章中对应位置看到你用<code>emoji</code>语法写的表情了。</p><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p>由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 <a href="https://github.com/ele828/hexo-prism-plugin" target="_blank" rel="noopener">hexo-prism-plugin</a> 的 Hexo 插件来做代码高亮，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i -S hexo-prism-plugin</code></pre><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并新增 <code>prism</code> 插件相关的配置，主要配置如下：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">prism_plugin</span><span class="token punctuation">:</span>  <span class="token key atrule">mode</span><span class="token punctuation">:</span> <span class="token string">'preprocess'</span>    <span class="token comment" spellcheck="true"># realtime/preprocess</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'tomorrow'</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false    </span><span class="token comment" spellcheck="true"># default false</span>  custom_css<span class="token punctuation">:</span></code></pre><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search" target="_blank" rel="noopener">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">search</span><span class="token punctuation">:</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> search.xml  <span class="token key atrule">field</span><span class="token punctuation">:</span> post</code></pre><h3 id="中文链接转拼音（建议安装）"><a href="#中文链接转拼音（建议安装）" class="headerlink" title="中文链接转拼音（建议安装）"></a>中文链接转拼音（建议安装）</h3><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin" target="_blank" rel="noopener">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i hexo-permalink-pinyin --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">permalink_pinyin</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">separator</span><span class="token punctuation">:</span> <span class="token string">'-'</span> <span class="token comment" spellcheck="true"># default: '-'</span></code></pre><blockquote><p><strong>注</strong>：除了此插件外，<a href="https://github.com/rozbo/hexo-abbrlink" target="_blank" rel="noopener">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p></blockquote><h3 id="文章字数统计插件（建议安装）"><a href="#文章字数统计插件（建议安装）" class="headerlink" title="文章字数统计插件（建议安装）"></a>文章字数统计插件（建议安装）</h3><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount" target="_blank" rel="noopener">hexo-wordcount</a>插件。</p><p>安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i --save hexo-wordcount</code></pre><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">postInfo</span><span class="token punctuation">:</span>  <span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">update</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">wordCount</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 设置文章字数统计为 true.</span>  <span class="token key atrule">totalCount</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 设置站点文章总字数统计为 true.</span>  <span class="token key atrule">min2read</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 阅读时长.</span>  <span class="token key atrule">readCount</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 阅读次数.</span></code></pre><h3 id="添加emoji表情支持（可选的）"><a href="#添加emoji表情支持（可选的）" class="headerlink" title="添加emoji表情支持（可选的）"></a>添加emoji表情支持（可选的）</h3><p>本主题新增了对<code>emoji</code>表情的支持，使用到了 <a href="https://npm.taobao.org/package/hexo-filter-github-emojis" target="_blank" rel="noopener">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown emoji</code>语法（<code>::</code>,例如：<code>:smile:</code>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-filter-github-emojis --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">githubEmojis</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">className</span><span class="token punctuation">:</span> github<span class="token punctuation">-</span>emoji  <span class="token key atrule">inject</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">styles</span><span class="token punctuation">:</span>  customEmojis<span class="token punctuation">:</span></code></pre><h3 id="添加-RSS-订阅支持（可选的）"><a href="#添加-RSS-订阅支持（可选的）" class="headerlink" title="添加 RSS 订阅支持（可选的）"></a>添加 RSS 订阅支持（可选的）</h3><p>本主题中还使用到了 <a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="noopener">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-feed --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">feed</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> atom  <span class="token key atrule">path</span><span class="token punctuation">:</span> atom.xml  <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token key atrule">hub</span><span class="token punctuation">:</span>  <span class="token key atrule">content</span><span class="token punctuation">:</span>  <span class="token key atrule">content_limit</span><span class="token punctuation">:</span> <span class="token number">140</span>  <span class="token key atrule">content_limit_delim</span><span class="token punctuation">:</span> <span class="token string">' '</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date</code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h3 id="添加-DaoVoice-在线聊天功能（可选的）"><a href="#添加-DaoVoice-在线聊天功能（可选的）" class="headerlink" title="添加 DaoVoice 在线聊天功能（可选的）"></a>添加 <a href="http://www.daovoice.io/" target="_blank" rel="noopener">DaoVoice</a> 在线聊天功能（可选的）</h3><p>前往 <a href="http://www.daovoice.io/" target="_blank" rel="noopener">DaoVoice</a> 官网注册并且获取 <code>app_id</code>，并将 <code>app_id</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="添加-Tidio-在线聊天功能（可选的）"><a href="#添加-Tidio-在线聊天功能（可选的）" class="headerlink" title="添加 Tidio 在线聊天功能（可选的）"></a>添加 <a href="https://www.tidio.com/" target="_blank" rel="noopener">Tidio</a> 在线聊天功能（可选的）</h3><p>前往 <a href="https://www.tidio.com/" target="_blank" rel="noopener">Tidio</a> 官网注册并且获取 <code>Public Key</code>，并将 <code>Public Key</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="修改页脚"><a href="#修改页脚" class="headerlink" title="修改页脚"></a>修改页脚</h3><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。</p><h3 id="修改社交链接"><a href="#修改社交链接" class="headerlink" title="修改社交链接"></a>修改社交链接</h3><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱等的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">if</span> <span class="token attr-name">(theme.socialLink.github)</span> <span class="token attr-name">{</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>&lt;%<span class="token punctuation">=</span> theme.socialLink.github %<span class="token punctuation">></span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tooltipped<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">data-tooltip</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>访问我的GitHub<span class="token punctuation">"</span></span> <span class="token attr-name">data-position</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">data-delay</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fab fa-github<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">}</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span></code></pre><p>其中，社交图标（如：<code>fa-github</code>）你可以在 <a href="https://fontawesome.com/icons" target="_blank" rel="noopener">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供你参考：</p><ul><li>Facebook: <code>fab fa-facebook</code></li><li>Twitter: <code>fab fa-twitter</code></li><li>Google-plus: <code>fab fa-google-plus</code></li><li>Linkedin: <code>fab fa-linkedin</code></li><li>Tumblr: <code>fab fa-tumblr</code></li><li>Medium: <code>fab fa-medium</code></li><li>Slack: <code>fab fa-slack</code></li><li>Sina Weibo: <code>fab fa-weibo</code></li><li>Wechat: <code>fab fa-weixin</code></li><li>QQ: <code>fab fa-qq</code></li><li>Zhihu: <code>fab fa-zhihu</code></li></ul><blockquote><p><strong>注意</strong>: 本主题中使用的 <code>Font Awesome</code> 版本为 <code>5.11.0</code>。</p></blockquote><h3 id="修改打赏的二维码图片"><a href="#修改打赏的二维码图片" class="headerlink" title="修改打赏的二维码图片"></a>修改打赏的二维码图片</h3><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><h3 id="配置音乐播放器（可选的）"><a href="#配置音乐播放器（可选的）" class="headerlink" title="配置音乐播放器（可选的）"></a>配置音乐播放器（可选的）</h3><p>要支持音乐播放，就必须开启音乐的播放配置和音乐数据的文件。</p><p>首先，在你的博客 <code>source</code> 目录下的 <code>_data</code> 目录（没有的话就新建一个）中新建 <code>musics.json</code> 文件，文件内容如下所示：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">[</span><span class="token punctuation">{</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"五月雨变奏电音"</span><span class="token punctuation">,</span>    <span class="token property">"artist"</span><span class="token operator">:</span> <span class="token string">"AnimeVibe"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://xxx.com/music1.mp3"</span><span class="token punctuation">,</span>    <span class="token property">"cover"</span><span class="token operator">:</span> <span class="token string">"http://xxx.com/music-cover1.png"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Take me hand"</span><span class="token punctuation">,</span>    <span class="token property">"artist"</span><span class="token operator">:</span> <span class="token string">"DAISHI DANCE,Cecile Corbel"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"/medias/music/music2.mp3"</span><span class="token punctuation">,</span>    <span class="token property">"cover"</span><span class="token operator">:</span> <span class="token string">"/medias/music/cover2.png"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Shape of You"</span><span class="token punctuation">,</span>    <span class="token property">"artist"</span><span class="token operator">:</span> <span class="token string">"J.Fla"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://xxx.com/music3.mp3"</span><span class="token punctuation">,</span>    <span class="token property">"cover"</span><span class="token operator">:</span> <span class="token string">"http://xxx.com/music-cover3.png"</span><span class="token punctuation">}</span><span class="token punctuation">]</span></code></pre><blockquote><p><strong>注</strong>：以上 JSON 中的属性：<code>name</code>、<code>artist</code>、<code>url</code>、<code>cover</code> 分别表示音乐的名称、作者、音乐文件地址、音乐封面。</p></blockquote><p>然后，在主题的 <code>_config.yml</code> 配置文件中激活配置即可：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 是否在首页显示音乐.</span><span class="token key atrule">music</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">showTitle</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span> 听听音乐  <span class="token key atrule">fixed</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 是否开启吸底模式</span>  <span class="token key atrule">autoplay</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 是否自动播放</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> '<span class="token comment" spellcheck="true">#42b983'</span>  <span class="token key atrule">loop</span><span class="token punctuation">:</span> <span class="token string">'all'</span> <span class="token comment" spellcheck="true"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>  <span class="token key atrule">order</span><span class="token punctuation">:</span> <span class="token string">'list'</span> <span class="token comment" spellcheck="true"># 音频循环顺序, 可选值: 'list', 'random'</span>  <span class="token key atrule">preload</span><span class="token punctuation">:</span> <span class="token string">'auto'</span> <span class="token comment" spellcheck="true"># 预加载，可选值: 'none', 'metadata', 'auto'</span>  <span class="token key atrule">volume</span><span class="token punctuation">:</span> <span class="token number">0.7 </span><span class="token comment" spellcheck="true"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>  <span class="token key atrule">listFolded</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 列表默认折叠</span>  <span class="token key atrule">listMaxHeight</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># 列表最大高度</span></code></pre><h2 id="文章-Front-matter-介绍"><a href="#文章-Front-matter-介绍" class="headerlink" title="文章 Front-matter 介绍"></a>文章 Front-matter 介绍</h2><h3 id="Front-matter-选项详解"><a href="#Front-matter-选项详解" class="headerlink" title="Front-matter 选项详解"></a>Front-matter 选项详解</h3><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code> 中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code> 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>keywords</td><td>文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><blockquote><p><strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2" target="_blank" rel="noopener">开源中国在线工具</a>、<a href="http://encode.chahuo.com/" target="_blank" rel="noopener">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx" target="_blank" rel="noopener">站长工具</a>。</li><li>您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li></ol></blockquote><p>以下为文章的 <code>Front-matter</code> 示例。</p><h3 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a>最简示例</h3><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme主题介绍<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token punctuation">---</span></code></pre><h3 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h3><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme主题介绍<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token key atrule">author</span><span class="token punctuation">:</span> 赵奇<span class="token key atrule">img</span><span class="token punctuation">:</span> /source/images/xxx.jpg<span class="token key atrule">top</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">cover</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">coverImg</span><span class="token punctuation">:</span> /images/1.jpg<span class="token key atrule">password</span><span class="token punctuation">:</span> 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92<span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">mathjax</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">summary</span><span class="token punctuation">:</span> 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要<span class="token key atrule">categories</span><span class="token punctuation">:</span> Markdown<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Typora  <span class="token punctuation">-</span> Markdown<span class="token punctuation">---</span></code></pre><h2 id="效果截图"><a href="#效果截图" class="headerlink" title="效果截图"></a>效果截图</h2><p><img src="http://static.blinkfox.com/matery-20181202-1.png" alt="首页"></p><p><img src="http://static.blinkfox.com/matery-20181202-2.png" alt="首页推荐文章"></p><p><img src="http://static.blinkfox.com/matery-20181202-3.png" alt="首页文章列表"></p><p><img src="http://static.blinkfox.com/matery-20181202-7.png" alt="首页文章列表"></p><p><img src="http://static.blinkfox.com/matery-20181202-8.png" alt="首页文章列表"></p><h2 id="自定制修改"><a href="#自定制修改" class="headerlink" title="自定制修改"></a>自定制修改</h2><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p><ul><li>菜单</li><li>我的梦想</li><li>首页的音乐播放器和视频播放器配置</li><li>是否显示推荐文章名称和按钮配置</li><li><code>favicon</code> 和 <code>Logo</code></li><li>个人信息</li><li>TOC 目录</li><li>文章打赏信息</li><li>复制文章内容时追加版权信息</li><li>MathJax</li><li>文章字数统计、阅读时长</li><li>点击页面的’爱心’效果</li><li>我的项目</li><li>我的技能</li><li>我的相册</li><li><code>Gitalk</code>、<code>Gitment</code>、<code>Valine</code> 和 <code>disqus</code> 评论配置</li><li><a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子统计</a>和谷歌分析（<code>Google Analytics</code>）</li><li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 <code>hashcode</code> 值取余，来选择展示对应的特色图</li></ul><p><strong>我认为个人博客应该都有自己的风格和特色</strong>。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 <code>_config.yml</code> 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：</p><h3 id="修改主题颜色"><a href="#修改主题颜色" class="headerlink" title="修改主题颜色"></a>修改主题颜色</h3><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */</span><span class="token selector"><span class="token class">.bg-color</span> </span><span class="token punctuation">{</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right, <span class="token hexcode">#4cbf30</span> <span class="token number">0%</span>, <span class="token hexcode">#0f9d58</span> <span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@-webkit-keyframes</span> rainbow</span> <span class="token punctuation">{</span>   <span class="token comment" spellcheck="true">/* 动态切换背景颜色. */</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@keyframes</span> rainbow</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/* 动态切换背景颜色. */</span><span class="token punctuation">}</span></code></pre><h3 id="修改-banner-图和文章特色图"><a href="#修改-banner-图和文章特色图" class="headerlink" title="修改 banner 图和文章特色图"></a>修改 banner 图和文章特色图</h3><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.bg-cover'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background-image'</span><span class="token punctuation">,</span> <span class="token string">'url(/medias/banner/'</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.jpg)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p><h2 id="版本记录"><a href="#版本记录" class="headerlink" title="版本记录"></a>版本记录</h2><ul><li>v1.2.2<ul><li>新增了自定义文章 <code>keywords</code> 的功能；</li><li>新增静态彩带点击切换的功能和配置；</li><li>将文章字数统计、彩带和站点运行时间等功能默认设置为 <code>false</code>；</li><li>修改了文章的 <code>description</code> 的 meta 属性优先读取文章的 <code>summary</code> 属性；</li><li>修改了文章标题的 HTML 标签，从 <code>div</code> 改成了 <code>h1</code> 标题；</li><li>修改了页脚年份显示不正确的问题；</li><li>去掉了站点运行时间中多余的 <code>setTimeout</code> 代码；</li></ul></li><li>v1.2.1<ul><li>新增了 TOC 的展开目录层级设置和滚动条功能，防止目录较多的时候目录溢出；</li><li>修改了首页的展示方式为以前的模式；</li><li>修复首页按钮没有边框的问题；</li><li>修复了音乐及吸底模式、视频、推荐文章等不激活时仍然生成首页卡片的问题；</li><li>修复 wordCount 插件未安装的问题，修改了部分配置；</li><li>修复音乐的 JSON 配置中有单引号的情况页面不显示的音乐的问题</li><li>修复标签云在Hexo4.0下链接失效的问题；</li></ul></li><li>v1.2.0<ul><li>新增了 <a href="http://www.daovoice.io/" target="_blank" rel="noopener">DaoVoice</a>、<a href="https://www.tidio.com/" target="_blank" rel="noopener">Tidio</a> 的在线聊天功能；</li><li>新增了两级菜单的功能；</li><li>新增了打字效果的副标题；</li><li>新增了网页内容预加载的功能；</li><li>新增了首页 banner 是否每日切换的配置功能；</li><li>新增了显示 ICP 备案信息的功能，默认未开启；</li><li>新增了百度分析的配置；</li><li>新增了代码块的语言显示、一键复制、显示行号等功能；</li><li>新增了首页轮播图和推荐文章可自定义配置的功能；</li><li>新增了文章页面显示更新日期；</li><li>新增了转载规则的图标；</li><li>修改了分享的布局和显示方式；</li><li>升级更新了部分依赖库的版本；</li><li>其他细节修改和优化；</li></ul></li><li>v1.1.0<ul><li>新增了 <code>emoji</code> 的支持；</li><li>新增了站点运行时间统计及配置；</li><li>新增了留言板的功能,默认未开启；</li><li>新增了 <code>Twitter</code>、<code>Facebook</code>、知乎的社交链接；</li><li>更新了 <code>Valine</code> 的版本为最新版；</li><li>其他小细节的修改；</li></ul></li><li>v1.0.4<ul><li>新增了能为每篇文章都自定义转载规则的功能；</li><li>修复上一页、下一页的自定义 <code>summary</code> 不显示的问题；</li><li>修复了友情链接显示错位的问题，改为了瀑布流的布局方式；</li><li>其他小细节 bug 的修改；</li></ul></li><li>v1.0.3<ul><li>新增了<code>TOC</code>展开、收缩的按钮和相关配置，默认显示此按钮；</li></ul></li><li>v1.0.2<ul><li>升级了 <a href="https://materializecss.com/" target="_blank" rel="noopener">Materialize</a> 框架版本为<code>1.0.0</code>，重构和修改了升级过程中的部分文件或问题；</li><li>新增了首页封面的全屏轮播特效，可以将更重要的文章设置到首页轮播中；</li><li>修复首页第一个按钮是中文的问题</li><li>修复了 iPhone 上点击搜索输入获取焦点的问题；</li><li>修复了 iPhone 上输入框获取焦点后页面放大的问题；</li><li>修复一些文章或 UI 显示问题；</li></ul></li><li>v1.0.1<ul><li>调整 <code>css</code>、<code>js</code> 的文件请求路径在主题的<code>_config.yml</code>中配置，便于你更快捷的配置自己的 CDN；</li><li>新增代码是否折行为可配置，默认为折行；</li><li>默认激活 <code>TOC</code> 功能，并新增为某篇文章关闭 <code>TOC</code> 的 <code>Front-matter</code> 配置选项；</li><li>修复文章滚动时，高亮的目录选项不准确的问题；</li><li><code>IOS</code>下移除搜索框自动获得焦点属性，防止自动获得焦点后导致视图上移；</li></ul></li><li>v1.0.0<ul><li>新增了所有基础功能；</li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 网页前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
            <tag> 主题 </tag>
            
            <tag> 使用方法 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
