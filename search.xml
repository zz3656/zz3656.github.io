<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>PVE下安装AdGuard Home搭建一个带广告过滤的私有DNS服务器及优化部署</title>
      <link href="/2020/02/21/pve-aguard/"/>
      <url>/2020/02/21/pve-aguard/</url>
      
        <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>很多人可能会问：AdGuard<br>Home是干嘛用的？假如我们把整个互联网比喻成一个城市的供水，每个地区自来水厂提供的水质和你所在管网末端位置的不同，有些家庭会明智的选择使用前置净水器，可以解决管道中的二次污染、软化水质、阻止水垢、防止锈蚀、保护净水器，当然还有太阳能和燃气热水器等等，但最终享受干净水的是人。精致的家庭还会使用厨下式厨余垃圾处理器，而很多的家庭也许都不知道什么是前置净水器、什么是厨余处理器。互联网和供水一样，有大带宽和小带宽，有管网污染的问题，有被政府监控和被黑客偷窥的问题，还有烦人的广告问题，无论是视频前和视频中的广告，所以在入户光猫之后的主路由器上安装并使用私有DNS服务器（AdGuard Home），就可以有助于“清洗流量”。根据AdGuard Home 官网介绍，AdGuard Home 是一款全网广告拦截与反跟踪软件。在您将其安装完毕后，它将保护您所有家用设备，同时您不再需要安装任何客户端软件。随着物联网与连接设备的兴起，掌控您自己的整个网络环境变得越来越重要。简单的点讲就比如Google的8.8.8.8，阿里云的223.5.5.5，114的114.114.114.114，还有Cloudflare的1.1.1.1，这些都是提供DNS服务的公共DNS服务器。而AdGuard Home在给我们提供DNS服务的同时还提供去广告的功能，这就有点意思了吧~~</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/0.png" alt=""></p><pre><code>   博主是用PVE作为宿主机的环境，所以就在PVE系统里面安装了这个AdGuard Home，来看看怎么安装和使用吧。</code></pre><p>一、安装教程</p><p>1、下载AdGuardHome_PVE-<br>LXC.tar.gz镜像文件：打开下载地址<a href="https://dl.gxnas.com，进入“Proxmox-VE（PVE虚拟平台）”文件夹，找到“AdGuardHome_PVE-LXC.tar.gz”，右键复制下载链接到迅雷下载；" target="_blank" rel="noopener">https://dl.gxnas.com，进入“Proxmox-VE（PVE虚拟平台）”文件夹，找到“AdGuardHome_PVE-LXC.tar.gz”，右键复制下载链接到迅雷下载；</a></p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/1-1.png" alt=""></p><p>2、通过SSH工具（本教程采用WinSCP），把下载的“AdGuardHome_PVE-<br>LXC.tar.gz”，上传到PVE系统下的“/var/lib/vz/template/cache”里面；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/2-1.png" alt=""></p><p>3、通过网页访问PVE后台，点击右上角“创建CT”；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/3-1.png" alt=""></p><p>4、创建：LXC容器，“一般”标签栏的输入以下信息：<br>主机名称：自己随便写<br>密码：自己设置<br>确认密码：同上<br>然后点下一步</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/4-1.png" alt=""></p><p>5、点“模板”标签栏的“模版”下拉菜单，选择“AdGuardHome_PVE-LXC.tar.gz”，下一步；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/5-1.png" alt=""></p><p>6、“根磁盘“标签设置磁盘大小2G，下一步；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/6-1.png" alt=""></p><p>7、”CPU“标签设置1核，下一步；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/7-1.png" alt=""></p><p>8、”内存“标签设置内存1024M ，交换分区用默认的512，下一步；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/8-1.png" alt=""></p><p>9、”网络“标签的IPv4可以根据自己的内网设置静态IP（本教程内网是192.168.1.X的号段，所以设置192.168.1.2/24），IPv6设置DHCP，下一步；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/9-1.png" alt=""></p><p>10、“DNS”标签这里不需要设置，直接下一步；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/10-1.png" alt=""></p><p>11、“确认”标签，最后确认一下信息，如果正确无误就勾选左下角的“创建后启动”再点“完成”。</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/11-1.png" alt=""></p><p>二、相关的设置<br>1、回到PVE系统的“数据中心”，找到刚刚建立的AdGuard容器，点它进入控制台，输入登录的用户名root，回车，再输入之前设置的密码，输入ip<br>addr回车，检查一下显示的IP地址是否与刚才安装时设置的IP地址一致；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/12.png" alt=""></p><p>2、输入ping baidu.com，回车，检查容器能否连通外网；有外网IP地址返回的表示外网连接正常，按一下Ctrl+C结束测试。</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/13.png" alt=""></p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/14.png" alt=""></p><p>3、在局域网电脑的浏览器地址栏输入刚才安装AdGuardHome设置的IP:3000（比如我的是192.168.1.2:3000）；</p><p>4、开始配置；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/15.png" alt=""></p><p>5、网页管理界面，我们用默认的端口，不需要更改，下一步；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/16.png" alt=""></p><p>6、身份认证，需要自己设置用户名和密码，下一步；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/17.png" alt=""></p><p>7、下一步；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/18.png" alt=""></p><p>8、打开仪表盘；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/19.png" alt=""></p><p>9、主界面是这样的；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/20.png" alt=""></p><p>10、点最上面的菜单栏“设置”-“常规设置”，这四个选项根据自己要求设置（博主勾了1、2、4），然后拉到下面，点保存；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/21.png" alt=""></p><p>11、点最上面的菜单栏“设置”-“DNS设置”，上游DNS这栏输入（由于每个人使用的宽带不同，所以上游DNS使用哪个，请根据自己的情况填写，后面会讲）：</p><p>tls://dns.google</p><p>tls://1.1.1.1</p><p>tls://1.0.0.1</p><p>然后拉到下面点应用，会看到系统提示“上游DNS已更新”；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/22.png" alt=""></p><p>12、点最上面的菜单栏“过滤器”，“添加过滤器”，名称随意设置，地址输入<a href="https://hosts.nfz.moe/127.0.0.1/full/hosts，点“添加过滤器”；" target="_blank" rel="noopener">https://hosts.nfz.moe/127.0.0.1/full/hosts，点“添加过滤器”；</a></p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/23.png" alt=""></p><p>13、看到系统提示“网址添加成功”后，点打叉关掉提示；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/24.png" alt=""></p><p>14、点“检查更新”；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/25.png" alt=""></p><p>15、系统更新完成会提示“所有过滤器已更新到最新”；</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/26.png" alt=""></p><p>三、更改网关/路由的DNS<br>由于每个人使用的网关/路由都各有不同，因此这里不做具体描述。请自行把内网的DNS主服务器IP地址设置成我们刚刚安装的AdGuardHome的内网IP地址，DNS副服务器设置为了其他公共的DNS服务器IP（拒绝使用运营商的DNS）。博主的网关是自己编译的软路由openwrt<br>X64的版本，具体的设置如下，大家借鉴一下吧。</p><p><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/27.png" alt=""></p><p>四、最后来看看效果如何<br><img src="https://wp.qiniu.gxnas.com/wp-content/uploads/2019/09/28.png" alt=""></p><p>五、官方网站及项目地址<br>1、AdGuard官网：<a href="https://adguard.com/" target="_blank" rel="noopener">https://adguard.com/</a><br>2、AdGuardHome项目地址：<a href="https://github.com/AdguardTeam/AdGuardHome" target="_blank" rel="noopener">https://github.com/AdguardTeam/AdGuardHome</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> Linux </tag>
            
            <tag> 去广告 </tag>
            
            <tag> AdGuard Home </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ROS主路由+OpenWrt旁路由+Adguard去广告配置教程</title>
      <link href="/2020/02/21/ros-openwrt-adguard/"/>
      <url>/2020/02/21/ros-openwrt-adguard/</url>
      
        <content type="html"><![CDATA[<h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a><a href=""></a>前言：</h2><p>最近网上流行着各种软路由搭配使用，不再单单的一个OpenWrt或者LEDE了，自己也研究了一段时间的AdguardHome所以就打算出这么一期教程)。</p><h3 id="使用系统："><a href="#使用系统：" class="headerlink" title="使用系统："></a>使用系统：</h3><ul><li><p>ROS</p></li><li><p>OpenWrt</p></li><li><p>AdgurardHome</p></li></ul><h2 id="拓扑图："><a href="#拓扑图：" class="headerlink" title="拓扑图："></a>拓扑图：</h2><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121349_43951.jpeg" alt=""></p><h2 id="教程："><a href="#教程：" class="headerlink" title="教程："></a>教程：</h2><h3 id="AdguardHome"><a href="#AdguardHome" class="headerlink" title="AdguardHome"></a>AdguardHome</h3><p>可以查阅之前的安装教程</p><p><a href="https://www.imf8.cn/zb_system/cmd.php?act=ajax&amp;hk_url=aHR0cHM6Ly9ibG9nLmFmcmVlbWVuLmNvbS8yMDE5LzEyL2FkZ3VhcmRob21lJWU2JTkwJWFkJWU1JWJiJWJhJWU0JWI4JTgwJWU2JWFjJWJlJWU1JWIxJTllJWU0JWJhJThlJWU4JTg3JWFhJWU1JWI3JWIxJWU1JThlJWJiJWU1JWI5JWJmJWU1JTkxJThhZG5zJWU2JTljJThkJWU1JThhJWExJWU1JTk5JWE4Lw==" target="_blank" rel="noopener">AdguardHome搭建一款属于自己去广告DNS服务器</a></p><h3 id="ROS"><a href="#ROS" class="headerlink" title="ROS"></a>ROS</h3><h4 id="一：登陆ros后台"><a href="#一：登陆ros后台" class="headerlink" title="一：登陆ros后台"></a>一：登陆ros后台</h4><p>使用winbox登陆到ros的后台，出现的首页如下图。</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121351_12439.png" alt=""></p><h4 id="二：配置DHCP-Server"><a href="#二：配置DHCP-Server" class="headerlink" title="二：配置DHCP Server"></a>二：配置DHCP Server</h4><p>省略如何配置ros拨号上网等步骤，Google下有很多教程，都很详细，就不在列举了。打开IP&gt;&gt;&gt;DHCP Server</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121352_91692.png" alt=""></p><p>选择Networks</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121353_63511.png" alt=""></p><p>双击打开下方列表中的内容，修改Geteway(网关)指向自己的lede旁路由、DNS<br>Servers(DNS服务器设置为本机IP，也就是ROS的IP)，修改完毕后点击保存。</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121355_41600.png" alt=""></p><h4 id="三：配置DNS"><a href="#三：配置DNS" class="headerlink" title="三：配置DNS"></a>三：配置DNS</h4><p>选择IP&gt;&gt;&gt;DNS</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121356_37130.png" alt=""></p><p>Servers(服务器)填入自己的AdguradHome的IP地址，并且打开Allow Remote<br>Requests，开启ROS的dns缓存，虽然AdguardHome也有缓存，就我使用下来感觉还是ROS的缓存比较好用。</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121357_31167.png" alt=""></p><h4 id="四：设置定时清理DNS缓存"><a href="#四：设置定时清理DNS缓存" class="headerlink" title="四：设置定时清理DNS缓存"></a>四：设置定时清理DNS缓存</h4><p>打开System&gt;&gt;&gt;Scheduler</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121358_69194.png" alt=""></p><p>选择新增一条记录。</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121358_26337.png" alt=""></p><p>可以按照我这方案填写，我设置的是凌晨3点清理</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121359_48282.png" alt=""></p><h3 id="OpenWrt"><a href="#OpenWrt" class="headerlink" title="OpenWrt"></a>OpenWrt</h3><h4 id="一：修改lan口"><a href="#一：修改lan口" class="headerlink" title="一：修改lan口"></a>一：修改lan口</h4><p>打开网络&gt;&gt;&gt;接口</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121401_77837.png" alt=""></p><p>选择修改lan口</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121402_98443.png" alt=""></p><p>只需将网关设置成ROS的IP地址，DNS服务器选择ROS的IP地址即可。</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121403_62367.png" alt=""></p><h4 id="二：关闭DHCP"><a href="#二：关闭DHCP" class="headerlink" title="二：关闭DHCP"></a>二：关闭DHCP</h4><p>在刚刚修改lan口的页面往下滑，找到DHCP服务器，取消DHCP服务器的勾选</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121404_89780.png" alt=""></p><h4 id="三：Turbo-ACC设置"><a href="#三：Turbo-ACC设置" class="headerlink" title="三：Turbo ACC设置"></a>三：Turbo ACC设置</h4><p>打开网络&gt;&gt;&gt;Turbo ACC，将DNS加速关闭</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121405_91826.png" alt=""></p><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>至此，整个配置就已经完成了。科学上网配置中只需要将DNS解析方式设置成为本机的5335就可以达到不论是国内还是国外全部都经过AdguradHome</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121406_15417.png" alt=""></p><p>这是我的AdguradHome的截图，解析域名的时间还是蛮快的，配合上ROS的缓存，网页就是秒开</p><p><img src="https://www.imf8.cn/zb_users/upload/2019/12/remoteimage2_20191230121408_59282.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> LINUX应用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 去广告 </tag>
            
            <tag> AdGuard Home </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用AdGuard Home搭建一个无广告和跟踪的公共DNS</title>
      <link href="/2020/02/21/adguard/"/>
      <url>/2020/02/21/adguard/</url>
      
        <content type="html"><![CDATA[<p>简单点说AdGuard Home就是一个公共DNS服务，如Google的公共DNS<code>8.8.8.8</code>，和DNSmasq一样AdGuard<br>Home是开源的，可以自行搭建安装后在客户端配置使用。xiaoz之前分享过一个自己写的项目<a href="https://www.xiaoz.me/archives/10555" target="_blank" rel="noopener">PHPDNS</a><br>，PHPDNS在DNSmasq的基础上开发了WEB界面，功能比较简单，不过该项目不在维护，这里推荐功能更加强大的AdGuard Home</p><p>AdGuard Home使用Golang开发，编译好了各大平台的二进制文件，因此安装非常简单，这里以CentOS 7为例，其它系统可参考官方帮助文档。</p><h3 id="AdGuard-Home主要功能"><a href="#AdGuard-Home主要功能" class="headerlink" title="AdGuard Home主要功能"></a>AdGuard Home主要功能</h3><ul><li>拦截随处可见的广告</li><li>注重隐私保护</li><li>家庭保护模式</li><li>自定义过滤</li></ul><h3 id="CentOS-7-X64安装"><a href="#CentOS-7-X64安装" class="headerlink" title="CentOS 7 X64安装"></a>CentOS 7 X64安装</h3><p>AdGuard Home二进制文件位于<a href="https://github.com/AdguardTeam/AdGuardHome/releases" target="_blank" rel="noopener">https://github.com/AdguardTeam/AdGuardHome/releases</a><br>可根据自己的平台下载最新版本。CentOS 7安装方法如下：</p><pre><code>#下载AdGuard Homewget http://soft.xiaoz.org/linux/AdGuardHome_v0.93_linux_amd64.tar.gz#解压tar -zxvf AdGuardHome_v0.93_linux_amd64.tar.gz#进入AdGuardHome目录cd AdGuardHome#放行3000端口（AdGuardHome初始化需要使用）#firewalld放行3000端口firewall-cmd --zone=public --add-port=3000/tcp --permanentfirewall-cmd --reload#iptables放行3000端口iptables -A INPUT -p tcp --dport 3000 -j ACCEPTservice iptables save#启动AdGuard Home./AdGuardHome</code></pre><p>运行AdGuardHome后，会提示打开<code>http://IP：3000</code>端口进行初始化，如下截图。</p><p><img src="https://cdn.xiaoz.me/wp-content/uploads/2019/02/Snipaste_2019-02-28_10-47-21.png" alt=""></p><p>浏览器打开<code>http://IP：3000</code>,根据提示无脑的下一步即可。首次初始化会要求设置账号、密码（请牢记），下次登录需要使用。</p><p><img src="https://cdn.xiaoz.me/wp-content/uploads/2019/02/Snipaste_2019-02-28_10-48-57.png" alt=""></p><h3 id="AdGuardHome基本设置"><a href="#AdGuardHome基本设置" class="headerlink" title="AdGuardHome基本设置"></a>AdGuardHome基本设置</h3><h4 id="设置中文"><a href="#设置中文" class="headerlink" title="设置中文"></a>设置中文</h4><p>进入AdGuardHome后台 - 网页右下方 - 可设置为繁体中文，感觉是机器翻译的，不太准确，将就用。</p><p><img src="https://cdn.xiaoz.me/wp-content/uploads/2019/02/Snipaste_2019-02-28_10-52-06.png" alt=""></p><h4 id="设置上游DNS"><a href="#设置上游DNS" class="headerlink" title="设置上游DNS"></a>设置上游DNS</h4><p>AdGuard Home默认使用Cloudflare DNS作为上游服务器，如果您服务器在国内可能请求上游DNS延迟比较高，在后台 - 设定 -<br>可以设置为国内的DNS，如腾讯的<code>119.29.29.29</code>，但坏处是不支持DNS over TLS</p><p><img src="https://cdn.xiaoz.me/wp-content/uploads/2019/02/Snipaste_2019-02-28_10-54-13.png" alt=""></p><h4 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h4><p>在后台 - 过滤器，可以看到AdGuardHome内置了部分广告过滤规则，但在中国有点水土不服，如果要想更完美的实现广告屏蔽还需要自己添加规则。</p><p><img src="https://cdn.xiaoz.me/wp-content/uploads/2019/02/Snipaste_2019-02-28_11-08-51.png" alt=""></p><p>以下是过滤规则的一些说明，更多规则可以在AdGuardHome后台查看或参考官方帮助文档。</p><ol><li><code>||example.org^</code> - 封锁example.org域及其他子域</li><li><code>@@||example.org^</code> - 解除封锁example.org域及其他子域</li><li><code>127.0.0.1 example.org</code> - 将example.org host指向到127.0.0.1（不包含其他子域）</li><li><code>!</code> - 注释符号</li><li><code>#</code> - 也是一个注释符号</li><li><code>/REGEX/</code> - 正则表达式模式</li></ol><h3 id="额外设置"><a href="#额外设置" class="headerlink" title="额外设置"></a>额外设置</h3><p>为了方便管理，可以继续输入命令<code>./AdGuardHome -s install</code>安装为服务，然后就可以使用下面的命令来进行管理了。</p><pre><code>#启动systemctl start AdGuardHome#开机自启systemctl enable AdGuardHome#重启systemctl restart AdGuardHome#停止systemctl stop AdGuardHome</code></pre><p>DNS默认使用53(TCP/UDP)端口进行通信，因此别忘记放行53端口，否则DNS无法正常使用。</p><pre><code>#firewalld放行53端口firewall-cmd --zone=public --add-port=53/tcp --permanentfirewall-cmd --zone=public --add-port=53/udp --permanentfirewall-cmd --reload#iptables放行53端口iptables -A INPUT -p tcp --dport 53 -j ACCEPTiptables -A INPUT -p udp --dport 53 -j ACCEPTservice iptables save</code></pre><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>AdGuard Home支持MacOS、Windows、Linux、树莓派等系统，提供二进制和docker安装方式，安装简单。AdGuard<br>Home还提供了直观的统计系统，使用方便。如果您打算自建一个公共DNS，AdGuard Home值得一试。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> LINUX应用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 去广告 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>原来我不帅 Windows_Server_2016_x64_数据中心版 （20191212更新）</title>
      <link href="/2020/02/21/2016windows/"/>
      <url>/2020/02/21/2016windows/</url>
      
        <content type="html"><![CDATA[<ul><li><p>系统介绍：</p><ul><li><p>1、采用微软官方原版优化制作；未做任何精简！~</p></li><li><p>2、补丁更新到2019年12月底，FLASH，VC组件，全部是最新版；</p></li><li><p>3、集成服务器常用的一些附送工具和远程软件，包括硬盘检测软件；</p></li></ul></li></ul><p><img src="https://files.51524.com/wenzhang/3727/37271.png" alt=""></p><p><img src="https://files.51524.com/wenzhang/3727/37272.png" alt=""></p><p><img src="https://files.51524.com/wenzhang/3727/37273.png" alt=""></p><p><img src="https://files.51524.com/wenzhang/3727/37274.png" alt=""></p><p><img src="https://files.51524.com/wenzhang/3727/37275.png" alt=""></p><p><img src="https://files.51524.com/wenzhang/3727/37276.png" alt=""></p><ul><li><p>注意1：单盘安装Server2016是最快的！~（在BIOS将非系统盘全部关闭，安装完系统再进BIOS开启）</p></li><li><p>注意2：第一次进系统要求输密码；（可以不输，直接回车也可以的）</p></li></ul><p><strong>由于Server2008系统安全系数太低，本人不再制作；以后只更新2012 2016 2019服务器系统！！！</strong><br><strong>下载链接: <a href="https://pan.baidu.com/s/1TQAcQlPPuxVpYBLtiuA0UA" target="_blank" rel="noopener">https://pan.baidu.com/s/1TQAcQlPPuxVpYBLtiuA0UA</a> 提取码: pcn3</strong></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原来我不帅 </tag>
            
            <tag> 网吧系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>原来我不帅 马蹄更新v2.1.0_Win7x64_Win10x64_无盘公包（v2020版 V4） 2020.02.10 更新</title>
      <link href="/2020/02/21/matigengxin/"/>
      <url>/2020/02/21/matigengxin/</url>
      
        <content type="html"><![CDATA[<h2 id="马蹄更新是继绿化大师以后，又一款新的无广告无盘，承诺无广告。"><a href="#马蹄更新是继绿化大师以后，又一款新的无广告无盘，承诺无广告。" class="headerlink" title="马蹄更新是继绿化大师以后，又一款新的无广告无盘，承诺无广告。"></a>马蹄更新是继绿化大师以后，又一款新的无广告无盘，承诺无广告。</h2><ul><li><p>更新说明：<br>马蹄更新v2.1.0无盘公包</p><ul><li><p>马蹄更新v2.1.0_Win7x64_Pro_Bios_无盘公包<br>文件: 马蹄更新v2.1.0_Win7x64_Pro_Bios_无盘公包（v2020版）.exe<br>大小: 2711139081 字节<br>文件版本: 2.1.0.0<br>修改时间: 2019年12月1日, 2:02:56<br>MD5: 5F71051EAFF79A5227A99754D3088FCF<br>SHA1: F83EC398511FCFF80128E21F2BAE631A6F47D689<br>CRC32: 5587D987.jpg” alt=”” /&gt;</p></li><li><p>马蹄更新v2.1.0_Win10x64_Pro_Bios_无盘公包（v2020版）<br>文件: 马蹄更新v2.1.0_Win10x64_Pro_Bios_无盘公包（v2020版）.exe<br>大小: 2751911456 字节<br>文件版本: 2.1.0.0<br>修改时间: 2019年12月1日, 12:04:55<br>MD5: 49194D6334E08A5E464FB797B265274E<br>SHA1: 3F6C640DB0E82E187CBC8C60579D6F92D2DE212D<br>CRC32: 162F221A</p></li><li><p>马蹄更新v2.1.0_Win10x64_2019LTSC_无盘公包（v2020版）</p></li></ul></li></ul><p>文件: 马蹄更新v2.1.0_Win10x64_2019LTSC_无盘公包（v2020版）.exe<br>大小: 3113263927 字节<br>文件版本: 1, 0, 0, 0<br>修改时间: 2019年12月1日, 14:56:18<br>MD5: FF532A2A955E7FE7D4ECF174AE87F65D<br>SHA1: E16DC891A0578F6484701976F35256A3AC5FEE4D<br>CRC32: 1953BCF5</p><p><strong>下载地址链接: <a href="https://pan.baidu.com/s/1xDKEgj8UvVmAYUCfQtJ97w" target="_blank" rel="noopener">https://pan.baidu.com/s/1xDKEgj8UvVmAYUCfQtJ97w</a> 提取码: 9m73</strong></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 原来我不帅 </tag>
            
            <tag> 网吧系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时隔三年网吧系统届的大佬死性不改终于发布了2020年的第一个版本20fi</title>
      <link href="/2020/02/21/netbar-windows/"/>
      <url>/2020/02/21/netbar-windows/</url>
      
        <content type="html"><![CDATA[<h2 id="最新版本：20Fi"><a href="#最新版本：20Fi" class="headerlink" title="最新版本：20Fi"></a>最新版本：20Fi</h2><p>　　发布日期：2020年02月09日<br>　　版本号含义解读：20代表年份，取发布当年的后2位，例如2020年就是20，Fi=First，代表该年度首个版本。由于Win7及2008系统微软官方已经停止更新支持，因此本次更新为最终版。</p><table><thead><tr><th>更新内容</th><th>Win7x64 Pro SP1</th><th>WS2008 R2 企业版</th></tr></thead><tbody><tr><td>系统默认登录密码</td><td>无</td><td>WS200820fi</td></tr><tr><td>Windows系统补丁（已集成永恒之蓝、RDP漏洞、双杀、sha2补丁）</td><td>2019年5月</td><td>2019年5月</td></tr><tr><td>其他主流网卡驱动</td><td>已集成</td><td>已集成</td></tr><tr><td>AHCI驱动</td><td>系统原生AHCI驱动</td><td>系统原生AHCI驱动</td></tr><tr><td>USB3.0/3.1驱动（可支持新主板）</td><td>C:\MySP\常用软件下，自行安装</td><td>C:\MySP\常用软件下，自行安装</td></tr><tr><td>NVME补丁与驱动 4.4.0.1003</td><td>已集成</td><td>已集成</td></tr><tr><td>WinRAR v5.71</td><td>已集成</td><td>已集成</td></tr><tr><td>QQ拼音输入法 6.4.5804.400</td><td>已集成</td><td>已集成</td></tr><tr><td>QQ五笔输入法 2.2.334.400</td><td>已集成</td><td>已集成</td></tr><tr><td>Flash Player Active For IE&amp;PPAPI 32.0.0.314（已删除广告服务）</td><td>已集成</td><td>已集成</td></tr><tr><td>Flash Player Active 硬件加速</td><td>已开启</td><td>已开启</td></tr><tr><td>Micorsoft .net framework 3.5.1</td><td>已集成</td><td>已集成</td></tr><tr><td>Micorsoft .net framework 4.5.2</td><td>已集成</td><td>已集成</td></tr><tr><td>Micorsoft .net framework 4.6.2（Steam新游戏需要By成都熊）</td><td>已集成</td><td>已集成</td></tr><tr><td>Micorsoft .net framework 4.7.2（Steam新游戏需要By成都熊）</td><td>已集成</td><td>已集成</td></tr><tr><td>DirectX10</td><td>已集成</td><td>-</td></tr><tr><td>Microsoft XML Core Services 3.0</td><td>已集成</td><td>-</td></tr><tr><td>Microsoft XML Core Services 4.0</td><td>已集成</td><td>-</td></tr><tr><td>Microsoft XML Core Services 6.0</td><td>已集成</td><td>-</td></tr><tr><td>Microsoft XNA Framework 3.1</td><td>已集成</td><td>-</td></tr><tr><td>Visual C++ Runtime 2005 x64</td><td>已集成</td><td>已集成</td></tr><tr><td>Visual C++ Runtime 2005 x86</td><td>已集成</td><td>已集成</td></tr><tr><td>Visual C++ Runtime 2008 x64</td><td>已集成</td><td>已集成</td></tr><tr><td>Visual C++ Runtime 2008 x86</td><td>已集成</td><td>已集成</td></tr><tr><td>Visual C++ Runtime 2010 x64</td><td>已集成</td><td>已集成</td></tr><tr><td>Visual C++ Runtime 2010 x86</td><td>已集成</td><td>已集成</td></tr><tr><td>Visual C++ Runtime 2012 x64</td><td>已集成</td><td>已集成</td></tr><tr><td>Visual C++ Runtime 2012 x86</td><td>已集成</td><td>已集成</td></tr><tr><td>Visual C++ Runtime 2013 x64</td><td>已集成</td><td>已集成</td></tr><tr><td>Visual C++ Runtime 2013 x86</td><td>已集成</td><td>已集成</td></tr><tr><td>Visual C++ Runtime 2015 x64</td><td>已集成</td><td>已集成</td></tr><tr><td>Visual C++ Runtime 2015 x86</td><td>已集成</td><td>已集成</td></tr><tr><td>Visual C++ Runtime 2019 x64（新增）</td><td>已集成</td><td>已集成</td></tr><tr><td>Visual C++ Runtime 2019 x86（新增）</td><td>已集成</td><td>已集成</td></tr><tr><td>软件限制策略模版</td><td>已启用</td><td>已启用</td></tr><tr><td>C:\MySP\office 2010安装包</td><td>有，需要自行安装</td><td>有，需要自行安装</td></tr><tr><td>C:\MySP\IE11安装包</td><td>默认为IE11</td><td>默认为IE11</td></tr><tr><td>C:\MySP\激活工具</td><td>有，需要自行激活</td><td>有，需要自行激活</td></tr><tr><td>U盘、手机存储自动播放</td><td>已禁用</td><td>已禁用</td></tr></tbody></table><hr><table><thead><tr><th align="center">系统名称/文件名</th><th align="center">大小</th><th align="center">MD5</th><th align="center">下载地址1</th><th align="center">下载地址2</th></tr></thead><tbody><tr><td align="center">Windows_7_Pro_64位  ISO9000_Win7x64_20Fi.GHO</td><td align="center">5.08 GB</td><td align="center">20DA32BD2BD929FF93E57AF50F8E4793</td><td align="center"><a href="https://pan.baidu.com/s/13xAcfUF80W9PnHevMYYa6g" target="_blank" rel="noopener">百度网盘</a>  提取码：2zvl</td><td align="center"><a href="https://share.weiyun.com/5ENYddr" target="_blank" rel="noopener">腾讯微云</a></td></tr><tr><td align="center">Windows_2008_r2_SP1_64位  ISO9000_WS2008r2_20Fi.GHO</td><td align="center">5.62 GB</td><td align="center">1771185081318413E67DE71285E1CB55</td><td align="center"><a href="https://pan.baidu.com/s/1wYPWxNyyxLb6gZ3W2i9gjQ" target="_blank" rel="noopener">百度网盘</a>  提取码：rrcr</td><td align="center"><a href="https://share.weiyun.com/58sdZ2z" target="_blank" rel="noopener">腾讯微云</a></td></tr><tr><td align="center">Windows 10 x64 ltsc  ISO9000_Win10ltsc_20Fi.GHO</td><td align="center">5.65 GB</td><td align="center">C210C0EFBBA4D1E26E9F31C9B668A079</td><td align="center"><a href="https://pan.baidu.com/s/1-vJyjPLe7Uxcf1guYI6BqQ" target="_blank" rel="noopener">百度网盘</a>  提取码：cdaj</td><td align="center"><a href="https://share.weiyun.com/5cAmcbc" target="_blank" rel="noopener">腾讯微云</a></td></tr><tr><td align="center">Windows Server 2019 DC  ISO9000_WS2019DC_20Fi.GHO</td><td align="center">6.20 GB</td><td align="center">D62497A913761B62A7F8FAC5CE32302C</td><td align="center"><a href="https://pan.baidu.com/s/1NIYmQj2_z9J0lXy8ZLGC9g" target="_blank" rel="noopener">百度网盘</a>  提取码：rj52</td><td align="center"><a href="https://share.weiyun.com/5ZFnwZA" target="_blank" rel="noopener">腾讯微云</a></td></tr></tbody></table><hr><h3 id="注意事项："><a href="#注意事项：" class="headerlink" title="注意事项："></a>注意事项：</h3><ul><li>2月9日的Win10及Win Server 2019DC已知问题：<ul><li>1、Windows自动更新服务会莫名其妙的处于运行状态，并自动下载更新，解决方案如下：<br>Windows10 1809版本Windows自动更新服务无法禁用问题解决方案<br><a href="http://www.clxp.net.cn/thread-18400-1-1.html" target="_blank" rel="noopener">http://www.clxp.net.cn/thread-18400-1-1.html</a><br>后续会重新上传修正版GHO。</li><li>无盘客户机使用Win10系统KMSpico激活不了并报错？<br><a href="http://www.clxp.net.cn/thread-4674-1-1.html" target="_blank" rel="noopener">http://www.clxp.net.cn/thread-4674-1-1.html</a></li></ul></li></ul><ul><li><p>1、使用20Fi版本的Win7，自己安装好上传到网维大师无盘，开机0x50蓝屏是怎么回事？<br>答：该问题是由于顺网无盘不兼容2018年4月后的补丁导致的，而以下补丁均为2018年5月及以后发布的，所以打了这些补丁上传后，开机就会出现0x50蓝屏，需通过添加删除程序手工卸载以下补丁之后再上传即可。<br>KB4499175：19年5月份累积安全更新<br>KB4474419：SHA2支持补丁<br>KB4103712：双杀补丁<br>至于带来的系统漏洞隐患问题，目前最佳解决方案是不使用IE浏览器来避免漏洞触发，但如果顾客强行使用IE浏览器中毒，就别无他法了！<br>网维大师Img包也不会集成以上补丁，其他无盘会集成以上补丁以尽量提高系统安全性。<br>双杀漏洞模拟验证方法：<a href="http://www.clxp.net.cn/thread-18356-1-1.html" target="_blank" rel="noopener">http://www.clxp.net.cn/thread-18356-1-1.html</a></p></li><li><p>2、为什么GHO文件这么大？<br>主要与补丁以及丰富了游戏组件库有关，目前可实现游戏组件全兼容。</p></li><li><p>3、USB3.0、3.1驱动怎么使用？<br>在无盘开超级之前，在无盘服务端挂盘，比如挂为Z盘；<br>将Z:\MySP\常用软件的USB驱动文件夹按照对应硬件型号驱动版本，拷贝到Z:\Windows\Inf目录下，然后保存挂盘修改，超级用户开机就能自动发现硬件并安装驱动了。<br>7系列主板拷贝：4.0.6.60版本即可<br>8、9系列主板拷贝：5.0.3.42版本即可<br>10系列主板拷贝：USB3.1_Win7X64</p></li><li><p>4、为什么装了USB驱动之后，开机蓝屏？<br>同系统内，多个USB型号不一样带来的驱动不兼容问题导致，与系统自身无关，是Intel自身兼容性问题。解决方法是：7系列；8/9系列；10系列各一个配置点，不要把驱动混在一个配置点或img内即可。</p></li></ul><h3 id="免责声明："><a href="#免责声明：" class="headerlink" title="免责声明："></a>免责声明：</h3><p>　　本站发布的ISO9000系列操作系统均用于技术研究，不得用于任何形式的商业销售，版权仍归微软所有。<br>　　本站承诺不会用于销售以及捆版软件获取利益，用户下载后需在24小时之内删除。如果您喜爱本操作系统，希望长期使用，请向微软购买正版版权，假如因用户未购买正版版权而导致版权纠纷，本站概不负责。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网吧系统 </tag>
            
            <tag> 死性不改 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于matery主题valine评论使用方法</title>
      <link href="/2020/02/21/valine/"/>
      <url>/2020/02/21/valine/</url>
      
        <content type="html"><![CDATA[<p>##关于hexo-theme-matery主题使用valine评论系统##</p><p>在主题目录_config.yml文件下大概305行的位置</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">valine</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">appId</span><span class="token punctuation">:</span>  <span class="token key atrule">appKey</span><span class="token punctuation">:</span>  <span class="token key atrule">notify</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">verify</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">visitor</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">avatar</span><span class="token punctuation">:</span> <span class="token string">'mm'</span> <span class="token comment" spellcheck="true"># Gravatar style : mm/identicon/monsterid/wavatar/retro/hide</span>  <span class="token key atrule">pageSize</span><span class="token punctuation">:</span> <span class="token number">10</span>  <span class="token key atrule">placeholder</span><span class="token punctuation">:</span> <span class="token string">'本文是否帮到了您?'</span> <span class="token comment" spellcheck="true"># Comment Box placeholder</span>  <span class="token key atrule">background</span><span class="token punctuation">:</span> /medias/comment_bg.png<span class="token punctuation">---</span></code></pre><p><strong>或许appid和appkey的方法请参照<a href="https://valine.js.org/quickstart.html" target="_blank" rel="noopener">valine</a></strong></p><ul><li><p>获取以后请填入到对应的字段 保存发布即可</p></li><li><p>编辑yml和md文件推荐使用<a href="https://atom.io" target="_blank" rel="noopener">atom</a>软件（对比了几个软件博主觉得这个更加实用。）</p></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 网页前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Valine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>折腾vps时候翻找过的一些脚本资料</title>
      <link href="/2020/02/21/linux/"/>
      <url>/2020/02/21/linux/</url>
      
        <content type="html"><![CDATA[<p>锐速BBR一键安装脚本<br>    wget “<a href="https://github.com/chiakge/Linux-NetSpeed/raw/master/tcp.sh&quot;" target="_blank" rel="noopener">https://github.com/chiakge/Linux-NetSpeed/raw/master/tcp.sh"</a> &amp;&amp; chmod +x tcp.sh &amp;&amp; ./tcp.sh</p><p>debian系统更新命令</p><pre><code>apt-get update -y</code></pre><p>VPS 测试脚本</p><pre><code>wget -qO- --no-check-certificate https://raw.githubusercontent.com/oooldking/script/master/superbench.sh | bash</code></pre><p>查看bbr<br>    sysctl net.ipv4.tcp_available_congestion_control<br>    lsmod | grep bbr</p><p>宝塔面板安装</p><p>Centos安装命令：<br>    yum install -y wget &amp;&amp; wget -O install.sh <a href="http://download.bt.cn/install/install_6.0.sh" target="_blank" rel="noopener">http://download.bt.cn/install/install_6.0.sh</a> &amp;&amp; sh install.sh</p><p>试验性Centos/Ubuntu/Debian安装命令支持ipv6，注意使用root权限执行此命令 (支持Centos8)<br>    curl -sSO <a href="http://download.bt.cn/install/new_install.sh" target="_blank" rel="noopener">http://download.bt.cn/install/new_install.sh</a> &amp;&amp; bash new_install.sh</p><p>Ubuntu/Deepin安装命令：<br>    wget -O install.sh <a href="http://download.bt.cn/install/install-ubuntu_6.0.sh" target="_blank" rel="noopener">http://download.bt.cn/install/install-ubuntu_6.0.sh</a> &amp;&amp; sudo bash install.sh<br>Debian安装命令：<br>    wget -O install.sh <a href="http://download.bt.cn/install/install-ubuntu_6.0.sh" target="_blank" rel="noopener">http://download.bt.cn/install/install-ubuntu_6.0.sh</a> &amp;&amp; bash install.sh<br>Fedora安装命令:<br>    wget -O install.sh <a href="http://download.bt.cn/install/install_6.0.sh" target="_blank" rel="noopener">http://download.bt.cn/install/install_6.0.sh</a> &amp;&amp; bash install.sh</p><p>Linux面板7.1.0升级命令：<br>    curl <a href="http://download.bt.cn/install/update6.sh|bash" target="_blank" rel="noopener">http://download.bt.cn/install/update6.sh|bash</a></p><p>开启BBR</p><p>升级内核<br>开启 BBR 要求 4.10 以上版本 Linux 内核，可使用如下命令查看当前内核版本：</p><pre><code>uname -r</code></pre><p>如果内核4.10以上就执行下面</p><pre><code>echo 'net.core.default_qdisc=fq' | sudo tee -a /etc/sysctl.confecho 'net.ipv4.tcp_congestion_control=bbr' | sudo tee -a /etc/sysctl.confsudo sysctl -p</code></pre><p>完成后，分别执行如下命令来检查 BBR 是否开启成功：</p><pre><code>sudo sysctl net.ipv4.tcp_available_congestion_control</code></pre><h1 id="输出应为-net-ipv4-tcp-available-congestion-control-bbr-cubic-reno"><a href="#输出应为-net-ipv4-tcp-available-congestion-control-bbr-cubic-reno" class="headerlink" title="输出应为 net.ipv4.tcp_available_congestion_control = bbr cubic reno"></a>输出应为 net.ipv4.tcp_available_congestion_control = bbr cubic reno</h1><pre><code>sudo sysctl -n net.ipv4.tcp_congestion_control</code></pre><h1 id="输出应为-bbr"><a href="#输出应为-bbr" class="headerlink" title="输出应为 bbr"></a>输出应为 bbr</h1><pre><code>lsmod | grep bbr</code></pre><h1 id="输出应类似-tcp-bbr-16384-28"><a href="#输出应类似-tcp-bbr-16384-28" class="headerlink" title="输出应类似 tcp_bbr  16384  28"></a>输出应类似 tcp_bbr  16384  28</h1><p>Cloudflare Partner：<a href="https://cdn.moeelf.com/" target="_blank" rel="noopener">https://cdn.moeelf.com/</a><br>Cloudflare节点IP列表：<a href="https://ofvps.com/201907510" target="_blank" rel="noopener">https://ofvps.com/201907510</a><br>新手建议先看保姆级套CDN教程：<a href="https://youtu.be/TWJZ30L1NRk" target="_blank" rel="noopener">https://youtu.be/TWJZ30L1NRk</a></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 备忘录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo + Github Pages博客搭建教程（搬运）</title>
      <link href="/2020/02/21/hexo-github/"/>
      <url>/2020/02/21/hexo-github/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>一直以来自己都有书写文章的习惯，不管是收集资料还是表达自己的个人见解。最开始把资料都放在印象笔记里，但是印象笔记有个不好的点就是书写不方便，而且多设备登录不友好，需要升级账户。后来就搭建了一个WordPress站点，记录自己的点滴。慢慢的接触到了CSDN，也计划着在那里写博客。CSDN的编辑器有markdown版本，接触到了markdown就对其产生了好感。与此同时，我也将我的WordPress站点的编辑器换成了markdown编辑器，一处书写多处同步。<br>慢慢的，我感受到了WordPress站点的臃肿，由于我的站点原因，做的并不是单独的博客站点，所有的文章展示方面不友好。所以萌生了搭建一个单独的博客的想法。</p><p><strong>为什么选择hexo?</strong><br>Hexo是一个快速、简洁且高效的博客框架。Hexo使用Markdown（或其他渲染引擎）解析文章，在几秒之内，即可利用靓丽的主题生成静态网页。<br>很久之前就知道有这个博客框架，一直没有去体验过。而且，这个博客是不需要自己去购置服务器的，甚至域名都不用去买。</p><p><strong>搭建环境准备</strong><br>Node.js 的安装和准备<br>Node.js的官网是在国外的，下载的服务可能不太友好，可以去国内的Nodejs中文网去下载，选择适合自己的版本安装就可以了。安装界面也是下一步下一步就可以了。<br>网址：<a href="http://nodejs.cn/download/" target="_blank" rel="noopener">http://nodejs.cn/download/</a></p><p><strong>检验是否安装成功</strong></p><pre><code>node -vnpm -v</code></pre><p>显示版本号，没有报错就算装成功了。</p><p><strong>git的安装</strong><br>git是一个版本控制管理工具，这个主要是在Hexo发布的时候起作用。将本地的博客同步到GitHub上面。<br>选择合适的版本安装。<br>网址：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">https://git-scm.com/downloads</a></p><p><strong>检验是否安装成功</strong></p><pre><code>git --version</code></pre><p><strong>博客本地搭建</strong><br>安装Hexo<br>通过npm来安装Hexo</p><pre><code>npm install -g hexo-cli</code></pre><p><strong>创建网站</strong><br>在电脑里新建一个文件夹作为博客的目录，通过Hexo命令初始化并安装。</p><pre><code>hexo init &lt;folder&gt;cd &lt;folder&gt;npm install</code></pre><p>例如这里我将博客目录设置为hexoblog</p><pre><code>hexo init hexoblogcd hexoblognpm install # 这一步也可以不执行，init操作时已经安装了</code></pre><h3 id="网站目录介绍"><a href="#网站目录介绍" class="headerlink" title="网站目录介绍"></a>网站目录介绍</h3><p>config.yml<br>博客的配置文件，博客的名称、关键词、作者、语言、博客主题…设置都在里面。<br>package.json<br>应用程序信息，新添加的插件内容也会出现在这里面，我们可以不修改这里的内容。<br>scaffolds<br>scaffolds就是脚手架的意思，这里放了三个模板文件，分别是新添加博客文章（posts）、新添加博客页（page）和新添加草稿（draft）的目标样式。<br>这部分可以修改的内容是，我们可以在模板上添加比如categories等自定义内容<br>source<br>source是放置我们博客内容的地方，里面初始只有两个文件夹，一个是drafts（草稿），一个posts（文章），但之后我们通过命令新建tags（标签）还有categories（分类）页后，这里会相应地增加文件夹。<br>themes<br>放置主题文件包的地方。Hexo会根据这个文件来生成静态页面。<br>初始状态下只有landscape一个文件夹，后续我们可以添加自己喜欢的。</p><p>Hexo命令<br>Hexo有详尽的中文文档，网址：<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/</a><br>主要的命令如下：<br>init新建一个网站。</p><pre><code>hexo init &lt;folder&gt;</code></pre><p><strong>new新建文章或页面。</strong></p><pre><code>hexo new &lt;layout&gt; "title"</code></pre><p>这里的对应我们要添加的内容，如果是posts就是添加新的文章，如果是page就是添加新的页面。<br>默认是添加posts。<br>然后我们就可以在对应的posts或drafts文件夹里找到我们新建的文件，然后在文件里用Markdown的格式来写作了。<br>generate生成静态页面</p><pre><code>hexo generatehexo g  // 简写</code></pre><h3 id="deploy将内容部署到网站"><a href="#deploy将内容部署到网站" class="headerlink" title="deploy将内容部署到网站"></a>deploy将内容部署到网站</h3><pre><code>hexo deployhexo -d  // 简写</code></pre><p><strong>publish发布内容，实际上是将内容从drafts（草稿）文件夹移到posts（文章）文件夹。</strong></p><pre><code>hexo publish &lt;layout&gt; &lt;filename&gt;</code></pre><p>server启动服务器，默认情况下，访问网站为<a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a></p><pre><code>hexo serverhexo s  // 简写</code></pre><p>根据我的经验，除了第一次部署的时候，我们会重点用到hexo init这个命令外，在平时写博客和发布过程中最常用的就是：</p><pre><code>hexo n 新建文章hexo s 启动服务器，在本地查看内容hexo g 生成静态页面hexo deploy 部署到网站</code></pre><p>以上四个步骤。<br>我的步骤：</p><hr><pre><code>hexo new xxx    // 新建文章hexo g &amp;&amp; hexo deploy  // 生成并部署</code></pre><p>网站本地效果<br>终端执行hexo s<br>网站就在本地启动了，访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></p><hr><h3 id="博客Github部署"><a href="#博客Github部署" class="headerlink" title="博客Github部署"></a>博客Github部署</h3><p>创建储存桶<br>新建一个仓库，项目名一定要是用户名.github.io的形式(README.md可选可不选)<br>比如，我的用户名是GeekMubai，则我的仓库名必须是GeekMubai.github.io</p><hr><p><strong>配置SSH-Key*</strong><br>没有SSH-Key的话，git是不能将本地的代码部署到GitHub的。所以需要先创建SSH-Key。<br>本地生成秘钥：这里的用户名和邮箱仅做演示，根据自己的修改</p><pre><code>git config --global user.name "geekmubai"git config --global user.email geekmubai@example.comssh-keygen -t rsa -C "youremail@example.com"</code></pre><p>此时在用户文件夹下有一个隐藏文件夹，里面会有相关的秘钥文件。<br>以文本方式打开id_rsa.pub文件，将内容复制到GitHub。</p><p>标题随便起，将文本内容复制到Key，最后添加Key</p><p><strong>同步代码</strong><br>使用hexo deploy部署需要安装一个插件：</p><pre><code>npm install hexo-deployer-git --save</code></pre><p>找到blog目录下的配置文件_config.yml,用编辑器打开此文件找到此文件中的deploy字段，按照以下配置deploy:</p><pre><code>type: gitrepo: git@github.com:GeekMubai/GeekMubai.github.io.gitbranch: master</code></pre><p>repo在GitHub获取：</p><p>然后在命令行中执行</p><pre><code>hexo d</code></pre><p>此时已经同步代码到GitHub了。</p><hr><p><strong>开启Github-Pages</strong><br>当你按照项目名是用户名.github.io的形式创建仓库的时候，GitHub应该是默认开启了github-pages。<br>进入仓库的设置，往下拉：</p><p>此时打开网址就可以看到Hexo博客了。</p><p><strong>域名解析</strong><br>注册域名<br>进入万网进行域名绑定<br>进入public,新建CNAME<br>把域名写到CNAME里<br>传到github仓库里<br>注意域名解析的时候选择CNAME,主机记录可以按照下面的方式填写。<br>比如我想用二级域名，我就填写blog。<br>此时blog.geekmubai.com就可以解析到我的Hexo博客。</p><p>主机记录就是域名前缀，常见用法有：<br>www：解析后的域名为<a href="http://www.aliyun.com。" target="_blank" rel="noopener">www.aliyun.com。</a><br>@：直接解析主域名 aliyun.com。<br>：泛解析，匹配其他所有域名 .aliyun.com。<br>mail：将域名解析为mail.aliyun.com，通常用于解析邮箱服务器。<br>二级域名：如：abc.aliyun.com，填写abc。<br>手机网站：如：m.aliyun.com，填写m。<br>显性URL：不支持泛解析（泛解析：将所有子域名解析到同一地址）</p><hr><p><strong>在博客的页面添加CNAME文件，并在里面记录自己域名的地址，将这个文件放在public文件夹下。这里还有一个小坑，CNAME文件经常被覆盖，导致我们重新部署博客后，链接就不可用了，可以将CNAME文件放在source文件夹下，这样就不会覆盖了。</strong></p><p>配置主题<br>下载<br>在hexo目录下执行</p><pre><code>git clone https://github.com/GeekMubai/hexo-casper.git themes/hexo-casper</code></pre><p>激活<br>把hexo配置文件 _config.yml 里的 theme 字段内容改为 hexo-casper 。</p><p><strong>升级</strong><br>建议先备份一下在执行下面的操作。</p><pre><code>cd themes/caspergit pull</code></pre><p>添加统一的文章模板参数<br>把下面的内容加入到 scaffolds/post.md,</p><pre><code>cover_img:     # 在文章摘要上显示feature_img:   # 在文章详细页面上置顶description:   # 文章描述keywords:      # 关键字</code></pre><p>valine 评论系统<br>使用方法请到他的官网查看，并结合下面的配置文件详细添加appID和appKey<br><a href="https://valine.js.org/" target="_blank" rel="noopener">https://valine.js.org/</a></p><p>添加关于页面</p><pre><code>hexo new page about</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 网页前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> GitHub </tag>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于本博客主题的使用方法（纯搬运）</title>
      <link href="/2020/02/21/hexo-theme-matery/"/>
      <url>/2020/02/21/hexo-theme-matery/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这是一个采用 <code>Material Design</code> 和响应式设计的 Hexo 博客主题。</p></blockquote><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li>简单漂亮，文章内容美观易读</li><li><a href="https://material.io/" target="_blank" rel="noopener">Material Design</a> 设计</li><li>响应式设计，博客在桌面端、平板、手机等设备上均能很好的展现</li><li>首页轮播文章及每天动态切换 <code>Banner</code> 图片</li><li>瀑布流式的博客文章列表（文章无特色图片时会有 <code>24</code> 张漂亮的图片代替）</li><li>时间轴式的归档页</li><li><strong>词云</strong>的标签页和<strong>雷达图</strong>的分类页</li><li>丰富的关于我页面（包括关于我、文章统计图、我的项目、我的技能、相册等）</li><li>可自定义的数据的友情链接页面</li><li>支持文章置顶和文章打赏</li><li>支持 <code>MathJax</code></li><li><code>TOC</code> 目录</li><li>可设置复制文章内容时追加版权信息</li><li>可设置阅读文章时做密码验证</li><li><a href="https://gitalk.github.io/" target="_blank" rel="noopener">Gitalk</a>、<a href="https://imsun.github.io/gitment/" target="_blank" rel="noopener">Gitment</a>、<a href="https://valine.js.org/" target="_blank" rel="noopener">Valine</a> 和 <a href="https://disqus.com/" target="_blank" rel="noopener">Disqus</a> 评论模块（推荐使用 <code>Gitalk</code>）</li><li>集成了<a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子统计</a>、谷歌分析（<code>Google Analytics</code>）和文章字数统计等功能</li><li>支持在首页的音乐播放和视频播放功能</li><li>支持<code>emoji</code>表情，用<code>markdown emoji</code>语法书写直接生成对应的能<strong>跳跃</strong>的表情。</li><li>支持 <a href="http://www.daovoice.io/" target="_blank" rel="noopener">DaoVoice</a>、<a href="https://www.tidio.com/" target="_blank" rel="noopener">Tidio</a> 在线聊天功能。</li></ul><h2 id="贡献者"><a href="#贡献者" class="headerlink" title="贡献者"></a>贡献者</h2><p>感谢下面列出的贡献者，没有他们，hexo-theme-matery 不会这么完美。</p><ul><li><a href="https://github.com/HarborZeng" target="_blank" rel="noopener">@HarborZeng</a></li><li><a href="https://github.com/shw2018" target="_blank" rel="noopener">@shw2018</a></li><li><a href="https://github.com/L1cardo" target="_blank" rel="noopener">@L1cardo</a></li><li><a href="https://github.com/Five-great" target="_blank" rel="noopener">@Five-great</a></li></ul><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>当你看到这里的时候，应该已经有一个自己的 <a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo</a> 博客了。如果还没有的话，不妨使用 Hexo 和 <a href="https://www.appinn.com/markdown/" target="_blank" rel="noopener">Markdown</a> 来写博客和文章。</p><p>点击 <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master" target="_blank" rel="noopener">这里</a> 下载 <code>master</code> 分支的最新稳定版的代码，解压缩后，将 <code>hexo-theme-matery</code> 的文件夹复制到你 Hexo 的 <code>themes</code> 文件夹中即可。</p><p>当然你也可以在你的 <code>themes</code> 文件夹下使用 <code>Git clone</code> 命令来下载:</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/blinkfox/hexo-theme-matery.git</code></pre><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h3><p>修改 Hexo 根目录下的 <code>_config.yml</code> 的  <code>theme</code> 的值：<code>theme: hexo-theme-matery</code></p><h4 id="config-yml-文件的其它修改建议"><a href="#config-yml-文件的其它修改建议" class="headerlink" title="_config.yml 文件的其它修改建议:"></a><code>_config.yml</code> 文件的其它修改建议:</h4><ul><li>请修改 <code>_config.yml</code> 的 <code>url</code> 的值为你的网站主 <code>URL</code>（如：<code>http://xxx.github.io</code>）。</li><li>建议修改两个 <code>per_page</code> 的分页条数值为 <code>6</code> 的倍数，如：<code>12</code>、<code>18</code> 等，这样文章列表在各个屏幕下都能较好的显示。</li><li>如果你是中文用户，则建议修改 <code>language</code> 的值为 <code>zh-CN</code>。</li></ul><h3 id="新建分类-categories-页"><a href="#新建分类-categories-页" class="headerlink" title="新建分类 categories 页"></a>新建分类 categories 页</h3><p><code>categories</code> 页是用来展示所有分类的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>categories/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"categories"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/categories/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> categories<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"categories"</span><span class="token punctuation">---</span></code></pre><h3 id="新建标签-tags-页"><a href="#新建标签-tags-页" class="headerlink" title="新建标签 tags 页"></a>新建标签 tags 页</h3><p><code>tags</code> 页是用来展示所有标签的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>tags/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"tags"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/tags/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> tags<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 18:23:38</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"tags"</span><span class="token punctuation">---</span></code></pre><h3 id="新建关于我-about-页"><a href="#新建关于我-about-页" class="headerlink" title="新建关于我 about 页"></a>新建关于我 about 页</h3><p><code>about</code> 页是用来展示<strong>关于我和我的博客</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>about/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"about"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/about/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> about<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"about"</span><span class="token punctuation">---</span></code></pre><h3 id="新建留言板-contact-页（可选的）"><a href="#新建留言板-contact-页（可选的）" class="headerlink" title="新建留言板 contact 页（可选的）"></a>新建留言板 contact 页（可选的）</h3><p><code>contact</code> 页是用来展示<strong>留言板</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>contact/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"contact"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/contact/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> contact<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-30 17:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"contact"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"contact"</span><span class="token punctuation">---</span></code></pre><blockquote><p><strong>注</strong>：本留言板功能依赖于第三方评论系统，请<strong>激活</strong>你的评论系统才有效果。并且在主题的 <code>_config.yml</code> 文件中，第 <code>19</code> 至 <code>21</code> 行的“<strong>菜单</strong>”配置，取消关于留言板的注释即可。</p></blockquote><h3 id="新建友情连接-friends-页（可选的）"><a href="#新建友情连接-friends-页（可选的）" class="headerlink" title="新建友情连接 friends 页（可选的）"></a>新建友情连接 friends 页（可选的）</h3><p><code>friends</code> 页是用来展示<strong>友情连接</strong>信息的页面，如果在你的博客 <code>source</code> 目录下还没有 <code>friends/index.md</code> 文件，那么你就需要新建一个，命令如下：</p><pre class=" language-bash"><code class="language-bash">hexo new page <span class="token string">"friends"</span></code></pre><p>编辑你刚刚新建的页面文件 <code>/source/friends/index.md</code>，至少需要以下内容：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> friends<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-12-12 21:25:30</span><span class="token key atrule">type</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token key atrule">layout</span><span class="token punctuation">:</span> <span class="token string">"friends"</span><span class="token punctuation">---</span></code></pre><p>同时，在你的博客 <code>source</code> 目录下新建 <code>_data</code> 目录，在 <code>_data</code> 目录中新建 <code>friends.json</code> 文件，文件内容如下所示：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">[</span><span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/1_qq_27922023.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"码酱"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"我不是大佬，只是在追寻大佬的脚步"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://luokangyuan.com/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/4027734.jpeg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"闪烁之狐"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://blinkfox.github.io/"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"avatar"</span><span class="token operator">:</span> <span class="token string">"http://image.luokangyuan.com/avatar.jpg"</span><span class="token punctuation">,</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"ja_rome"</span><span class="token punctuation">,</span>    <span class="token property">"introduction"</span><span class="token operator">:</span> <span class="token string">"平凡的脚步也可以走出伟大的行程"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://me.csdn.net/jlh912008548"</span><span class="token punctuation">,</span>    <span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"前去学习"</span><span class="token punctuation">}</span><span class="token punctuation">]</span></code></pre><h3 id="菜单导航配置"><a href="#菜单导航配置" class="headerlink" title="菜单导航配置"></a>菜单导航配置</h3><h4 id="配置基本菜单导航的名称、路径url和图标icon"><a href="#配置基本菜单导航的名称、路径url和图标icon" class="headerlink" title="配置基本菜单导航的名称、路径url和图标icon."></a>配置基本菜单导航的名称、路径url和图标icon.</h4><p>1.菜单导航名称可以是中文也可以是英文(如：<code>Index</code>或<code>主页</code>)<br>2.图标icon 可以在<a href="https://fontawesome.com/icons" target="_blank" rel="noopener">Font Awesome</a> 中查找   </p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">Index</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>home  <span class="token key atrule">Tags</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /tags    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>tags  <span class="token key atrule">Categories</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /categories    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>bookmark  <span class="token key atrule">Archives</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /archives    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>archive  <span class="token key atrule">About</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /about    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>user<span class="token punctuation">-</span>circle  <span class="token key atrule">Friends</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /friends    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>address<span class="token punctuation">-</span>book</code></pre><h4 id="二级菜单配置方法"><a href="#二级菜单配置方法" class="headerlink" title="二级菜单配置方法"></a>二级菜单配置方法</h4><p>如果你需要二级菜单则可以在原基本菜单导航的基础上如下操作<br>1.在需要添加二级菜单的一级菜单下添加<code>children</code>关键字(如:<code>About</code>菜单下添加<code>children</code>)<br>2.在<code>children</code>下创建二级菜单的 名称name,路径url和图标icon.<br>3.注意每个二级菜单模块前要加 <code>-</code>.<br>4.注意缩进格式  </p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">Index</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>home  <span class="token key atrule">Tags</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /tags    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>tags  <span class="token key atrule">Categories</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /categories    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>bookmark  <span class="token key atrule">Archives</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /archives    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>archive  <span class="token key atrule">About</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /about    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>user<span class="token punctuation">-</span>circle<span class="token punctuation">-</span>o  <span class="token key atrule">Friends</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /friends    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>address<span class="token punctuation">-</span>book  <span class="token key atrule">Medias</span><span class="token punctuation">:</span>    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>list    <span class="token key atrule">children</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Musics        <span class="token key atrule">url</span><span class="token punctuation">:</span> /musics        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>music      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Movies        <span class="token key atrule">url</span><span class="token punctuation">:</span> /movies        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>film      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Books        <span class="token key atrule">url</span><span class="token punctuation">:</span> /books        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>book      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Galleries        <span class="token key atrule">url</span><span class="token punctuation">:</span> /galleries        <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>image</code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后就可以在文章中对应位置看到你用<code>emoji</code>语法写的表情了。</p><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p>由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 <a href="https://github.com/ele828/hexo-prism-plugin" target="_blank" rel="noopener">hexo-prism-plugin</a> 的 Hexo 插件来做代码高亮，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i -S hexo-prism-plugin</code></pre><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并新增 <code>prism</code> 插件相关的配置，主要配置如下：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">prism_plugin</span><span class="token punctuation">:</span>  <span class="token key atrule">mode</span><span class="token punctuation">:</span> <span class="token string">'preprocess'</span>    <span class="token comment" spellcheck="true"># realtime/preprocess</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> <span class="token string">'tomorrow'</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">false    </span><span class="token comment" spellcheck="true"># default false</span>  custom_css<span class="token punctuation">:</span></code></pre><h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><p>本主题中还使用到了 <a href="https://github.com/wzpan/hexo-generator-search" target="_blank" rel="noopener">hexo-generator-search</a> 的 Hexo 插件来做内容搜索，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-search --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">search</span><span class="token punctuation">:</span>  <span class="token key atrule">path</span><span class="token punctuation">:</span> search.xml  <span class="token key atrule">field</span><span class="token punctuation">:</span> post</code></pre><h3 id="中文链接转拼音（建议安装）"><a href="#中文链接转拼音（建议安装）" class="headerlink" title="中文链接转拼音（建议安装）"></a>中文链接转拼音（建议安装）</h3><p>如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 <code>SEO</code>，且 <code>gitment</code> 评论对中文链接也不支持。我们可以用 <a href="https://github.com/viko16/hexo-permalink-pinyin" target="_blank" rel="noopener">hexo-permalink-pinyin</a> Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i hexo-permalink-pinyin --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">permalink_pinyin</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">separator</span><span class="token punctuation">:</span> <span class="token string">'-'</span> <span class="token comment" spellcheck="true"># default: '-'</span></code></pre><blockquote><p><strong>注</strong>：除了此插件外，<a href="https://github.com/rozbo/hexo-abbrlink" target="_blank" rel="noopener">hexo-abbrlink</a> 插件也可以生成非中文的链接。</p></blockquote><h3 id="文章字数统计插件（建议安装）"><a href="#文章字数统计插件（建议安装）" class="headerlink" title="文章字数统计插件（建议安装）"></a>文章字数统计插件（建议安装）</h3><p>如果你想要在文章中显示文章字数、阅读时长信息，可以安装 <a href="https://github.com/willin/hexo-wordcount" target="_blank" rel="noopener">hexo-wordcount</a>插件。</p><p>安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i --save hexo-wordcount</code></pre><p>然后只需在本主题下的 <code>_config.yml</code> 文件中，将各个文章字数相关的配置激活即可：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">postInfo</span><span class="token punctuation">:</span>  <span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">update</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">wordCount</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 设置文章字数统计为 true.</span>  <span class="token key atrule">totalCount</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 设置站点文章总字数统计为 true.</span>  <span class="token key atrule">min2read</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 阅读时长.</span>  <span class="token key atrule">readCount</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 阅读次数.</span></code></pre><h3 id="添加emoji表情支持（可选的）"><a href="#添加emoji表情支持（可选的）" class="headerlink" title="添加emoji表情支持（可选的）"></a>添加emoji表情支持（可选的）</h3><p>本主题新增了对<code>emoji</code>表情的支持，使用到了 <a href="https://npm.taobao.org/package/hexo-filter-github-emojis" target="_blank" rel="noopener">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown emoji</code>语法（<code>::</code>,例如：<code>:smile:</code>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-filter-github-emojis --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">githubEmojis</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">className</span><span class="token punctuation">:</span> github<span class="token punctuation">-</span>emoji  <span class="token key atrule">inject</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">styles</span><span class="token punctuation">:</span>  customEmojis<span class="token punctuation">:</span></code></pre><h3 id="添加-RSS-订阅支持（可选的）"><a href="#添加-RSS-订阅支持（可选的）" class="headerlink" title="添加 RSS 订阅支持（可选的）"></a>添加 RSS 订阅支持（可选的）</h3><p>本主题中还使用到了 <a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="noopener">hexo-generator-feed</a> 的 Hexo 插件来做 <code>RSS</code>，安装命令如下：</p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-generator-feed --save</code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token key atrule">feed</span><span class="token punctuation">:</span>  <span class="token key atrule">type</span><span class="token punctuation">:</span> atom  <span class="token key atrule">path</span><span class="token punctuation">:</span> atom.xml  <span class="token key atrule">limit</span><span class="token punctuation">:</span> <span class="token number">20</span>  <span class="token key atrule">hub</span><span class="token punctuation">:</span>  <span class="token key atrule">content</span><span class="token punctuation">:</span>  <span class="token key atrule">content_limit</span><span class="token punctuation">:</span> <span class="token number">140</span>  <span class="token key atrule">content_limit_delim</span><span class="token punctuation">:</span> <span class="token string">' '</span>  <span class="token key atrule">order_by</span><span class="token punctuation">:</span> <span class="token punctuation">-</span>date</code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后在 <code>public</code> 文件夹中即可看到 <code>atom.xml</code> 文件，说明你已经安装成功了。</p><h3 id="添加-DaoVoice-在线聊天功能（可选的）"><a href="#添加-DaoVoice-在线聊天功能（可选的）" class="headerlink" title="添加 DaoVoice 在线聊天功能（可选的）"></a>添加 <a href="http://www.daovoice.io/" target="_blank" rel="noopener">DaoVoice</a> 在线聊天功能（可选的）</h3><p>前往 <a href="http://www.daovoice.io/" target="_blank" rel="noopener">DaoVoice</a> 官网注册并且获取 <code>app_id</code>，并将 <code>app_id</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="添加-Tidio-在线聊天功能（可选的）"><a href="#添加-Tidio-在线聊天功能（可选的）" class="headerlink" title="添加 Tidio 在线聊天功能（可选的）"></a>添加 <a href="https://www.tidio.com/" target="_blank" rel="noopener">Tidio</a> 在线聊天功能（可选的）</h3><p>前往 <a href="https://www.tidio.com/" target="_blank" rel="noopener">Tidio</a> 官网注册并且获取 <code>Public Key</code>，并将 <code>Public Key</code> 填入主题的 <code>_config.yml</code> 文件中。</p><h3 id="修改页脚"><a href="#修改页脚" class="headerlink" title="修改页脚"></a>修改页脚</h3><p>页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 <code>/layout/_partial/footer.ejs</code> 文件中，包括站点、使用的主题、访问量等。</p><h3 id="修改社交链接"><a href="#修改社交链接" class="headerlink" title="修改社交链接"></a>修改社交链接</h3><p>在主题的 <code>_config.yml</code> 文件中，默认支持 <code>QQ</code>、<code>GitHub</code> 和邮箱等的配置，你可以在主题文件的 <code>/layout/_partial/social-link.ejs</code> 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">if</span> <span class="token attr-name">(theme.socialLink.github)</span> <span class="token attr-name">{</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>&lt;%<span class="token punctuation">=</span> theme.socialLink.github %<span class="token punctuation">></span><span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tooltipped<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">data-tooltip</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>访问我的GitHub<span class="token punctuation">"</span></span> <span class="token attr-name">data-position</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span> <span class="token attr-name">data-delay</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>50<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fab fa-github<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%</span> <span class="token attr-name">}</span> <span class="token attr-name">%</span><span class="token punctuation">></span></span></code></pre><p>其中，社交图标（如：<code>fa-github</code>）你可以在 <a href="https://fontawesome.com/icons" target="_blank" rel="noopener">Font Awesome</a> 中搜索找到。以下是常用社交图标的标识，供你参考：</p><ul><li>Facebook: <code>fab fa-facebook</code></li><li>Twitter: <code>fab fa-twitter</code></li><li>Google-plus: <code>fab fa-google-plus</code></li><li>Linkedin: <code>fab fa-linkedin</code></li><li>Tumblr: <code>fab fa-tumblr</code></li><li>Medium: <code>fab fa-medium</code></li><li>Slack: <code>fab fa-slack</code></li><li>Sina Weibo: <code>fab fa-weibo</code></li><li>Wechat: <code>fab fa-weixin</code></li><li>QQ: <code>fab fa-qq</code></li><li>Zhihu: <code>fab fa-zhihu</code></li></ul><blockquote><p><strong>注意</strong>: 本主题中使用的 <code>Font Awesome</code> 版本为 <code>5.11.0</code>。</p></blockquote><h3 id="修改打赏的二维码图片"><a href="#修改打赏的二维码图片" class="headerlink" title="修改打赏的二维码图片"></a>修改打赏的二维码图片</h3><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><h3 id="配置音乐播放器（可选的）"><a href="#配置音乐播放器（可选的）" class="headerlink" title="配置音乐播放器（可选的）"></a>配置音乐播放器（可选的）</h3><p>要支持音乐播放，就必须开启音乐的播放配置和音乐数据的文件。</p><p>首先，在你的博客 <code>source</code> 目录下的 <code>_data</code> 目录（没有的话就新建一个）中新建 <code>musics.json</code> 文件，文件内容如下所示：</p><pre class=" language-json"><code class="language-json"><span class="token punctuation">[</span><span class="token punctuation">{</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"五月雨变奏电音"</span><span class="token punctuation">,</span>    <span class="token property">"artist"</span><span class="token operator">:</span> <span class="token string">"AnimeVibe"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://xxx.com/music1.mp3"</span><span class="token punctuation">,</span>    <span class="token property">"cover"</span><span class="token operator">:</span> <span class="token string">"http://xxx.com/music-cover1.png"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Take me hand"</span><span class="token punctuation">,</span>    <span class="token property">"artist"</span><span class="token operator">:</span> <span class="token string">"DAISHI DANCE,Cecile Corbel"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"/medias/music/music2.mp3"</span><span class="token punctuation">,</span>    <span class="token property">"cover"</span><span class="token operator">:</span> <span class="token string">"/medias/music/cover2.png"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Shape of You"</span><span class="token punctuation">,</span>    <span class="token property">"artist"</span><span class="token operator">:</span> <span class="token string">"J.Fla"</span><span class="token punctuation">,</span>    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://xxx.com/music3.mp3"</span><span class="token punctuation">,</span>    <span class="token property">"cover"</span><span class="token operator">:</span> <span class="token string">"http://xxx.com/music-cover3.png"</span><span class="token punctuation">}</span><span class="token punctuation">]</span></code></pre><blockquote><p><strong>注</strong>：以上 JSON 中的属性：<code>name</code>、<code>artist</code>、<code>url</code>、<code>cover</code> 分别表示音乐的名称、作者、音乐文件地址、音乐封面。</p></blockquote><p>然后，在主题的 <code>_config.yml</code> 配置文件中激活配置即可：</p><pre class=" language-yaml"><code class="language-yaml"><span class="token comment" spellcheck="true"># 是否在首页显示音乐.</span><span class="token key atrule">music</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">showTitle</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">title</span><span class="token punctuation">:</span> 听听音乐  <span class="token key atrule">fixed</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 是否开启吸底模式</span>  <span class="token key atrule">autoplay</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 是否自动播放</span>  <span class="token key atrule">theme</span><span class="token punctuation">:</span> '<span class="token comment" spellcheck="true">#42b983'</span>  <span class="token key atrule">loop</span><span class="token punctuation">:</span> <span class="token string">'all'</span> <span class="token comment" spellcheck="true"># 音频循环播放, 可选值: 'all', 'one', 'none'</span>  <span class="token key atrule">order</span><span class="token punctuation">:</span> <span class="token string">'list'</span> <span class="token comment" spellcheck="true"># 音频循环顺序, 可选值: 'list', 'random'</span>  <span class="token key atrule">preload</span><span class="token punctuation">:</span> <span class="token string">'auto'</span> <span class="token comment" spellcheck="true"># 预加载，可选值: 'none', 'metadata', 'auto'</span>  <span class="token key atrule">volume</span><span class="token punctuation">:</span> <span class="token number">0.7 </span><span class="token comment" spellcheck="true"># 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效</span>  <span class="token key atrule">listFolded</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 列表默认折叠</span>  <span class="token key atrule">listMaxHeight</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># 列表最大高度</span></code></pre><h2 id="文章-Front-matter-介绍"><a href="#文章-Front-matter-介绍" class="headerlink" title="文章 Front-matter 介绍"></a>文章 Front-matter 介绍</h2><h3 id="Front-matter-选项详解"><a href="#Front-matter-选项详解" class="headerlink" title="Front-matter 选项详解"></a>Front-matter 选项详解</h3><p><code>Front-matter</code> 选项中的所有内容均为<strong>非必填</strong>的。但我仍然建议至少填写 <code>title</code> 和 <code>date</code> 的值。</p><table><thead><tr><th>配置选项</th><th>默认值</th><th>描述</th></tr></thead><tbody><tr><td>title</td><td><code>Markdown</code> 的文件标题</td><td>文章标题，强烈建议填写此选项</td></tr><tr><td>date</td><td>文件创建时的日期时间</td><td>发布时间，强烈建议填写此选项，且最好保证全局唯一</td></tr><tr><td>author</td><td>根 <code>_config.yml</code> 中的 <code>author</code></td><td>文章作者</td></tr><tr><td>img</td><td><code>featureImages</code> 中的某个值</td><td>文章特征图，推荐使用图床(腾讯云、七牛云、又拍云等)来做图片的路径.如: <code>http://xxx.com/xxx.jpg</code></td></tr><tr><td>top</td><td><code>true</code></td><td>推荐文章（文章是否置顶），如果 <code>top</code> 值为 <code>true</code>，则会作为首页推荐文章</td></tr><tr><td>cover</td><td><code>false</code></td><td><code>v1.0.2</code>版本新增，表示该文章是否需要加入到首页轮播封面中</td></tr><tr><td>coverImg</td><td>无</td><td><code>v1.0.2</code>版本新增，表示该文章在首页轮播封面需要显示的图片路径，如果没有，则默认使用文章的特色图片</td></tr><tr><td>password</td><td>无</td><td>文章阅读密码，如果要对文章设置阅读验证密码的话，就可以设置 <code>password</code> 的值，该值必须是用 <code>SHA256</code> 加密后的密码，防止被他人识破。前提是在主题的 <code>config.yml</code> 中激活了 <code>verifyPassword</code> 选项</td></tr><tr><td>toc</td><td><code>true</code></td><td>是否开启 TOC，可以针对某篇文章单独关闭 TOC 的功能。前提是在主题的 <code>config.yml</code> 中激活了 <code>toc</code> 选项</td></tr><tr><td>mathjax</td><td><code>false</code></td><td>是否开启数学公式支持 ，本文章是否开启 <code>mathjax</code>，且需要在主题的 <code>_config.yml</code> 文件中也需要开启才行</td></tr><tr><td>summary</td><td>无</td><td>文章摘要，自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要</td></tr><tr><td>categories</td><td>无</td><td>文章分类，本主题的分类表示宏观上大的分类，只建议一篇文章一个分类</td></tr><tr><td>tags</td><td>无</td><td>文章标签，一篇文章可以多个标签</td></tr><tr><td>keywords</td><td>文章标题</td><td>文章关键字，SEO 时需要</td></tr><tr><td>reprintPolicy</td><td>cc_by</td><td>文章转载规则， 可以是 cc_by, cc_by_nd, cc_by_sa, cc_by_nc, cc_by_nc_nd, cc_by_nc_sa, cc0, noreprint 或 pay 中的一个</td></tr></tbody></table><blockquote><p><strong>注意</strong>:</p><ol><li>如果 <code>img</code> 属性不填写的话，文章特色图会根据文章标题的 <code>hashcode</code> 的值取余，然后选取主题中对应的特色图片，从而达到让所有文章都的特色图<strong>各有特色</strong>。</li><li><code>date</code> 的值尽量保证每篇文章是唯一的，因为本主题中 <code>Gitalk</code> 和 <code>Gitment</code> 识别 <code>id</code> 是通过 <code>date</code> 的值来作为唯一标识的。</li><li>如果要对文章设置阅读验证密码的功能，不仅要在 Front-matter 中设置采用了 SHA256 加密的 password 的值，还需要在主题的 <code>_config.yml</code> 中激活了配置。有些在线的 SHA256 加密的地址，可供你使用：<a href="http://tool.oschina.net/encrypt?type=2" target="_blank" rel="noopener">开源中国在线工具</a>、<a href="http://encode.chahuo.com/" target="_blank" rel="noopener">chahuo</a>、<a href="http://tool.chinaz.com/tools/hash.aspx" target="_blank" rel="noopener">站长工具</a>。</li><li>您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则</li></ol></blockquote><p>以下为文章的 <code>Front-matter</code> 示例。</p><h3 id="最简示例"><a href="#最简示例" class="headerlink" title="最简示例"></a>最简示例</h3><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme主题介绍<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token punctuation">---</span></code></pre><h3 id="最全示例"><a href="#最全示例" class="headerlink" title="最全示例"></a>最全示例</h3><pre class=" language-yaml"><code class="language-yaml"><span class="token punctuation">---</span><span class="token key atrule">title</span><span class="token punctuation">:</span> typora<span class="token punctuation">-</span>vue<span class="token punctuation">-</span>theme主题介绍<span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2018-09-07 09:25:00</span><span class="token key atrule">author</span><span class="token punctuation">:</span> 赵奇<span class="token key atrule">img</span><span class="token punctuation">:</span> /source/images/xxx.jpg<span class="token key atrule">top</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">cover</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">coverImg</span><span class="token punctuation">:</span> /images/1.jpg<span class="token key atrule">password</span><span class="token punctuation">:</span> 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92<span class="token key atrule">toc</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">mathjax</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">summary</span><span class="token punctuation">:</span> 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要<span class="token key atrule">categories</span><span class="token punctuation">:</span> Markdown<span class="token key atrule">tags</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> Typora  <span class="token punctuation">-</span> Markdown<span class="token punctuation">---</span></code></pre><h2 id="效果截图"><a href="#效果截图" class="headerlink" title="效果截图"></a>效果截图</h2><p><img src="http://static.blinkfox.com/matery-20181202-1.png" alt="首页"></p><p><img src="http://static.blinkfox.com/matery-20181202-2.png" alt="首页推荐文章"></p><p><img src="http://static.blinkfox.com/matery-20181202-3.png" alt="首页文章列表"></p><p><img src="http://static.blinkfox.com/matery-20181202-7.png" alt="首页文章列表"></p><p><img src="http://static.blinkfox.com/matery-20181202-8.png" alt="首页文章列表"></p><h2 id="自定制修改"><a href="#自定制修改" class="headerlink" title="自定制修改"></a>自定制修改</h2><p>在本主题的 <code>_config.yml</code> 中可以修改部分自定义信息，有以下几个部分：</p><ul><li>菜单</li><li>我的梦想</li><li>首页的音乐播放器和视频播放器配置</li><li>是否显示推荐文章名称和按钮配置</li><li><code>favicon</code> 和 <code>Logo</code></li><li>个人信息</li><li>TOC 目录</li><li>文章打赏信息</li><li>复制文章内容时追加版权信息</li><li>MathJax</li><li>文章字数统计、阅读时长</li><li>点击页面的’爱心’效果</li><li>我的项目</li><li>我的技能</li><li>我的相册</li><li><code>Gitalk</code>、<code>Gitment</code>、<code>Valine</code> 和 <code>disqus</code> 评论配置</li><li><a href="http://busuanzi.ibruce.info/" target="_blank" rel="noopener">不蒜子统计</a>和谷歌分析（<code>Google Analytics</code>）</li><li>默认特色图的集合。当文章没有设置特色图时，本主题会根据文章标题的 <code>hashcode</code> 值取余，来选择展示对应的特色图</li></ul><p><strong>我认为个人博客应该都有自己的风格和特色</strong>。如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 <code>_config.yml</code> 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：</p><h3 id="修改主题颜色"><a href="#修改主题颜色" class="headerlink" title="修改主题颜色"></a>修改主题颜色</h3><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */</span><span class="token selector"><span class="token class">.bg-color</span> </span><span class="token punctuation">{</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right, <span class="token hexcode">#4cbf30</span> <span class="token number">0%</span>, <span class="token hexcode">#0f9d58</span> <span class="token number">100%</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@-webkit-keyframes</span> rainbow</span> <span class="token punctuation">{</span>   <span class="token comment" spellcheck="true">/* 动态切换背景颜色. */</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@keyframes</span> rainbow</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/* 动态切换背景颜色. */</span><span class="token punctuation">}</span></code></pre><h3 id="修改-banner-图和文章特色图"><a href="#修改-banner-图和文章特色图" class="headerlink" title="修改 banner 图和文章特色图"></a>修改 banner 图和文章特色图</h3><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.bg-cover'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background-image'</span><span class="token punctuation">,</span> <span class="token string">'url(/medias/banner/'</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.jpg)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p><h2 id="版本记录"><a href="#版本记录" class="headerlink" title="版本记录"></a>版本记录</h2><ul><li>v1.2.2<ul><li>新增了自定义文章 <code>keywords</code> 的功能；</li><li>新增静态彩带点击切换的功能和配置；</li><li>将文章字数统计、彩带和站点运行时间等功能默认设置为 <code>false</code>；</li><li>修改了文章的 <code>description</code> 的 meta 属性优先读取文章的 <code>summary</code> 属性；</li><li>修改了文章标题的 HTML 标签，从 <code>div</code> 改成了 <code>h1</code> 标题；</li><li>修改了页脚年份显示不正确的问题；</li><li>去掉了站点运行时间中多余的 <code>setTimeout</code> 代码；</li></ul></li><li>v1.2.1<ul><li>新增了 TOC 的展开目录层级设置和滚动条功能，防止目录较多的时候目录溢出；</li><li>修改了首页的展示方式为以前的模式；</li><li>修复首页按钮没有边框的问题；</li><li>修复了音乐及吸底模式、视频、推荐文章等不激活时仍然生成首页卡片的问题；</li><li>修复 wordCount 插件未安装的问题，修改了部分配置；</li><li>修复音乐的 JSON 配置中有单引号的情况页面不显示的音乐的问题</li><li>修复标签云在Hexo4.0下链接失效的问题；</li></ul></li><li>v1.2.0<ul><li>新增了 <a href="http://www.daovoice.io/" target="_blank" rel="noopener">DaoVoice</a>、<a href="https://www.tidio.com/" target="_blank" rel="noopener">Tidio</a> 的在线聊天功能；</li><li>新增了两级菜单的功能；</li><li>新增了打字效果的副标题；</li><li>新增了网页内容预加载的功能；</li><li>新增了首页 banner 是否每日切换的配置功能；</li><li>新增了显示 ICP 备案信息的功能，默认未开启；</li><li>新增了百度分析的配置；</li><li>新增了代码块的语言显示、一键复制、显示行号等功能；</li><li>新增了首页轮播图和推荐文章可自定义配置的功能；</li><li>新增了文章页面显示更新日期；</li><li>新增了转载规则的图标；</li><li>修改了分享的布局和显示方式；</li><li>升级更新了部分依赖库的版本；</li><li>其他细节修改和优化；</li></ul></li><li>v1.1.0<ul><li>新增了 <code>emoji</code> 的支持；</li><li>新增了站点运行时间统计及配置；</li><li>新增了留言板的功能,默认未开启；</li><li>新增了 <code>Twitter</code>、<code>Facebook</code>、知乎的社交链接；</li><li>更新了 <code>Valine</code> 的版本为最新版；</li><li>其他小细节的修改；</li></ul></li><li>v1.0.4<ul><li>新增了能为每篇文章都自定义转载规则的功能；</li><li>修复上一页、下一页的自定义 <code>summary</code> 不显示的问题；</li><li>修复了友情链接显示错位的问题，改为了瀑布流的布局方式；</li><li>其他小细节 bug 的修改；</li></ul></li><li>v1.0.3<ul><li>新增了<code>TOC</code>展开、收缩的按钮和相关配置，默认显示此按钮；</li></ul></li><li>v1.0.2<ul><li>升级了 <a href="https://materializecss.com/" target="_blank" rel="noopener">Materialize</a> 框架版本为<code>1.0.0</code>，重构和修改了升级过程中的部分文件或问题；</li><li>新增了首页封面的全屏轮播特效，可以将更重要的文章设置到首页轮播中；</li><li>修复首页第一个按钮是中文的问题</li><li>修复了 iPhone 上点击搜索输入获取焦点的问题；</li><li>修复了 iPhone 上输入框获取焦点后页面放大的问题；</li><li>修复一些文章或 UI 显示问题；</li></ul></li><li>v1.0.1<ul><li>调整 <code>css</code>、<code>js</code> 的文件请求路径在主题的<code>_config.yml</code>中配置，便于你更快捷的配置自己的 CDN；</li><li>新增代码是否折行为可配置，默认为折行；</li><li>默认激活 <code>TOC</code> 功能，并新增为某篇文章关闭 <code>TOC</code> 的 <code>Front-matter</code> 配置选项；</li><li>修复文章滚动时，高亮的目录选项不准确的问题；</li><li><code>IOS</code>下移除搜索框自动获得焦点属性，防止自动获得焦点后导致视图上移；</li></ul></li><li>v1.0.0<ul><li>新增了所有基础功能；</li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 网页前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> blog </tag>
            
            <tag> 主题 </tag>
            
            <tag> 使用方法 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
